<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>1022_zhang&#39;s Blog</title>
  
  <subtitle>Talk Is Cheap ,Show Me The Code</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tianbozhang.coding.me/"/>
  <updated>2018-05-22T04:33:37.958Z</updated>
  <id>https://tianbozhang.coding.me/</id>
  
  <author>
    <name>tianbo_zhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>组件化方案的第三种选择</title>
    <link href="https://tianbozhang.coding.me/the-third-option-of-componentization-scheme.html"/>
    <id>https://tianbozhang.coding.me/the-third-option-of-componentization-scheme.html</id>
    <published>2018-05-22T03:40:00.320Z</published>
    <updated>2018-05-22T04:33:37.958Z</updated>
    
    <content type="html"><![CDATA[<p>背景：<br>市面上已开源的或者已发布的组件化方案，多数都是开发阶段单一工程结构，切换module模式。本质上依然没有达到代码完全隔离的目的，开发与整合测试中的一些痛点还是没有彻底解决</p><p>我们的方案：代码完全隔离，互相只能依赖，不可编辑，各模块可以单独运行，也可组合依赖</p><p>本文内容为亲自实践并验证之后整理，理解了思路，具体实施方案其实可以有多种，最主要的是自己觉得合适的。</p><a id="more"></a><p>先看看常见的方案</p><h2 id="第一种方案-单一项目结构"><a href="#第一种方案-单一项目结构" class="headerlink" title="第一种方案-单一项目结构"></a>第一种方案-单一项目结构</h2><p>该架构模式比较大众化，很多组件化demo 都是这种结构，比如得到</p><blockquote><p>核心思想：所有业务组件及common组件以module形式存在于一个项目内</p></blockquote><p> 优点： 项目没有冗余，便于管理</p><p> 缺点：没有达到组件完全隔离效果，组件插拔使用仍需新建或导入项目</p><h3 id="代码结构"><a href="#代码结构" class="headerlink" title="代码结构"></a>代码结构</h3><p><img src="https://i.imgur.com/l5Bmdw0.png" alt=""></p><p>解读：</p><ul><li><code>app</code>:项目module，无具体业务，不包含具体页面，只负责编译依赖组件、集成打包</li><li><code>module_main</code>: main组件，定义启动页与主页</li><li><code>module_a</code>:业务组件</li><li><code>moduel_baidulocation</code>：功能组件</li><li><code>module_common</code>: 基础公共组件</li></ul><blockquote><p>各组件为独立工程架构后面说明,基本配置及思想不变</p></blockquote><p>组件文件结构 ：</p><p><img src="https://i.imgur.com/G4TJqEx.png" alt=""></p><p>由于组件以Module形式存在于项目内</p><p>因此只保留Module目录文件，其他工程文件统一由主体工程提供</p><h3 id="主体项目配置"><a href="#主体项目配置" class="headerlink" title="主体项目配置"></a>主体项目配置</h3><h4 id="setting-gradle配置"><a href="#setting-gradle配置" class="headerlink" title="setting.gradle配置"></a><code>setting.gradle</code>配置</h4><p><code>include</code>所有组件module</p><p>如：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">':app'</span>,</span><br><span class="line"><span class="string">':module_main'</span>,</span><br><span class="line"><span class="string">':module_a'</span>, </span><br><span class="line">        <span class="string">':module_common'</span></span><br></pre></td></tr></table></figure><p><code>app Module</code>配置</p><h4 id="build-gradle配置"><a href="#build-gradle配置" class="headerlink" title="build.gradle配置"></a><code>build.gradle</code>配置</h4><p>始终为<code>com.android.application</code></p><p>编译依赖：</p><ol><li>依赖底层公共组件 </li><li>集成模式条件下，编译全部组件</li></ol><p>如：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!isDebug.toBoolean())&#123;</span><br><span class="line">     implementation <span class="keyword">project</span>(<span class="string">':module_main'</span>)</span><br><span class="line">     implementation <span class="keyword">project</span>(<span class="string">':module_a'</span>)</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> implementation <span class="keyword">project</span>(<span class="string">':module_common'</span>)</span><br></pre></td></tr></table></figure><h3 id="调试运行"><a href="#调试运行" class="headerlink" title="调试运行"></a>调试运行</h3><p>修改<code>gradle.properties</code></p><p><code>isDebug=true</code>，独立运行调试</p><p><code>isDebug=false</code>，编译运行整个project</p><p>组件单独运行与整个project运行切换：</p><p><img src="https://i.imgur.com/im44eWX.png" alt=""></p><blockquote><p><strong>注意</strong>:组件间资源重复会在最终打包时发生冲突，即使通过编译成功打包，在运行时也会出现资源问题。建议增加模块前缀加以区分避免</p></blockquote><h2 id="第二种方案-多项目结构"><a href="#第二种方案-多项目结构" class="headerlink" title="第二种方案-多项目结构"></a>第二种方案-多项目结构</h2><blockquote><p>核心思想：每个组件都做为一个独立项目存在 ,负责组合打包各组件的主项目只有一个</p></blockquote><p> 优点： 除公共组件或功能组件存在依赖关系外，组件间互相隔离</p><p> 缺点：项目冗余</p><h3 id="代码结构-1"><a href="#代码结构-1" class="headerlink" title="代码结构"></a>代码结构</h3><p><img src="https://i.imgur.com/DGWVeEf.png" alt=""></p><p>解读：</p><ul><li><code>ComponentApp</code>为主工程，最终负责打包组件，无具体业务，<strong>只</strong>配置程序相关内容</li><li><code>ComponentMain</code>为主组件，配置启动页与首页</li><li><code>ComponentA</code>为业务组件</li><li><code>ComponentBaidu</code> 为功能组件</li><li><code>ComponentCommon</code> 为公共组件</li></ul><blockquote><p>所有组件依赖公共组件</p><p>继承<code>BaseApplication</code>, 开发时将全局Application转型为<code>BaseApplication</code>,避免打包时 Application失效</p></blockquote><h3 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h3><p><img src="https://i.imgur.com/LgjfA1r.png" alt=""></p><ul><li><p>具体路径按需存放</p></li><li><p>各组件均为独立项目</p></li></ul><h3 id="主体项目配置-1"><a href="#主体项目配置-1" class="headerlink" title="主体项目配置"></a>主体项目配置</h3><h4 id="setting-gradle配置-1"><a href="#setting-gradle配置-1" class="headerlink" title="setting.gradle配置"></a><code>setting.gradle</code>配置</h4><p>以依赖项目与主体项目在同级目录为例：</p><p>引入依赖组件，使用<code>project (&#39;:项目&#39;).projectDir = new File(&#39;../项目&#39;)</code>定义路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">include &apos;:app&apos;</span><br><span class="line"></span><br><span class="line">include  &apos;:ComponentMain&apos;</span><br><span class="line">project (&apos;:ComponentMain&apos;).projectDir = new File(&apos;../ComponentMain&apos;)</span><br><span class="line">include &apos;:ComponentMain:main&apos;</span><br><span class="line"></span><br><span class="line">include  &apos;:ComponentA&apos;</span><br><span class="line">project (&apos;:ComponentA&apos;).projectDir = new File(&apos;../ComponentA&apos;)</span><br><span class="line">include &apos;:ComponentA:moduleA&apos;</span><br><span class="line"></span><br><span class="line">include  &apos;:ComponentCommon&apos;</span><br><span class="line">project (&apos;:ComponentCommon&apos;).projectDir = new File(&apos;../ComponentCommon&apos;)</span><br><span class="line">include &apos;:ComponentCommon:common&apos;</span><br></pre></td></tr></table></figure><h4 id="build-gradle配置-1"><a href="#build-gradle配置-1" class="headerlink" title="build.gradle配置"></a><code>build.gradle</code>配置</h4><p>编译各组件内指定<code>Module</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if(!isDebug.toBoolean())&#123;</span><br><span class="line">      implementation project(&apos;:ComponentMain:main&apos;)</span><br><span class="line">      implementation project(&apos;:ComponentA:moduleA&apos;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  implementation project(&apos;:ComponentCommon:common&apos;)</span><br></pre></td></tr></table></figure><h3 id="调试运行-1"><a href="#调试运行-1" class="headerlink" title="调试运行"></a>调试运行</h3><p>修改 <code>gradle.properties</code> 内<code>isDebug</code></p><p><img src="https://i.imgur.com/aj9Nrgk.png" alt=""></p><p><code>app Module</code>由于没有默认Activity，因此无法运行</p><blockquote><p><strong>注意:</strong>有依赖关系的组件 配置需一致，否则编译失败</p></blockquote><h2 id="第三种方案-彻底组件化"><a href="#第三种方案-彻底组件化" class="headerlink" title="第三种方案-彻底组件化"></a>第三种方案-彻底组件化</h2><p> 核心思想：最大化隔离，最少代码侵入，最少修改感知</p><h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h3><ol><li>抛弃开发阶段与发布阶段gradle配置的Library与Application切换</li><li>每一个组件都是一个独立的工程，组件仍是Library，与开发阶段使用的demo分离。整体工程一并发布。最终只能有一个Application</li><li>组件互相隔离，互相不可编辑，只能使用。Library 发布为jar或aar文件，远程依赖引入</li><li>清单文件配置（所有我们知道的配置）都可以写进Library，最后打包时会自动合并，无需人为干扰。</li><li>gradle扩展配置，manifest 经常变化的配置写进gradle配置文件，减少配置侵入</li><li>业务组件之间依赖后通过路由或其他方式交互（自行选择），功能组件可直接依赖使用</li></ol><h3 id="涉及知识点"><a href="#涉及知识点" class="headerlink" title="涉及知识点"></a>涉及知识点</h3><p><em>仓库以maven为例</em>，以下内容，搜索引擎都可解答</p><ol><li>Library Maven 配置</li><li>搭建本地Maven仓库</li><li>Manifest动态配置替换</li><li>Gradle插件开发</li><li>组件交互：Arouter，ActivityRouter</li></ol><h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><p>理解以上所有点，一步一个脚印</p><h4 id="组件交互方案"><a href="#组件交互方案" class="headerlink" title="组件交互方案"></a>组件交互方案</h4><ul><li><a href="https://github.com/alibaba/ARouter" target="_blank" rel="noopener">阿里ARouter 框架</a></li><li><a href="https://github.com/mzule/ActivityRouter" target="_blank" rel="noopener">ActivityRouter</a></li></ul><h4 id="仓库发布方式"><a href="#仓库发布方式" class="headerlink" title="仓库发布方式"></a>仓库发布方式</h4><p>分类</p><ul><li><code>jcenter</code></li><li><code>maven</code></li><li>本地私有仓库</li></ul><h5 id="私有仓库搭建"><a href="#私有仓库搭建" class="headerlink" title="私有仓库搭建"></a>私有仓库搭建</h5><p><a href="http://geek.csdn.net/news/detail/53459" target="_blank" rel="noopener">拥抱 Android Studio 之四：Maven 仓库使用与私有仓库搭建</a><br><a href="https://yangbo.tech/2015/10/19/distribute-android-library-to-jcetner/" target="_blank" rel="noopener">在Android Studio中发布Library到<code>jCenter</code>公共仓库</a><br><a href="https://www.2cto.com/kf/201701/544616.html" target="_blank" rel="noopener">自建私有Maven 仓库</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;背景：&lt;br&gt;市面上已开源的或者已发布的组件化方案，多数都是开发阶段单一工程结构，切换module模式。本质上依然没有达到代码完全隔离的目的，开发与整合测试中的一些痛点还是没有彻底解决&lt;/p&gt;
&lt;p&gt;我们的方案：代码完全隔离，互相只能依赖，不可编辑，各模块可以单独运行，也可组合依赖&lt;/p&gt;
&lt;p&gt;本文内容为亲自实践并验证之后整理，理解了思路，具体实施方案其实可以有多种，最主要的是自己觉得合适的。&lt;/p&gt;
    
    </summary>
    
      <category term="android" scheme="https://tianbozhang.coding.me/categories/android/"/>
    
      <category term="组件化" scheme="https://tianbozhang.coding.me/categories/android/%E7%BB%84%E4%BB%B6%E5%8C%96/"/>
    
    
      <category term="实战" scheme="https://tianbozhang.coding.me/tags/%E5%AE%9E%E6%88%98/"/>
    
      <category term="总结" scheme="https://tianbozhang.coding.me/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="组件化" scheme="https://tianbozhang.coding.me/tags/%E7%BB%84%E4%BB%B6%E5%8C%96/"/>
    
      <category term="进阶" scheme="https://tianbozhang.coding.me/tags/%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>自定义Gradle插件，之扩展Gradle配置</title>
    <link href="https://tianbozhang.coding.me/gradle-custom-configuration.html"/>
    <id>https://tianbozhang.coding.me/gradle-custom-configuration.html</id>
    <published>2018-05-16T05:39:59.258Z</published>
    <updated>2018-05-16T05:38:55.819Z</updated>
    
    <content type="html"><![CDATA[<p>把一些经常变化的配置放在Gradle内，达到变化时只修改Gradle文件，不去动其他文件，减少出错的概率目的<br>参考ShareSDK 的项目配置思路，实现我们自己的Gradle扩展配置</p><blockquote><p>注：暂不涉及Gradle配置对象直间的值传递方案</p></blockquote><a id="more"></a><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><p><img src="https://i.imgur.com/uXMCHN2.png" alt=""></p><h3 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h3><ol><li>插件定义：<br>`plugin-custom.properties 文件：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation-class = com.company.plugin.CustomPlugin`</span><br></pre></td></tr></table></figure><p>说明：</p><p>文件名.properties 即插件<code>id</code>，也是我们后面要引入时使用的id</p><p>类似于：<code>apply plugin&#39;com.android.applicaiton&#39;</code></p><p>文件配置内容：指定具体插件实现类 <code>com.company.plugin.CustomPlugin</code></p><ol><li><p>自定义插件实现类：<br><code>CustomPlugin.groovy</code></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomPlugin</span> <span class="keyword">implements</span> <span class="title">Plugin</span>&lt;<span class="title">Project</span>&gt;&#123;</span></span><br><span class="line">    </span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">void</span> apply(Project project) &#123;</span><br><span class="line">   </span><br><span class="line"><span class="comment">//扩展属性定义</span></span><br><span class="line">       project.extensions.create(<span class="string">'pluginSupport'</span>, TinkerConfigSupport)</span><br><span class="line">       <span class="comment">// 应用 其他插件,以Tinker为例，等同于build.gradle应用</span></span><br><span class="line">       project.apply <span class="string">plugin:</span> <span class="string">'com.tencent.tinker.patch'</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>扩展属性定义，由create指定，String类型<br><code>pluginSupport</code></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">project.extensions.create(<span class="string">'pluginSupport'</span>, PluginConfig)</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：子类属性必需初始化，否则异常</p></blockquote><p>子属性定义及构造方法初始化属性</p><p><code>PluginConfig.groovy</code></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PluginConfig</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">boolean</span> booleanValue</span><br><span class="line"></span><br><span class="line">    String stringValue</span><br><span class="line"></span><br><span class="line">    PluginConfig() &#123;</span><br><span class="line">        booleanValue = <span class="literal">false</span></span><br><span class="line">        stringValue = <span class="string">""</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="插件build-gradle配置"><a href="#插件build-gradle配置" class="headerlink" title="插件build.gradle配置"></a>插件<code>build.gradle</code>配置</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//语法插件</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'groovy'</span></span><br><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">//语法支持</span></span><br><span class="line">    compile gradleApi()</span><br><span class="line">    compile localGroovy()</span><br><span class="line"><span class="comment">//插件支持</span></span><br><span class="line">    compile <span class="string">'com.google.gradle:osdetector-gradle-plugin:1.2.1'</span></span><br><span class="line">    compile <span class="string">'com.android.tools.build:gradle:2.1.0'</span></span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sourceSets &#123;</span><br><span class="line">    main &#123;</span><br><span class="line">        groovy &#123;</span><br><span class="line">            srcDir <span class="string">'src/main/groovy'</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        resources &#123;</span><br><span class="line">            srcDir <span class="string">'src/main/resources'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>两个重要方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">project.afterEvaluate 解析gradle配置文件之后执行</span><br><span class="line">project.beforeEvaluate 解析之前执行</span><br></pre></td></tr></table></figure></p><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><p>注：发布目录根据需要修改</p><p>插件<code>buidl.gradle</code>配置<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发布插件</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'maven'</span></span><br><span class="line"></span><br><span class="line">uploadArchives &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenDeployer &#123;</span><br><span class="line">            <span class="comment">//设置插件的GAV参数</span></span><br><span class="line">            pom.groupId = <span class="string">'groupId'</span></span><br><span class="line">            pom.artifactId = <span class="string">'artifactId'</span></span><br><span class="line">            pom.version = <span class="number">1.0</span><span class="comment">//指定版本号</span></span><br><span class="line">            <span class="comment">//文件发布到本地目录</span></span><br><span class="line">            repository(<span class="string">url:</span> uri(<span class="string">'../plugin'</span>))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>配置完成后执行（Terminal也可）：<br><code>Gradle-&gt;build-&gt;uploadArchives</code></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>需要引入的module<code>build.gradle</code>文件，添加如下代码即可完成引入：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">buildscript&#123;</span><br><span class="line">    dependencies&#123;</span><br><span class="line">        classpath <span class="string">'groupId:artifactId:1.0'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'plugin-custom'</span></span><br></pre></td></tr></table></figure><p>扩展属性配置赋值，build.gradle文件：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pluginSupport&#123;</span><br><span class="line">    booleanValue = <span class="literal">true</span>;</span><br><span class="line">    stringValue = <span class="string">"自定义插件扩展属性值"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p><a href="http://www.open-open.com/lib/view/open1484207750547.html" target="_blank" rel="noopener">参考</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;把一些经常变化的配置放在Gradle内，达到变化时只修改Gradle文件，不去动其他文件，减少出错的概率目的&lt;br&gt;参考ShareSDK 的项目配置思路，实现我们自己的Gradle扩展配置&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：暂不涉及Gradle配置对象直间的值传递方案&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="原创" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Android" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/Android/"/>
    
      <category term="进阶" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/Android/%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Gradle" scheme="https://tianbozhang.coding.me/tags/Gradle/"/>
    
      <category term="配置" scheme="https://tianbozhang.coding.me/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="扩展" scheme="https://tianbozhang.coding.me/tags/%E6%89%A9%E5%B1%95/"/>
    
      <category term="自定义" scheme="https://tianbozhang.coding.me/tags/%E8%87%AA%E5%AE%9A%E4%B9%89/"/>
    
  </entry>
  
  <entry>
    <title>微信小游戏屏幕适配</title>
    <link href="https://tianbozhang.coding.me/minigame-screenadaptation.html"/>
    <id>https://tianbozhang.coding.me/minigame-screenadaptation.html</id>
    <published>2018-05-15T03:32:46.559Z</published>
    <updated>2018-05-16T02:14:59.774Z</updated>
    
    <content type="html"><![CDATA[<p>很久没有发文了，最近一直在研究微信小游戏，屏幕适配问题真的是哪里都存在。<br>无奈论坛资料及可行的解决方案还是太少，还是得靠自己。<br>且来看一看在微信上如何达到适配多样化屏幕</p><p>奔着解决方案来的可直达解决方案</p><p>后续将根据实际遇到的其他问题，继续发出真实可行的解决方案</p><a id="more"></a><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>LayaAir 引擎<br>TypeScripte 语言</p><h3 id="需要关注的点"><a href="#需要关注的点" class="headerlink" title="需要关注的点"></a>需要关注的点</h3><ol><li>主要集中在背景图及边框附近的UI元素位置重设</li><li>缩放后安全区域（不会被裁切）内的UI 响应位置是否会被改变</li></ol><h2 id="与屏幕有关的一些基础内容"><a href="#与屏幕有关的一些基础内容" class="headerlink" title="与屏幕有关的一些基础内容"></a>与屏幕有关的一些基础内容</h2><h3 id="屏幕方向"><a href="#屏幕方向" class="headerlink" title="屏幕方向"></a>屏幕方向</h3><p>不受屏幕方向影响，不会改变物理屏幕方向</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//竖屏 </span></span><br><span class="line">Laya.stage.screenMode = Laya.Stage.SCREEN_VERTICAL</span><br><span class="line"><span class="comment">//横屏</span></span><br><span class="line">Laya.stage.screenMode = Laya.Stage.SCREEN_HORIZONTAL</span><br></pre></td></tr></table></figure><h3 id="缩放模式"><a href="#缩放模式" class="headerlink" title="缩放模式"></a>缩放模式</h3><blockquote><p><code>Laya.init</code>之后，舞台宽高无法再更改</p></blockquote><p><code>Laya.stage.scaleMode</code></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Laya.Stage.SCALE_NOSCALE  <span class="string">"noscale"</span></span><br><span class="line">Laya.Stage.SCALE_FULL   <span class="string">"full"</span></span><br><span class="line">Laya.Stage.SCALE_EXACTFIT <span class="string">"exactfit"</span></span><br><span class="line">Laya.Stage.SCALE_SHOWALL <span class="string">"showall"</span></span><br><span class="line">Laya.Stage.SCALE_NOBORDER  <span class="string">"noborder"</span></span><br><span class="line">Laya.Stage.SCALE_FIXED_WIDTH  <span class="string">"fixedwidth"</span></span><br><span class="line">Laya.Stage.SCALE_FIXED_HEIGHT  <span class="string">"fixedheight"</span></span><br><span class="line">Laya.Stage.SCALE_FIXED_AUTO <span class="string">"fixedauto"</span></span><br></pre></td></tr></table></figure><p><a href="https://ldc.layabox.com/doc/?nav=zh-ts-1-8-4" target="_blank" rel="noopener">缩放详解</a></p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><code>noscale</code>: 不缩放不变形，1:1原始比例，左上角对齐，内容大于屏幕被裁切，小于屏幕出现黑边</p><p><code>full</code>：不缩放，原始比例，超出屏幕部分被裁切</p><p><code>exactfit</code>：非等比缩放，填满屏幕，设计宽高与设备不等时会变形</p><p><code>showall</code>: 等比缩放，按屏幕宽高与设计比例最小比率等比缩放，可能会黑边</p><p><code>noborder</code>：等比缩放，按屏幕宽高与设计宽高最大比例缩放，超过屏幕部分被裁切</p><p><code>fixedheight</code>:按屏幕宽高等比缩放，高度不变，宽度适配（设计高度*屏幕宽高比），宽度超出会裁切</p><p><code>fixedwidth</code>: 按屏幕宽高等比缩放，宽度不变，高度适配 (设计宽度*屏幕高宽比)，高度不够会黑边</p><p><code>fixedauto</code>:自动计算选择<code>fixedwidth</code>或<code>fixedheight</code></p><p>不裁剪方案：<code>noscale</code>, <code>exactfit</code>，<code>showall</code></p><p>不缩放：<code>noscale</code>, <code>full</code></p><p>等比缩放会裁剪：<code>noborder</code>,<code>fixedheight</code></p><h4 id="其他引擎的参考方案"><a href="#其他引擎的参考方案" class="headerlink" title="其他引擎的参考方案"></a>其他引擎的参考方案</h4><p>白鹭的适配方案:<code>noscale</code>,<code>exactfit</code>,<code>showall</code>,<code>noborder</code></p><p>cocos的策略:</p><p>适配高度或宽度或根据宽高比自动选择，裁剪背景图，避免黑边或空白，设置子UI元素自动对齐到可见区域</p><h4 id="Laya缩放适配验证"><a href="#Laya缩放适配验证" class="headerlink" title="Laya缩放适配验证"></a><code>Laya</code>缩放适配验证</h4><blockquote><p>基于微信开发者工具自带的模拟器实验</p></blockquote><h5 id="设计宽高与屏幕一致时"><a href="#设计宽高与屏幕一致时" class="headerlink" title="设计宽高与屏幕一致时"></a>设计宽高与屏幕一致时</h5><p>各模式无影响</p><h5 id="iphonex"><a href="#iphonex" class="headerlink" title="iphonex:"></a>iphonex:</h5><p><code>fixedwidth</code>，宽度不变，高度适配，黑边</p><p><code>fiexdheight</code>，高度不变，宽度适配，被裁剪</p><p>full: 左上角，未铺满屏幕，与小米note2表现一致</p><p>其他模式差距细微</p><h5 id="6到-iphone7P"><a href="#6到-iphone7P" class="headerlink" title="6到 iphone7P"></a>6到 iphone7P</h5><p>full: 左上角，未铺满屏幕</p><p>其他模式差距细微</p><h5 id="nexus5到nexus6"><a href="#nexus5到nexus6" class="headerlink" title="nexus5到nexus6"></a>nexus5到nexus6</h5><p>与6到7p表现一致</p><h2 id="两种可行的解决方案"><a href="#两种可行的解决方案" class="headerlink" title="两种可行的解决方案"></a>两种可行的解决方案</h2><h3 id="两套图适配"><a href="#两套图适配" class="headerlink" title="两套图适配"></a>两套图适配</h3><p>iphonex 大分辨率与5s 小分辨率对比图见《游戏截图》文档</p><hr><p>按物理分辨率取比，以16：9为基础</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//比例大于16:9的，标记为大分辨率</span></span><br><span class="line"><span class="keyword">this</span>.isLargeScreen= <span class="built_in">Math</span>.floor(height/width)&gt;<span class="built_in">Math</span>.floor(<span class="number">16</span>/<span class="number">9</span>)</span><br></pre></td></tr></table></figure><p>背景资源分别获取</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span>(<span class="keyword">this</span>.isLargeScreen) bg.skin = <span class="string">"大图"</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">else</span> bg.skin = <span class="string">"小图"</span>;</span><br></pre></td></tr></table></figure><p>不缩放(默认值，可不写)</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Laya.stage.scaleMode = Laya.Stage.SCALE_NOSCALE</span><br></pre></td></tr></table></figure><p>舞台尺寸设置为固定物理尺寸，保证各16:9 设备等比缩放，不会出现黑边</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.isLargeScreen) &#123;</span><br><span class="line">           Laya.init(<span class="number">1125</span>, <span class="number">2436</span>, Laya.WebGL);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           Laya.init(<span class="number">640</span>, <span class="number">1136</span>, Laya.WebGL);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>原因：现有缩放模式不支持两边裁剪，至多为一边裁剪</p><h3 id="一套图适配"><a href="#一套图适配" class="headerlink" title="一套图适配"></a>一套图适配</h3><p>示例：<a href="http://tcxxm.y2game.net/" target="_blank" rel="noopener">天才削熊猫</a></p><p><strong>思路</strong>：高度不变，宽度适配，水平居中，两边裁剪，元素相对布局，设计时设置安全区域</p><p>实现：一套背景图，<code>1480x1920</code>，水平居中：centerx = 0，y = 0，启用相对父类布局<code>layoutEnable = true</code></p><p>屏幕宽高：<code>1080x1920</code></p><p>代码或UI 元素：启用相对父类布局，设置left,right top ,bottom，<code>layoutEnable = true</code></p><p>缩放模式：<code>fixedHeight</code></p><p>代码示例</p><p>以<code>1080x1920</code>(具体看需求)尺寸图为标准、设计尺寸，路径以res为例</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//舞台初始化</span></span><br><span class="line">Laya.init(<span class="number">1080</span>, <span class="number">1920</span>);</span><br><span class="line"><span class="comment">//缩放模式</span></span><br><span class="line">Laya.stage.scaleMode = Laya.Stage.SCALE_FIXED_HEIGHT;</span><br><span class="line"><span class="comment">//背景添加</span></span><br><span class="line"><span class="keyword">var</span> imageBg:Laya.Image = <span class="keyword">new</span> Laya.Image();  </span><br><span class="line">imageBg.skin = <span class="string">"res/bg_main.png"</span>;</span><br><span class="line">imageBg.centerX = <span class="number">0</span>;</span><br><span class="line">imageBg.layoutEnabled = <span class="literal">true</span>;</span><br><span class="line">imageBg.y = <span class="number">0</span>;</span><br><span class="line">Laya.stage.addChild(imageBg);</span><br><span class="line"><span class="comment">//UI元素添加，以添加到舞台为例</span></span><br><span class="line"> <span class="keyword">var</span> btn: Laya.Button = <span class="keyword">new</span> Laya.Button();</span><br><span class="line">btn.skin = <span class="string">"res/btn.png"</span>;</span><br><span class="line">btn.layoutEnabled = <span class="literal">true</span>;</span><br><span class="line">btn.left = <span class="number">165</span>;</span><br><span class="line">btn.bottom = <span class="number">50</span>;</span><br><span class="line">btn.stateNum = <span class="number">1</span>;</span><br><span class="line">Laya.stage.addChild(btn);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很久没有发文了，最近一直在研究微信小游戏，屏幕适配问题真的是哪里都存在。&lt;br&gt;无奈论坛资料及可行的解决方案还是太少，还是得靠自己。&lt;br&gt;且来看一看在微信上如何达到适配多样化屏幕&lt;/p&gt;
&lt;p&gt;奔着解决方案来的可直达解决方案&lt;/p&gt;
&lt;p&gt;后续将根据实际遇到的其他问题，继续发出真实可行的解决方案&lt;/p&gt;
    
    </summary>
    
      <category term="原创" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="游戏开发" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="微信小游戏" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
    
      <category term="总结" scheme="https://tianbozhang.coding.me/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="微信" scheme="https://tianbozhang.coding.me/tags/%E5%BE%AE%E4%BF%A1/"/>
    
      <category term="小游戏" scheme="https://tianbozhang.coding.me/tags/%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
      <category term="屏幕适配" scheme="https://tianbozhang.coding.me/tags/%E5%B1%8F%E5%B9%95%E9%80%82%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>安卓常见动画合集</title>
    <link href="https://tianbozhang.coding.me/android-animation-collection.html"/>
    <id>https://tianbozhang.coding.me/android-animation-collection.html</id>
    <published>2018-04-01T16:00:00.000Z</published>
    <updated>2018-05-15T06:59:01.173Z</updated>
    
    <content type="html"><![CDATA[<p>注：除特殊说明停止维护外，列出的库仍在维护中。长时间未维护的依赖库，提供了jar文件的，可直接依赖jar 文件</p><a id="more"></a><h2 id="谷歌提供"><a href="#谷歌提供" class="headerlink" title="谷歌提供"></a>谷歌提供</h2><h3 id="属性动画3-0以上"><a href="#属性动画3-0以上" class="headerlink" title="属性动画3.0以上"></a>属性动画3.0以上</h3><h4 id="官方api自带"><a href="#官方api自带" class="headerlink" title="官方api自带"></a><a href="https://developer.android.google.cn/guide/topics/graphics/prop-animation.html" target="_blank" rel="noopener">官方api自带</a></h4><ul><li>Animators:</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ValueAnimator</span><br><span class="line">ObjectAnimator</span><br><span class="line">AnimatorSet</span><br></pre></td></tr></table></figure><ul><li>Evaluators:</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IntEvaluator</span><br><span class="line">FloatEvaluator</span><br><span class="line">ArgbEvaluator</span><br><span class="line">TypeEvaluator</span><br></pre></td></tr></table></figure><ul><li>Interpolators:</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">AccelerateDecelerateInterpolator</span><br><span class="line">AccelerateInterpolator</span><br><span class="line">AnticipateInterpolator</span><br><span class="line">AnticipateOvershootInterpolator</span><br><span class="line">BounceInterpolator</span><br><span class="line">CycleInterpolator</span><br><span class="line">DecelerateInterpolator</span><br><span class="line">LinearInterpolator</span><br><span class="line">OvershootInterpolator</span><br><span class="line">TimeInterpolator</span><br></pre></td></tr></table></figure><ul><li>监听：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Animator.AnimatorListener</span><br><span class="line">ValueAnimator.AnimatorUpdateListener</span><br></pre></td></tr></table></figure><ul><li>xml</li></ul><p>动画类对应标签<br><code>ValueAnimator -&gt; &lt;animator&gt;</code></p><p><code>ObjectAnimator - &lt;objectAnimator&gt;</code></p><p><code>AnimatorSet - &lt;set&gt;</code></p><h4 id="代码-使用"><a href="#代码-使用" class="headerlink" title="代码 使用"></a>代码 使用</h4><ul><li>ValueAnimator</li></ul><p>方法：<code>ofInt()</code>, <code>ofFloat()</code>,<code>ofObject()</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ValueAnimator animation = ValueAnimator.ofFloat(<span class="number">0f</span>, <span class="number">100f</span>);</span><br><span class="line">animation.setDuration(<span class="number">1000</span>);</span><br><span class="line">animation.start();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ValueAnimator animation = ValueAnimator.ofObject(<span class="keyword">new</span> MyTypeEvaluator(), startPropertyValue, endPropertyValue);</span><br><span class="line">animation.setDuration(<span class="number">1000</span>);</span><br><span class="line">animation.start();</span><br></pre></td></tr></table></figure><p>使用 <code>ValueAnimator</code> 对象的值</p><ul><li>设置<code>AnimatorUpdateListener</code> 监听</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">animation.addUpdateListener(<span class="keyword">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator updatedAnimation)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// You can use the animated value in a property that uses the</span></span><br><span class="line">        <span class="comment">// same type as the animation. In this case, you can use the</span></span><br><span class="line">        <span class="comment">// float value in the translationX property.</span></span><br><span class="line">        <span class="keyword">float</span> animatedValue = (<span class="keyword">float</span>)updatedAnimation.getAnimatedValue();</span><br><span class="line">        textView.setTranslationX(animatedValue);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><code>ObjectAnimator</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ObjectAnimator animation = ObjectAnimator.ofFloat(textView, <span class="string">"translationX"</span>, <span class="number">100f</span>);</span><br><span class="line">animation.setDuration(<span class="number">1000</span>);</span><br><span class="line">animation.start();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ObjectAnimator.ofFloat(targetObject, <span class="string">"propName"</span>, <span class="number">1f</span>)</span><br></pre></td></tr></table></figure><ul><li><code>AnimatorSet</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">AnimatorSet bouncer = <span class="keyword">new</span> AnimatorSet();</span><br><span class="line">bouncer.play(bounceAnim).before(squashAnim1);</span><br><span class="line">bouncer.play(squashAnim1).with(squashAnim2);</span><br><span class="line">bouncer.play(squashAnim1).with(stretchAnim1);</span><br><span class="line">bouncer.play(squashAnim1).with(stretchAnim2);</span><br><span class="line">bouncer.play(bounceBackAnim).after(stretchAnim2);</span><br><span class="line">ValueAnimator fadeAnim = ObjectAnimator.ofFloat(newBall, <span class="string">"alpha"</span>, <span class="number">1f</span>, <span class="number">0f</span>);</span><br><span class="line">fadeAnim.setDuration(<span class="number">250</span>);</span><br><span class="line">AnimatorSet animatorSet = <span class="keyword">new</span> AnimatorSet();</span><br><span class="line">animatorSet.play(bouncer).before(fadeAnim);</span><br><span class="line">animatorSet.start();</span><br></pre></td></tr></table></figure><h4 id="监听"><a href="#监听" class="headerlink" title="监听"></a>监听</h4><ul><li><p>API：</p><p><code>Animator.AnimatorListener</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onAnimationStart()</span><br><span class="line">onAnimationEnd()</span><br><span class="line">onAnimationRepeat()</span><br><span class="line">onAnimationCancel()</span><br></pre></td></tr></table></figure><p> <code>ValueAnimator.AnimatorUpdateListener</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onAnimationUpdate()</span><br><span class="line">getAnimatedValue()</span><br></pre></td></tr></table></figure></li><li><p>示例： </p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ValueAnimator fadeAnim = ObjectAnimator.ofFloat(newBall, <span class="string">"alpha"</span>, <span class="number">1f</span>, <span class="number">0f</span>);</span><br><span class="line">fadeAnim.setDuration(<span class="number">250</span>);</span><br><span class="line">fadeAnim.addListener(<span class="keyword">new</span> AnimatorListenerAdapter() &#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationEnd</span><span class="params">(Animator animation)</span> </span>&#123;</span><br><span class="line">    balls.remove(((ObjectAnimator)animation).getTarget());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ViewGroup"><a href="#ViewGroup" class="headerlink" title="ViewGroup"></a>ViewGroup</h4><p>API: </p><p>void setAnimator(int transitionType,   Animator animator)</p><p>transitionType:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LayoutTransition.APPEARING </span><br><span class="line">LayoutTransition.CHANGE_APPEARING</span><br><span class="line">LayoutTransition.DISAPPEARING </span><br><span class="line">LayoutTransition.CHANGE_DISAPPEARING</span><br></pre></td></tr></table></figure><p>需Layout布局属性支持：<code>android:animateLayoutchanges= true</code></p><h4 id="View状态动画"><a href="#View状态动画" class="headerlink" title="View状态动画"></a>View状态动画</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- the pressed state; increase x and y size to 150% --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_pressed</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">objectAnimator</span> <span class="attr">android:propertyName</span>=<span class="string">"scaleX"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:duration</span>=<span class="string">"@android:integer/config_shortAnimTime"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:valueTo</span>=<span class="string">"1.5"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:valueType</span>=<span class="string">"floatType"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">objectAnimator</span> <span class="attr">android:propertyName</span>=<span class="string">"scaleY"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:duration</span>=<span class="string">"@android:integer/config_shortAnimTime"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:valueTo</span>=<span class="string">"1.5"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:valueType</span>=<span class="string">"floatType"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- the default, non-pressed state; set x and y size to 100% --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_pressed</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">objectAnimator</span> <span class="attr">android:propertyName</span>=<span class="string">"scaleX"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:duration</span>=<span class="string">"@android:integer/config_shortAnimTime"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:valueTo</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:valueType</span>=<span class="string">"floatType"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">objectAnimator</span> <span class="attr">android:propertyName</span>=<span class="string">"scaleY"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:duration</span>=<span class="string">"@android:integer/config_shortAnimTime"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:valueTo</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:valueType</span>=<span class="string">"floatType"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure><p>布局引用： <a href="https://developer.android.google.cn/reference/android/view/View.html#attr_android:stateListAnimator" target="_blank" rel="noopener"><code>android:stateListAnimator</code></a> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button android:stateListAnimator=&quot;@xml/animate_scale&quot;</span><br><span class="line">... /&gt;</span><br></pre></td></tr></table></figure><h4 id="View"><a href="#View" class="headerlink" title="View"></a>View</h4><p>API:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">translationX,translationY<span class="comment">//相对父View</span></span><br><span class="line">rotation, rotationX,  rotationY<span class="comment">//相对支点 2D: rotation ,3D旋转</span></span><br><span class="line">scaleX  scaleY <span class="comment">//相对支点 2D缩放</span></span><br><span class="line">pivotX  pivotY <span class="comment">//控制旋转，缩放支点，默认值为中间</span></span><br><span class="line">x  y <span class="comment">//相对父View 最终位置</span></span><br><span class="line">alpha<span class="comment">//View透明度 默认值1，0为完全透明</span></span><br></pre></td></tr></table></figure><p>示例:</p><p>创建动画，指定View属性即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ObjectAnimator.ofFloat(myView, <span class="string">"rotation"</span>, <span class="number">0f</span>, <span class="number">360f</span>);</span><br></pre></td></tr></table></figure><h4 id="Interpolator"><a href="#Interpolator" class="headerlink" title="Interpolator"></a>Interpolator</h4><ul><li><code>AccelerateDecelerateInterpolator</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getInterpolation</span><span class="params">(<span class="keyword">float</span> input)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">float</span>)(Math.cos((input + <span class="number">1</span>) * Math.PI) / <span class="number">2.0f</span>) + <span class="number">0.5f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>LinearInterpolator</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getInterpolation</span><span class="params">(<span class="keyword">float</span> input)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> input;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ViewPropertyAnimator"><a href="#ViewPropertyAnimator" class="headerlink" title="ViewPropertyAnimator"></a><code>ViewPropertyAnimator</code></h4><ul><li>组合 <code>ObjectAnimator</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ObjectAnimator animX = ObjectAnimator.ofFloat(myView, <span class="string">"x"</span>, <span class="number">50f</span>);</span><br><span class="line">ObjectAnimator animY = ObjectAnimator.ofFloat(myView, <span class="string">"y"</span>, <span class="number">100f</span>);</span><br><span class="line">AnimatorSet animSetXY = <span class="keyword">new</span> AnimatorSet();</span><br><span class="line">animSetXY.playTogether(animX, animY);</span><br><span class="line">animSetXY.start();</span><br></pre></td></tr></table></figure><ul><li>单个<code>ObjectAnimator</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PropertyValuesHolder pvhX = PropertyValuesHolder.ofFloat(<span class="string">"x"</span>, <span class="number">50f</span>);</span><br><span class="line">PropertyValuesHolder pvhY = PropertyValuesHolder.ofFloat(<span class="string">"y"</span>, <span class="number">100f</span>);</span><br><span class="line">ObjectAnimator.ofPropertyValuesHolder(myView, pvhX, pvyY).start();</span><br></pre></td></tr></table></figure><ul><li>ViewPropertyAnimator</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">myView.animate().x(<span class="number">50f</span>).y(<span class="number">100f</span>);</span><br></pre></td></tr></table></figure><h4 id="xml定义"><a href="#xml定义" class="headerlink" title="xml定义"></a>xml定义</h4><ul><li><p>定义 <code>AnimatorSet</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">android:ordering</span>=<span class="string">"sequentially"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">objectAnimator</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:propertyName</span>=<span class="string">"x"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:duration</span>=<span class="string">"500"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueTo</span>=<span class="string">"400"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueType</span>=<span class="string">"intType"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">objectAnimator</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:propertyName</span>=<span class="string">"y"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:duration</span>=<span class="string">"500"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueTo</span>=<span class="string">"300"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:valueType</span>=<span class="string">"intType"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">objectAnimator</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:propertyName</span>=<span class="string">"alpha"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:duration</span>=<span class="string">"500"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:valueTo</span>=<span class="string">"1f"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>引入<code>AnimatorSet</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AnimatorSet set = (AnimatorSet) AnimatorInflater.loadAnimator(myContext,</span><br><span class="line">    R.anim.property_animator);</span><br><span class="line">set.setTarget(myObject);</span><br><span class="line">set.start();</span><br></pre></td></tr></table></figure><ul><li>定义 Animator</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">animator</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:duration</span>=<span class="string">"1000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueType</span>=<span class="string">"floatType"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueFrom</span>=<span class="string">"0f"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:valueTo</span>=<span class="string">"-100f"</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>引入<code>Animator</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ValueAnimator xmlAnimator = (ValueAnimator) AnimatorInflater.loadAnimator(<span class="keyword">this</span>,</span><br><span class="line">        R.animator.animator);</span><br><span class="line">xmlAnimator.addUpdateListener(<span class="keyword">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAnimationUpdate</span><span class="params">(ValueAnimator updatedAnimation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">float</span> animatedValue = (<span class="keyword">float</span>)updatedAnimation.getAnimatedValue();</span><br><span class="line">        textView.setTranslationX(animatedValue);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">xmlAnimator.start();</span><br></pre></td></tr></table></figure><h3 id="物理动画"><a href="#物理动画" class="headerlink" title="物理动画"></a>物理动画</h3><p>官方支持库<code>support-dynamic-animation</code></p><h4 id="gradle依赖"><a href="#gradle依赖" class="headerlink" title="gradle依赖"></a><code>gradle</code>依赖</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.android.support:support-dynamic-animation:27.1.0'</span></span><br></pre></td></tr></table></figure><p>版本：<br><img src="https://i.imgur.com/A5F0Q8q.png" alt=""></p><blockquote><p>注：要求sdk最低版本 为16，编译版本27，功能可用情况下，可适当降低support版本及编译版本</p></blockquote><h4 id="api"><a href="#api" class="headerlink" title="api"></a>api</h4><p><a href="https://developer.android.com/reference/android/support/animation/DynamicAnimation.html" target="_blank" rel="noopener">官方地址</a></p><ul><li>接口</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DynamicAnimation.OnAnimationEndListener</span><br><span class="line">DynamicAnimation.OnAnimationUpdateListener</span><br></pre></td></tr></table></figure><ul><li>类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DynamicAnimation&lt;T extends DynamicAnimation&lt;T&gt;&gt;</span><br><span class="line">DynamicAnimation.ViewProperty</span><br><span class="line">FlingAnimation</span><br><span class="line">FloatPropertyCompat&lt;T&gt;</span><br><span class="line">FloatValueHolder</span><br><span class="line">SpringAnimation</span><br><span class="line">SpringForce</span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><h2 id="开源库"><a href="#开源库" class="headerlink" title="开源库"></a>开源库</h2><h3 id="属性动画-3-0以下"><a href="#属性动画-3-0以下" class="headerlink" title="属性动画 3.0以下"></a>属性动画 3.0以下</h3><p><a href="https://github.com/JakeWharton/NineOldAndroids" target="_blank" rel="noopener">NineOldAndroids</a></p><blockquote><p>注：已停止更新</p></blockquote><h4 id="gradle依赖-1"><a href="#gradle依赖-1" class="headerlink" title="gradle依赖"></a>gradle依赖</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.nineoldandroids:library:2.4.0'</span></span><br></pre></td></tr></table></figure><h4 id="jar-依赖"><a href="#jar-依赖" class="headerlink" title="jar 依赖"></a>jar 依赖</h4><p>将jar包：<code>nineoldandroids-2.4.0.jar</code> 置于libs目录</p><h4 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h4><p>与官方属性动画api使用方式一致</p><h3 id="加载动画"><a href="#加载动画" class="headerlink" title="加载动画"></a>加载动画</h3><h4 id="ZLoading"><a href="#ZLoading" class="headerlink" title="ZLoading"></a><a href="https://github.com/zyao89/ZLoading" target="_blank" rel="noopener">ZLoading</a></h4><blockquote><p>源码支持api 15及以上，14及以下需手动变更，功能无影响</p></blockquote><h5 id="gradle依赖-2"><a href="#gradle依赖-2" class="headerlink" title="gradle依赖"></a>gradle依赖</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.zyao89:zloading:1.0.11'</span></span><br></pre></td></tr></table></figure><h5 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h5><ul><li>xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.zyao89.view.zloading.ZLoadingView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:z_type</span>=<span class="string">"CircleBuilder"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:z_color</span>=<span class="string">"@color/colorAccent"</span>/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>代码：<code>ZLoadingView</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ZLoadingView zLoadingView = (ZLoadingView) findViewById(R.id.loadingView_1);</span><br><span class="line">zLoadingView.setLoadingBuilder(Z_TYPE.CIRCLE);<span class="comment">//设置类型</span></span><br><span class="line">zLoadingView.setColorFilter(Color.WHITE);<span class="comment">//设置颜色</span></span><br></pre></td></tr></table></figure><ul><li>Dialog：<code>ZLoadingDialog</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ZLoadingDialog dialog = <span class="keyword">new</span> ZLoadingDialog(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">dialog.setLoadingBuilder(type)<span class="comment">//设置类型</span></span><br><span class="line">        .setLoadingColor(Color.BLACK)<span class="comment">//颜色</span></span><br><span class="line">        .setHintText(<span class="string">"Loading..."</span>)</span><br><span class="line">        .setHintTextSize(<span class="number">16</span>) <span class="comment">// 设置字体大小 dp</span></span><br><span class="line">        .setHintTextColor(Color.GRAY)  <span class="comment">// 设置字体颜色</span></span><br><span class="line">        .show();</span><br></pre></td></tr></table></figure><h5 id="支持的类型"><a href="#支持的类型" class="headerlink" title="支持的类型"></a>支持的类型</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">类名  枚举类型 名称</span><br><span class="line">CircleBuilderCIRCLE    圆</span><br><span class="line">ClockBuilderCIRCLE_CLOCK     计时器</span><br><span class="line">StarBuilderSTAR_LOADING跳舞的星星</span><br><span class="line">LeafBuilderLEAF_ROTATE旋转的叶子</span><br><span class="line">DoubleCircleBuilderDOUBLE_CIRCLE 画两个圈圈</span><br><span class="line">PacManBuilderPAC_MANPacMan</span><br><span class="line">ElasticBallBuilderELASTIC_BALL颤抖吧！球球</span><br><span class="line">InfectionBallBuilderINFECTION_BALL感染体</span><br><span class="line">IntertwineBuilderINTERTWINE交织</span><br><span class="line">TextBuilderTEXT   文字</span><br><span class="line">SearchPathBuilderSEARCH_PATH搜索等待</span><br><span class="line">RotateCircleBuilderROTATE_CIRCLE多圆旋转</span><br><span class="line">SingleCircleBuilderSINGLE_CIRCLE单圆简单动画</span><br><span class="line">SnakeCircleBuilderSNAKE_CIRCLE引蛇出洞</span><br><span class="line">StairsPathBuilderSTAIRS_PATH舞动阶梯</span><br><span class="line">MusicPathBuilderMUSIC_PATH跳动音符</span><br><span class="line">StairsRectBuilderSTAIRS_RECT递增方块</span><br><span class="line">ChartRectBuilderCHART_RECT跳动的柱状图</span><br></pre></td></tr></table></figure><h5 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h5><p><img src="https://i.imgur.com/O4hnoqX.gif" alt=""></p><h3 id="gif"><a href="#gif" class="headerlink" title="gif"></a>gif</h3><h4 id="airbnb-lottie-android"><a href="#airbnb-lottie-android" class="headerlink" title="airbnb-lottie-android"></a><a href="https://github.com/airbnb/lottie-android" target="_blank" rel="noopener">airbnb-lottie-android</a></h4><p>支持动画json文件解析,canvas绘制动画</p><h5 id="gradle依赖-3"><a href="#gradle依赖-3" class="headerlink" title="gradle依赖"></a>gradle依赖</h5><blockquote><p>使用latest.integration依赖最新版本</p></blockquote><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.airbnb.android:lottie:latest.integration'</span></span><br></pre></td></tr></table></figure><h5 id="使用-3"><a href="#使用-3" class="headerlink" title="使用"></a>使用</h5><ul><li>xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.airbnb.lottie.LottieAnimationView</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/animation_view"</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">app:lottie_fileName</span>=<span class="string">"hello-world.json"</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">app:lottie_loop</span>=<span class="string">"true"</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">app:lottie_autoPlay</span>=<span class="string">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LottieAnimationView animationView = (LottieAnimationView) findViewById(R.id.animation_view);  </span><br><span class="line">animationView.setAnimation(<span class="string">"hello-world.json"</span>);  </span><br><span class="line">animationView.loop(<span class="keyword">true</span>);  </span><br><span class="line">animationView.playAnimation();</span><br></pre></td></tr></table></figure><h4 id="android-gif-drawable"><a href="#android-gif-drawable" class="headerlink" title="android-gif-drawable"></a><a href="https://github.com/koral--/android-gif-drawable" target="_blank" rel="noopener">android-gif-drawable</a></h4><blockquote><p>源码编译需ndk支持</p></blockquote><p>Android studio 插件：</p><p><img src="https://i.imgur.com/llJluwV.png" alt=""><br>支持gif格式,最低支持api版本：14</p><h5 id="gradle依赖-4"><a href="#gradle依赖-4" class="headerlink" title="gradle依赖"></a>gradle依赖</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'pl.droidsonroids.gif:android-gif-drawable:1.2.12'</span></span><br></pre></td></tr></table></figure><p>如果依赖失败，在项目 gradle内配置：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h5><ol><li>xml</li></ol><p><code>ImageView</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pl.droidsonroids.gif.GifImageView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:src</span>=<span class="string">"@drawable/src_anim"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@drawable/bg_anim"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br></pre></td></tr></table></figure><p><code>TextView</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pl.droidsonroids.gif.GifTextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:drawableTop</span>=<span class="string">"@drawable/left_anim"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:drawableStart</span>=<span class="string">"@drawable/left_anim"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@drawable/bg_anim"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br></pre></td></tr></table></figure><ol><li>代码</li></ol><p><code>GifImageViwe</code>, <code>GifImageButton</code> ,<code>GifTextView</code> </p><p>支持<code>setImageResource(int resId)</code>，<code>setBackgroundResource(int resId)</code>动态设置gif图片资源</p><p><code>GifDrawable</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//asset file</span></span><br><span class="line">GifDrawable gifFromAssets = <span class="keyword">new</span> GifDrawable( getAssets(), <span class="string">"anim.gif"</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">//resource (drawable or raw)</span></span><br><span class="line">GifDrawable gifFromResource = <span class="keyword">new</span> GifDrawable( getResources(), R.drawable.anim );</span><br><span class="line"></span><br><span class="line"><span class="comment">//Uri</span></span><br><span class="line">ContentResolver contentResolver = ... <span class="comment">//can be null for file:// Uris</span></span><br><span class="line">GifDrawable gifFromUri = <span class="keyword">new</span> GifDrawable( contentResolver, gifUri );</span><br><span class="line"></span><br><span class="line"><span class="comment">//byte array</span></span><br><span class="line"><span class="keyword">byte</span>[] rawGifBytes = ...</span><br><span class="line">GifDrawable gifFromBytes = <span class="keyword">new</span> GifDrawable( rawGifBytes );</span><br><span class="line"></span><br><span class="line"><span class="comment">//FileDescriptor</span></span><br><span class="line">FileDescriptor fd = <span class="keyword">new</span> RandomAccessFile( <span class="string">"/path/anim.gif"</span>, <span class="string">"r"</span> ).getFD();</span><br><span class="line">GifDrawable gifFromFd = <span class="keyword">new</span> GifDrawable( fd );</span><br><span class="line"></span><br><span class="line"><span class="comment">//file path</span></span><br><span class="line">GifDrawable gifFromPath = <span class="keyword">new</span> GifDrawable( <span class="string">"/path/anim.gif"</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">//file</span></span><br><span class="line">File gifFile = <span class="keyword">new</span> File(getFilesDir(),<span class="string">"anim.gif"</span>);</span><br><span class="line">GifDrawable gifFromFile = <span class="keyword">new</span> GifDrawable(gifFile);</span><br><span class="line"></span><br><span class="line"><span class="comment">//AssetFileDescriptor</span></span><br><span class="line">AssetFileDescriptor afd = getAssets().openFd( <span class="string">"anim.gif"</span> );</span><br><span class="line">GifDrawable gifFromAfd = <span class="keyword">new</span> GifDrawable( afd );</span><br><span class="line"></span><br><span class="line"><span class="comment">//InputStream (it must support marking)</span></span><br><span class="line">InputStream sourceIs = ...</span><br><span class="line">BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream( sourceIs, GIF_LENGTH );</span><br><span class="line">GifDrawable gifFromStream = <span class="keyword">new</span> GifDrawable( bis );</span><br><span class="line"></span><br><span class="line"><span class="comment">//direct ByteBuffer</span></span><br><span class="line">ByteBuffer rawGifBytes = ...</span><br><span class="line">GifDrawable gifFromBytes = <span class="keyword">new</span> GifDrawable( rawGifBytes );</span><br></pre></td></tr></table></figure><h5 id="gif控制"><a href="#gif控制" class="headerlink" title="gif控制"></a>gif控制</h5><p><a href="http://developer.android.com/reference/android/widget/MediaController.html" target="_blank" rel="noopener">MediaController</a> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    GifImageButton gib = <span class="keyword">new</span> GifImageButton(<span class="keyword">this</span>);</span><br><span class="line">    setContentView(gib);</span><br><span class="line">    gib.setImageResource(R.drawable.sample);</span><br><span class="line">    <span class="keyword">final</span> MediaController mc = <span class="keyword">new</span> MediaController(<span class="keyword">this</span>);</span><br><span class="line">    mc.setMediaPlayer((GifDrawable) gib.getDrawable());</span><br><span class="line">    mc.setAnchorView(gib);</span><br><span class="line">    gib.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            mc.show();</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">getLoopCount()<span class="comment">//循环次数</span></span><br><span class="line">getNumberOfFrames()<span class="comment">//返回帧数，至少1帧</span></span><br><span class="line">getComment()<span class="comment">// 注释文本</span></span><br><span class="line">getFrameByteCount()<span class="comment">//可用于存储单帧像素最小字节数</span></span><br><span class="line">getAllocationByteCount()<span class="comment">//GifDrawable用于存储像素的已分配内存的大小(以字节为单位)</span></span><br><span class="line">getInputSourceByteCount()<span class="comment">//后备输入数据的长度(字节)</span></span><br><span class="line">toString()<span class="comment">//调试用的，图像大小和帧数的信息</span></span><br></pre></td></tr></table></figure><h5 id="回调"><a href="#回调" class="headerlink" title="回调"></a>回调</h5><p>MultiCallback </p><p>支持的功能：</p><p>recycle() 释放内存</p><p>isRecycled() </p><p>getError() 返回错误详细内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">MultiCallback multiCallback = <span class="keyword">new</span> MultiCallback();</span><br><span class="line"></span><br><span class="line">imageView.setImageDrawable(gifDrawable);</span><br><span class="line">multiCallback.addView(imageView);</span><br><span class="line"></span><br><span class="line">anotherImageView.setImageDrawable(gifDrawable);</span><br><span class="line">multiCallback.addView(anotherImageView);</span><br><span class="line"></span><br><span class="line">gifDrawable.setCallback(multiCallback);</span><br></pre></td></tr></table></figure><h3 id="物理-弹簧动画"><a href="#物理-弹簧动画" class="headerlink" title="物理-弹簧动画"></a>物理-弹簧动画</h3><blockquote><p>已停止维护，依赖可用</p></blockquote><p><a href="https://github.com/facebook/rebound" target="_blank" rel="noopener">FaceBook-Rebound</a></p><h4 id="Gradle依赖"><a href="#Gradle依赖" class="headerlink" title="Gradle依赖"></a>Gradle依赖</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.facebook.rebound:rebound:0.3.8'</span></span><br></pre></td></tr></table></figure><h4 id="jar-依赖-1"><a href="#jar-依赖-1" class="headerlink" title="jar 依赖"></a>jar 依赖</h4><p>将jar包：rebound-0.3.8.jar置于libs目录</p><h4 id="API"><a href="#API" class="headerlink" title="API"></a><a href="http://facebook.github.io/rebound/javadocs/" target="_blank" rel="noopener">API</a></h4><p>类： SpringSystem</p><p>方法：create</p><p>监听：SpringListener ，SimpleSpringListener</p><p>回调方法：<br>onSpringUpdate<br>onSpringAtRest<br>onSpringActivate<br>onSpringEndStateChange</p><h4 id="官方使用示例"><a href="#官方使用示例" class="headerlink" title="官方使用示例"></a>官方使用示例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">SpringSystem springSystem = SpringSystem.create();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Add a spring to the system.</span></span><br><span class="line">        Spring spring = springSystem.createSpring();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Add a listener to observe the motion of the spring.</span></span><br><span class="line">        spring.addListener(<span class="keyword">new</span> SimpleSpringListener() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSpringUpdate</span><span class="params">(Spring spring)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// You can observe the updates in the spring</span></span><br><span class="line">                <span class="comment">// state by asking its current value in onSpringUpdate.</span></span><br><span class="line">                <span class="keyword">float</span> value = (<span class="keyword">float</span>) spring.getCurrentValue();</span><br><span class="line">                <span class="keyword">float</span> scale = <span class="number">1f</span> - (value * <span class="number">0.5f</span>);</span><br><span class="line">                targetView.setScaleX(scale);</span><br><span class="line">                targetView.setScaleY(scale);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set the spring in motion; moving from 0 to 1</span></span><br><span class="line">        spring.setEndValue(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="属性-动画View-Shaker"><a href="#属性-动画View-Shaker" class="headerlink" title="属性-动画View Shaker"></a>属性-动画View Shaker</h3><p> <a href="https://github.com/daimajia/AndroidViewAnimations" target="_blank" rel="noopener">AndroidViewAnimations</a></p><p>内置多种动画，支持链式调用</p><blockquote><p>最近更新日期：2017/6</p></blockquote><h4 id="gradle依赖-5"><a href="#gradle依赖-5" class="headerlink" title="gradle依赖"></a>gradle依赖</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.daimajia.easing:library:2.0@aar'</span></span><br><span class="line">compile <span class="string">'com.daimajia.androidanimations:library:2.3@aar'</span></span><br></pre></td></tr></table></figure><h4 id="API-1"><a href="#API-1" class="headerlink" title="API"></a>API</h4><p>枚举类型 Techniques，指定具体类型即可</p><p>with</p><p>palyOn(View target)</p><h4 id="使用示例-1"><a href="#使用示例-1" class="headerlink" title="使用示例"></a>使用示例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">YoYo.with(Techniques.Tada)</span><br><span class="line">    .duration(<span class="number">700</span>)</span><br><span class="line">    .repeat(<span class="number">5</span>)</span><br><span class="line">    .playOn(targetView);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YoYo.with(Techniques.Shake).playOn(targetView);</span><br></pre></td></tr></table></figure><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><p><img src="https://i.imgur.com/cjHI6g3.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;注：除特殊说明停止维护外，列出的库仍在维护中。长时间未维护的依赖库，提供了jar文件的，可直接依赖jar 文件&lt;/p&gt;
    
    </summary>
    
      <category term="原创" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="解决方案" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
      <category term="动画" scheme="https://tianbozhang.coding.me/tags/%E5%8A%A8%E7%94%BB/"/>
    
      <category term="android" scheme="https://tianbozhang.coding.me/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>Manifest配置动态替换</title>
    <link href="https://tianbozhang.coding.me/manifest-configuration-dynamic-replacement.html"/>
    <id>https://tianbozhang.coding.me/manifest-configuration-dynamic-replacement.html</id>
    <published>2018-03-28T16:00:00.000Z</published>
    <updated>2018-05-15T06:50:50.466Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>该方案是根据极光推送的官方配置方案而来,后续将推出gradle自定义插件的方式完成配置替换</p></blockquote><a id="more"></a><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>减少配置侵入、关键信息暴露</p><p>便于可变配置信息引入及替换</p><p>封装动态配置定义在Library内，由<code>app</code>完成替换</p><p>注意： </p><ol><li>当Library 的清单文件定义了替换key,<code>gradle</code>没有填写，在编译期会出现如下日志，只要<code>app</code>内 填写正确，运行不受影响</li></ol><p>日志详细信息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Error:</span><br><span class="line">Attribute meta-data#QQ_APPID@value at manifestMerger8142313556881373986.xml requires a placeholder substitution but no value for &lt;QQ_APPID&gt; is provided</span><br></pre></td></tr></table></figure><ol><li>Library 如果与<code>app</code>同时配置，将会冲突导致都无效，及时Llbrary配置值为空，app已配置的也会被替换掉</li></ol><h3 id="Manifest-定义"><a href="#Manifest-定义" class="headerlink" title="Manifest 定义"></a>Manifest 定义</h3><ul><li>常规定义：”${定义的内容}”</li><li>会出现数字的，读取时不会被读取为String类型，需要通过反斜杠转义 ：”\ ${定义的内容}”</li><li>想动态替换的内容都可定义，并由gradle 完成替换</li></ul><p>如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--动态配置meta-data的可变内容--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"QQ_APPKEY"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:value</span>=<span class="string">"\ $&#123;QQ_APPID&#125;"</span>/&gt;</span>//转义数字为String</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"QQ_SECRET"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:value</span>=<span class="string">"$&#123;QQ_SECRET&#125;"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--动态配置Activity的过滤器可变内容--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">"tencent$&#123;QQ_APPID&#125;"</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--动态配置Receiver的过滤器可变内容--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">receiver</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"$&#123;JPUSH_PKGNAME&#125;"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Gradle-配置替换"><a href="#Gradle-配置替换" class="headerlink" title="Gradle 配置替换"></a>Gradle 配置替换</h3><p>使用<code>manifestPlaceholders=[]</code>各属性间使用英文逗号分隔，注意空格</p><p>如：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">manifestPlaceholders = [</span><br><span class="line">                   <span class="string">QQ_SECRET :</span> <span class="string">""</span>,</span><br><span class="line">                   <span class="string">QQ_APPID :</span> <span class="string">""</span></span><br><span class="line">             </span><br><span class="line">           ]</span><br></pre></td></tr></table></figure><p>当release 版本与debug需要区分时，可在<code>buildTypes</code>内配置</p><p>如：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line">       release &#123;</span><br><span class="line"></span><br><span class="line">           manifestPlaceholders = [</span><br><span class="line">                   <span class="string">QQ_SECRET :</span> <span class="string">""</span>,</span><br><span class="line">                   <span class="string">QQ_APPID :</span> <span class="string">""</span></span><br><span class="line">           ]</span><br><span class="line">       &#125;</span><br><span class="line">       debug &#123;</span><br><span class="line">         </span><br><span class="line">           manifestPlaceholders = [</span><br><span class="line">                    <span class="string">QQ_SECRET :</span> <span class="string">""</span>,</span><br><span class="line">                   <span class="string">QQ_APPID :</span> <span class="string">""</span></span><br><span class="line">           ]</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>当不需要区分时，可在<code>defaultConfig</code>内配置</p><p>如：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> defaultConfig &#123;</span><br><span class="line"></span><br><span class="line">manifestPlaceholders = [</span><br><span class="line">                  <span class="string">QQ_SECRET :</span> <span class="string">""</span>,</span><br><span class="line">                  <span class="string">QQ_APPID :</span> <span class="string">""</span></span><br><span class="line">          ]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="代码读取"><a href="#代码读取" class="headerlink" title="代码读取"></a>代码读取</h3><p>读取Manifest定义好的key</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">val</span> appInfo = mContext?.packageManager?.getApplicationInfo(mContext?.packageName,</span><br><span class="line">                PackageManager.GET_META_DATA)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> sinaKey = appInfo?.metaData?.<span class="keyword">get</span>(<span class="string">"QQ_APPKEY"</span>)</span><br><span class="line"><span class="keyword">val</span> sinaSecret = appInfo?.metaData?.<span class="keyword">get</span>(<span class="string">"QQ_SECRET"</span>)</span><br></pre></td></tr></table></figure><h2 id="debug-包指定签名信息"><a href="#debug-包指定签名信息" class="headerlink" title="debug 包指定签名信息"></a>debug 包指定签名信息</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>不打签名包直接运行也可实现签名包的效果，可有效减少耗时</p><p>如微信分享时，需要签名信息，每次验证都打包相对耗时较长，使用该方法，不打签名包也可实现</p><h3 id="签名文件"><a href="#签名文件" class="headerlink" title="签名文件"></a>签名文件</h3><p>需在module同级目录下</p><h3 id="gradle配置"><a href="#gradle配置" class="headerlink" title="gradle配置"></a><code>gradle</code>配置</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line"> debug &#123;</span><br><span class="line">            signingConfig signingConfigs.debug</span><br><span class="line">        &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>指定签名信息：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">signingConfigs &#123;</span><br><span class="line">     debug &#123;</span><br><span class="line">         storeFile file(<span class="string">'debug.keystore'</span>)</span><br><span class="line">         storePassword <span class="string">"android"</span></span><br><span class="line">         keyAlias <span class="string">"androiddebugkey"</span></span><br><span class="line">         keyPassword <span class="string">"android"</span></span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;该方案是根据极光推送的官方配置方案而来,后续将推出gradle自定义插件的方式完成配置替换&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="原创" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="android" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/android/"/>
    
      <category term="解决方案" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/android/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
      <category term="配置" scheme="https://tianbozhang.coding.me/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="动态替换" scheme="https://tianbozhang.coding.me/tags/%E5%8A%A8%E6%80%81%E6%9B%BF%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Next主题升级，从5.1到6.0</title>
    <link href="https://tianbozhang.coding.me/next-theme-update.html"/>
    <id>https://tianbozhang.coding.me/next-theme-update.html</id>
    <published>2018-01-24T08:41:52.148Z</published>
    <updated>2018-01-30T06:33:06.594Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>以下内容根据<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">NextGitHub</a>提供内容进行主题更新升级验证</p><p>由于之前就做好了升级准备，尽量减少原文件的变更，相对来说工作量不是很大</p><p>6.0在一些原有的插件上的使用上还有些问题，想尝鲜的继续</p><p>基于Next6.0.1</p></blockquote><a id="more"></a><h2 id="Next主题更新升级"><a href="#Next主题更新升级" class="headerlink" title="Next主题更新升级"></a>Next主题更新升级</h2><p><a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/UPDATE-FROM-5.1.X.md" target="_blank" rel="noopener">升级方法参考</a><br>由于新版本官方详细说明还未发布，这里先提前研究一下新版本</p><p>这里由原5.1.4升级到6.0.1</p><h3 id="仓库地址发生变化"><a href="#仓库地址发生变化" class="headerlink" title="仓库地址发生变化"></a>仓库地址发生变化</h3><p>5.1:  <code>git@github.com:iissnan/hexo-theme-next.git</code></p><p>6.0: <code>git@github.com:theme-next/hexo-theme-next.git</code></p><p>使用release 版本，按官方说法是相对比较稳定，但仍存在一些问题</p><h3 id="官方提供的方式"><a href="#官方提供的方式" class="headerlink" title="官方提供的方式"></a>官方提供的方式</h3><p>总结为三点：</p><ol><li><p>clone 仓库到新目录，假设为next-reload</p></li><li><p>若主题配置使用了datafile方式，新目录也不变，原主题目录不变，可以随时还原</p></li><li><p>修改站点配置加载主题next-reload</p></li></ol><p><strong>补充</strong>：</p><ol><li><p>自定义修改比较多的，可以比对更新，即合并代码</p></li><li><p>copy 新增文件到站点source目录</p></li><li><p>主题文件可先clone 后将.git文件夹移除，待成功备份到自己的仓库后，再还原移除的.git，这样既可以备份，也可以与原仓库比对更新</p></li><li><p>若仍有修改且准备提交到next仓库的，继续使用fork</p></li></ol><h3 id="升级主题未变及变更文件"><a href="#升级主题未变及变更文件" class="headerlink" title="升级主题未变及变更文件"></a>升级主题未变及变更文件</h3><p>5.1版本修改过的文件，以及更新到6.0的变更<br>以下变更全部从主题目录变更到站点目录，可以理解为尽量减少主题文件的修改</p><h4 id="崩溃欺骗"><a href="#崩溃欺骗" class="headerlink" title="崩溃欺骗"></a>崩溃欺骗</h4><p>\layout_layout.swig<br>\source\js\src\custom\custom-title.js</p><h4 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h4><p>整站</p><p>\source\css_custom\custom.styl</p><p>侧栏，5.1新增</p><p>\source\css_custom\custom-sidebar.styl</p><p>变更为source_data\style.styl，代码融合</p><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>\source\css_variables\custom.styl</p><p>改为source_data\variables.styl</p><h4 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h4><p>\languagues\zh-Hans</p><p>6.0主题变更文件</p><p><img src="https://i.imgur.com/AZB6Jq0.png" alt=""></p><p>站点source新增及变更文件</p><p><img src="https://i.imgur.com/dedgURT.png" alt=""></p><h4 id="文章结束标记"><a href="#文章结束标记" class="headerlink" title="文章结束标记"></a>文章结束标记</h4><p>\layout_macro\post.swig</p><ul><li>原代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&lt;div class=&quot;post-body ...&gt;</span><br><span class="line"></span><br><span class="line">&#123;&#123; post.content &#125;&#125;</span><br><span class="line"></span><br><span class="line">&lt;div style=&quot;text-align:center;color: #ccc;font-size:18px;&quot;&gt;—— The End ——&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&#123;&#123; post.content &#125;&#125;`</span><br><span class="line"></span><br><span class="line"> &lt;div style=&quot;text-align:center;color: #ccc;font-size:18px;&quot;&gt;—— The  End ——&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><ul><li>修改为：</li></ul><ol><li>添加到postbody div之后</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&lt;div class=&quot;post-body &gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;% if not is_index and theme.post_end %&#125;</span><br><span class="line">&lt;!-- noindex--&gt;</span><br><span class="line">&lt;div class=&quot;post-end text-center&quot;&gt;&lt;span &gt;&#123;&#123;theme.post_end&#125;&#125;&lt;/span&gt;&lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><ol><li>source_data\style.styl样式新增：</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//文章结束标识</span><br><span class="line"><span class="selector-class">.post-end</span>&#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">18px</span></span><br><span class="line">color: <span class="number">#ccc</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>主题配置</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_end: &lt;i class=&quot;fa fa-signing fa-lg&quot;&gt;&lt;/i&gt; The End   &lt;i class=&quot;fa fa-signing fa-lg&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure><ul><li>由于小屏幕一些文字不显示，去除原图标控制逻辑</li></ul><h4 id="第三方评论"><a href="#第三方评论" class="headerlink" title="第三方评论"></a>第三方评论</h4><p>仍选择支持双评论系统，删除的代码有变化</p><p>\layout_third-party\comments\disqus.swig<br>\layout_third-party\comments\gitment.swig<br>\layout_third-party\comments\gitment.swig</p><h4 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h4><p>组合评论，5.1新增</p><p>\layout\partials\comments\custom-comments.swig</p><p>改为：</p><p>source_data\comments.swig</p><p>主题配置custom_file_path新增字段comments:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">custom_file_path:</span><br><span class="line">comments: source\_data\comments.swig</span><br></pre></td></tr></table></figure></p><p>这部分在双评论系统文章有详细讲解</p><p>评论整体布局\layout_partials\comments.swig参考header修改</p><p>由    <code>{% include /comments/custom-comments.swig %}</code></p><p>变更为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&#123;% if theme.custom_file_path.comments %&#125;</span><br><span class="line">&#123;% set custom_comments = &apos;../../../../&apos; + theme.custom_file_path.comments %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% include custom_comments %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><h3 id="6-0-1的一些问题点"><a href="#6-0-1的一些问题点" class="headerlink" title="6.0.1的一些问题点"></a>6.0.1的一些问题点</h3><ol><li><p>主题配置</p><p>除新增变更功能外，其他不变</p></li><li><p>第三方评论</p><ul><li>disqus</li></ul><p>代码发生变化，双评论系统代码添加方法不变</p><ul><li>livere</li></ul><p>代码发生变化，支持双评论系统代码修改方法不变</p></li><li><p>post_word_count 替换为 symbols_count</p></li></ol><p><a href="https://github.com/theme-next/hexo-symbols-count-time/blob/master/README.md" target="_blank" rel="noopener">官方GitHub</a></p><p>安装插件 npm install hexo-symbols-count-time –save</p><p>站点、主题配置 ：配置参照官网</p><p>注意：需要修改语言文件</p><p>zh-Hans.yml文件post参数:<br>增加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">symbols_count: 字数统计</span><br><span class="line">symbols_time: 阅读时长约</span><br><span class="line">total_symbols: Symbols count total</span><br><span class="line">total_time: Reading time total</span><br></pre></td></tr></table></figure></p><p>时间计算方式变更，结果及显示与之前不太一样</p><ol><li><p>文章版权<br>由于显示有问题，这里做个修改</p><p>zh-Hans.yml文件</p><p>修改：<br>license_content: ‘本博客所有文章除特别声明外，均采用%s 许可协议。转载请注明出处！’</p></li><li><p>footer与主体间距</p></li></ol><p>距离过小会遮挡分页按钮<br>修改source\styles.styl</p><p>//主体与footer间距<br>$gap-between-main-and-footer  = 120px</p><h2 id="插件变更及启用功能"><a href="#插件变更及启用功能" class="headerlink" title="插件变更及启用功能"></a>插件变更及启用功能</h2><h3 id="变更"><a href="#变更" class="headerlink" title="变更"></a>变更</h3><h4 id="algolia搜索"><a href="#algolia搜索" class="headerlink" title="algolia搜索"></a>algolia搜索</h4><p> <a href="https://github.com/theme-next/theme-next-algolia-instant-search" target="_blank" rel="noopener">nextalgolia</a></p><p>新建\source\lib\algolia-instant-search</p><p>添加文件<br>instantsearch.min.css,instantsearch.min.js</p><p>主题配置不变</p><p>local_search 启用后一直加载，具体原因未知</p><h4 id="背景动画"><a href="#背景动画" class="headerlink" title="背景动画"></a>背景动画</h4><p><a href="https://github.com/theme-next/theme-next-canvas-nest" target="_blank" rel="noopener">Canvas</a><br><a href="https://github.com/theme-next/theme-next-three" target="_blank" rel="noopener">three_waves</a><br>路径：<br>themes\next\source\lib\three<br>themes\next\source\lib\canvas-nest<br>主题配置开启<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">canvas_nest: true</span><br><span class="line"></span><br><span class="line"># three_waves</span><br><span class="line">three_waves: false</span><br><span class="line"># canvas_lines</span><br><span class="line">canvas_lines: false</span><br><span class="line"># canvas_sphere</span><br><span class="line">canvas_sphere: false</span><br></pre></td></tr></table></figure></p><h3 id="新增功能"><a href="#新增功能" class="headerlink" title="新增功能"></a>新增功能</h3><h4 id="reading-progress"><a href="#reading-progress" class="headerlink" title="reading_progress"></a>reading_progress</h4><p><a href="https://github.com/theme-next/theme-next-reading-progress" target="_blank" rel="noopener">reading_progressJs文件</a></p><p>source\lib\reading_progress路径</p><p>主题配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reading_progress:</span><br><span class="line">enable: true</span><br></pre></td></tr></table></figure><h4 id="Fllow-Me-On-GitHub"><a href="#Fllow-Me-On-GitHub" class="headerlink" title="Fllow Me On GitHub"></a>Fllow Me On GitHub</h4><p>主题配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">github_banner: https://github.com/yourname || Follow me on GitHub</span><br></pre></td></tr></table></figure><p>页面右上角显示</p><p><img src="https://i.imgur.com/xfbuu1p.png" alt=""></p><p>不喜欢的可以继续使用之前_layout.swig 文件body内增加代码的方式</p><h3 id="启用原有功能"><a href="#启用原有功能" class="headerlink" title="启用原有功能"></a>启用原有功能</h3><h4 id="needmoreshare2"><a href="#needmoreshare2" class="headerlink" title="needmoreshare2"></a>needmoreshare2</h4><p><a href="https://github.com/theme-next/theme-next-needmoreshare2" target="_blank" rel="noopener">needmoreshare2js文件</a></p><p>source\lib\needmoreshare2</p><p>主题配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">needmoreshare2:</span><br><span class="line">enable: true</span><br><span class="line">postbottom:</span><br><span class="line">enable: true</span><br><span class="line"></span><br><span class="line">float:</span><br><span class="line">enable: false</span><br></pre></td></tr></table></figure><h4 id="Star-Rating"><a href="#Star-Rating" class="headerlink" title="Star Rating"></a>Star Rating</h4><p><a href="https://widgetpack.com" target="_blank" rel="noopener">获取id</a></p><p>主题配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rating:</span><br><span class="line">enable: true</span><br><span class="line">id: #4位id</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;以下内容根据&lt;a href=&quot;https://github.com/theme-next/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NextGitHub&lt;/a&gt;提供内容进行主题更新升级验证&lt;/p&gt;
&lt;p&gt;由于之前就做好了升级准备，尽量减少原文件的变更，相对来说工作量不是很大&lt;/p&gt;
&lt;p&gt;6.0在一些原有的插件上的使用上还有些问题，想尝鲜的继续&lt;/p&gt;
&lt;p&gt;基于Next6.0.1&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="原创" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Hexo" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/Hexo/"/>
    
    
      <category term="博客" scheme="https://tianbozhang.coding.me/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="https://tianbozhang.coding.me/tags/Hexo/"/>
    
      <category term="实战" scheme="https://tianbozhang.coding.me/tags/%E5%AE%9E%E6%88%98/"/>
    
      <category term="Next" scheme="https://tianbozhang.coding.me/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>个人博客-双评论系统（来必力与Disqus）</title>
    <link href="https://tianbozhang.coding.me/combined-comments.html"/>
    <id>https://tianbozhang.coding.me/combined-comments.html</id>
    <published>2018-01-19T10:15:06.925Z</published>
    <updated>2018-01-30T06:34:11.769Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：<br>看到next issue 有人提出双评论系统的问题，实现方案及效果各不同</p><p>正好我也考虑实现类似的双评论系统方案</p><p>为方便主题升级及管理修改方便，特此研究了一下实现原理，按照此文所讲述方式，实现自己的组合评论系统也不难</p><p>以下内容基于Next 5.1.4实现，支持主题升级，原理不变，细节会有变化</p><p>Next官方已经发布6.0.2版本，将延时加载加入了disqus。</p></blockquote><a id="more"></a><h2 id="双评论系统"><a href="#双评论系统" class="headerlink" title="双评论系统"></a>双评论系统</h2><p>原理：主要修改布局代码，配合主题配置控制显示</p><h3 id="双评论效果演示"><a href="#双评论效果演示" class="headerlink" title="双评论效果演示"></a>双评论效果演示</h3><p>演示来必力与Disqus组合，gitment暂时未启用<br><img src="https://i.imgur.com/3ePMa47.png" alt=""></p><h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><p>来必力默认只有livere_uid，需要新增配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">livere:#新增</span><br><span class="line">  enable: true#新增，控制评论显示</span><br><span class="line">  livere_uid: xxxxxxx</span><br></pre></td></tr></table></figure><h3 id="第三方评论模板支持"><a href="#第三方评论模板支持" class="headerlink" title="第三方评论模板支持"></a>第三方评论模板支持</h3><p> themes\next\layout\third-partycomments\xxx.swig文件</p><p>删除自己开启条件之外的控制语句，注意最后的endif 也要删除</p><p>如：</p><ul><li>gitment</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname %&#125;</span><br><span class="line">&#123;% if theme.gitment.enable and theme.gitment.client_id %&#125;</span><br><span class="line">&lt;!-- LOCAL: You can save these files to your site and update links --&gt;</span><br><span class="line">   #省略</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&lt;!-- END LOCAL --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>删除最外围的</p><p><code> {% if not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname %} {% endif %} </code></p><ul><li>来必力</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname and not (theme.disqus.enable and theme.disqus.shortname) and not theme.hypercomments_id %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;% if page.comments and theme.livere_uid %&#125;</span><br><span class="line">  #省略</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>删除最外围的</p><p><code> {% if not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname and not (theme.disqus.enable and theme.disqus.shortname) and not theme.hypercomments_id %}{% endif %} </code></p><ul><li>Disqus</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname %&#125;</span><br><span class="line">  &#123;% if theme.disqus.enable %&#125;</span><br><span class="line"></span><br><span class="line">   #省略</span><br><span class="line"></span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>删除最外围的</p><p><code> {% if not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname %}{% endif %} </code></p><p>上述代码主题升级到6.0.1时有变化，原理不变</p><h3 id="布局顺序调整"><a href="#布局顺序调整" class="headerlink" title="布局顺序调整"></a>布局顺序调整</h3><p>按所需顺序调整comments各评论系统div顺序，我的顺序从上到下是<br>来必力<br>gitment<br>disqus</p><h3 id="整体评论布局支持"><a href="#整体评论布局支持" class="headerlink" title="整体评论布局支持"></a>整体评论布局支持</h3><ol><li>创建<br>themes\next\layout_partials\comments\custom-comments.swig模板文件</li></ol><p>组合需要在一起显示的评论系统，用一个div 承载，好处是如果添加了背景，可以将几个评论系统显示在一起。</p><p>条件语句使用逻辑或控制整体div显示，每个评论系统自己控制逻辑不变</p><p>核心代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&#123;% if theme.livere.enable or theme.gitment.enable or theme.disqus.enable %&#125;</span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comments"</span> <span class="attr">id</span>=<span class="string">"comments"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> &#123;% if theme.livere.enable %&#125;</span><br><span class="line">  #来必力核心代码    </span><br><span class="line"> &#123;% endif %&#125;</span><br><span class="line">​ </span><br><span class="line"> &#123;% if theme.gitment.enable %&#125;</span><br><span class="line">  # gitment核心代码 </span><br><span class="line"> &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line"> &#123;% if theme.disqus.enable %&#125;</span><br><span class="line">  # disqus 核心代码</span><br><span class="line"> &#123;% endif %&#125;</span><br><span class="line">​  </span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><ol><li>\themes\next\layout_partials\comments.swig 文件末尾引入上述模板</li></ol><p><code> {% include 'comments/custom-comments.swig' %} </code></p><p>注意：此代码在主题升级到6.0.1时会有变化，如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if theme.custom_file_path.comments %&#125;</span><br><span class="line">  &#123;% set custom_comments = &apos;../../../../&apos; + theme.custom_file_path.comments %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% include custom_comments %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>放在末尾可以覆盖前面的配置</p><p>这样做的好处是，减少原comments模板文件的修改，方便升级更新</p><ol><li>添加或修改disqus 加载按钮位置</li></ol><ul><li><p>按钮放置于所有评论系统div之前</p></li><li><p>点击加载之后，将加载出的Disqus置于已有评论之后</p></li><li><p>添加以下代码到模板</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">id</span>=<span class="string">"load-disqus"</span> <span class="attr">onclick</span>=<span class="string">"disqus.load();"</span>&gt;</span>加载 Disqus 评论<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="custom-comments完整代码"><a href="#custom-comments完整代码" class="headerlink" title="custom-comments完整代码"></a>custom-comments完整代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if page.comments %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if theme.disqus.enable %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">id</span>=<span class="string">"load-disqus"</span> <span class="attr">onclick</span>=<span class="string">"disqus.load();"</span>&gt;</span>加载 Disqus 评论<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line"> #核心代码</span><br><span class="line">&#123;% if theme.livere.enable or theme.gitment.enable or theme.disqus.enable %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comments"</span> <span class="attr">id</span>=<span class="string">"comments"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  &#123;% if theme.livere.enable %&#125;#使用主题配置来必力新增控制</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"lv-container"</span> <span class="attr">data-id</span>=<span class="string">"city"</span> <span class="attr">data-uid</span>=<span class="string">"&#123;&#123; theme.livere.livere_uid &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;% if theme.gitment.enable %&#125;#gitment</span><br><span class="line">   &#123;% if theme.gitment.lazy %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">onclick</span>=<span class="string">"showGitment()"</span> <span class="attr">id</span>=<span class="string">"gitment-display-button"</span>&gt;</span>&#123;&#123; __('gitmentbutton') &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"gitment-container"</span> <span class="attr">style</span>=<span class="string">"display:none"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   &#123;% else %&#125;</span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"gitment-container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;% if theme.disqus.enable %&#125;# disqus</span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"disqus_thread"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">noscript</span>&gt;</span></span><br><span class="line">    Please enable JavaScript to view the</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://disqus.com/?ref_noscript"</span>&gt;</span>comments powered by Disqus.<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> &#123;% endif %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>参考,感谢大佬</p><p><a href="https://chalkit.tk/20171123-load-Disqus-livere-comment-on-click-in-hexo-next-theme/" target="_blank" rel="noopener">chalkit</a><br><a href="https://ehlxr.me/about/" target="_blank" rel="noopener">ehlxr</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言：&lt;br&gt;看到next issue 有人提出双评论系统的问题，实现方案及效果各不同&lt;/p&gt;
&lt;p&gt;正好我也考虑实现类似的双评论系统方案&lt;/p&gt;
&lt;p&gt;为方便主题升级及管理修改方便，特此研究了一下实现原理，按照此文所讲述方式，实现自己的组合评论系统也不难&lt;/p&gt;
&lt;p&gt;以下内容基于Next 5.1.4实现，支持主题升级，原理不变，细节会有变化&lt;/p&gt;
&lt;p&gt;Next官方已经发布6.0.2版本，将延时加载加入了disqus。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="原创" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Hexo" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/Hexo/"/>
    
    
      <category term="博客" scheme="https://tianbozhang.coding.me/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Git" scheme="https://tianbozhang.coding.me/tags/Git/"/>
    
      <category term="Hexo" scheme="https://tianbozhang.coding.me/tags/Hexo/"/>
    
      <category term="Node.js" scheme="https://tianbozhang.coding.me/tags/Node-js/"/>
    
      <category term="实战" scheme="https://tianbozhang.coding.me/tags/%E5%AE%9E%E6%88%98/"/>
    
      <category term="高级" scheme="https://tianbozhang.coding.me/tags/%E9%AB%98%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>个人博客，从填坑到上天</title>
    <link href="https://tianbozhang.coding.me/personal-blog-advanced.html"/>
    <id>https://tianbozhang.coding.me/personal-blog-advanced.html</id>
    <published>2018-01-17T16:00:00.000Z</published>
    <updated>2018-01-30T06:33:58.696Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：</p><p>对博客做一些扩展，增加一些交互功能，如搜索、评论、订阅等</p><p>教你如何多端同步修改，博客源码托管</p></blockquote><a id="more"></a><h2 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h2><h3 id="LocalSearch"><a href="#LocalSearch" class="headerlink" title="LocalSearch"></a>LocalSearch</h3><p>安装  </p><p><code>npm install hexo-generator-searchdb --save</code></p><p>站点配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line"> path: search.xml</span><br><span class="line"> field: post</span><br><span class="line"> format: html</span><br><span class="line"> limit: 10000</span><br></pre></td></tr></table></figure><p>主题配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line"> enable: true</span><br></pre></td></tr></table></figure><h3 id="aloglia"><a href="#aloglia" class="headerlink" title="aloglia"></a>aloglia</h3><blockquote><p>流程参考<a href="theme-next.iissnan.com/third-party-services.html">Next主题官网第三方服务</a></p><p><a href="https://github.com/oncletom/hexo-algolia" target="_blank" rel="noopener">GitHub-algolia</a></p><p>过程官方已经说明，这里补充一些细节</p></blockquote><h4 id="添加index"><a href="#添加index" class="headerlink" title="添加index"></a>添加index</h4><p>随意起，如：personal_blog，此项一定要有，需要添加到站点配置<br><img src="https://i.imgur.com/e0xXW1Q.png" alt=""></p><h4 id="编辑ApiKey-权限"><a href="#编辑ApiKey-权限" class="headerlink" title="编辑ApiKey 权限"></a>编辑ApiKey 权限</h4><p>ACL：选中 Search<br>这里与algolia-github有出入，我们需要选中search</p><p><strong>不选中此项，站点搜索输入无结果</strong></p><p>当前api所有权限：</p><p><img src="https://i.imgur.com/1xa1Yak.png" alt=""></p><p>indices 选取我们前面添加的indexName，可选</p><p><img src="https://i.imgur.com/qk4fVK1.png" alt=""></p><p>Update保存</p><h4 id="复制id及api-key"><a href="#复制id及api-key" class="headerlink" title="复制id及api key"></a>复制id及api key</h4><p>此处配置时需要注意保密<br>Search-Only API Key 是我们需要添加到配置中的，也是我们上面编辑过权限的</p><h4 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">algolia:</span><br><span class="line"> applicationID: **********</span><br><span class="line"> apiKey: a68d6525********** #替换Search-Only API Key</span><br><span class="line"> indexName: personal_blog #替换indexName</span><br><span class="line"> chunkSize: 5000</span><br><span class="line"> adimnApiKey: ********** #可不填，没实际意义</span><br></pre></td></tr></table></figure><h4 id="启用Algolia"><a href="#启用Algolia" class="headerlink" title="启用Algolia"></a>启用Algolia</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">algolia_search:</span><br><span class="line">  enable: true</span><br><span class="line">  hits:</span><br><span class="line">    per_page: 10</span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: 开始你的搜索... #自定义搜索默认</span><br><span class="line">    hits_empty: &quot;没有你要找的：$&#123;query&#125; &quot;#无结果提示</span><br><span class="line">    hits_stats: &quot;找到 $&#123;hits&#125;条结果，用时 $&#123;time&#125;毫秒&quot; #结果提示</span><br></pre></td></tr></table></figure><h4 id="导入博客到index"><a href="#导入博客到index" class="headerlink" title="导入博客到index"></a>导入博客到index</h4><p>博客根目录</p><ul><li><p>安装插件</p><p><code>npm install --save hexo-algolia</code></p></li><li><p>配置环境变量</p></li></ul><p>使用你自己的Search-Only API Key</p><p><code>export HEXO_ALGOLIA_INDEXING_KEY=******************</code></p><p><strong>注意：windows 环境的命令是export 不是set</strong></p><ul><li>更新index</li></ul><p><code>hexo algolia</code></p><p>当出现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  [Algolia] Identified xx pages and posts to index.</span><br><span class="line">INFO  [Algolia] Indexing chunk 1 of 1 (xx items each)</span><br><span class="line">INFO  [Algolia] Indexing done.</span><br></pre></td></tr></table></figure><p>表明博客导入成功</p><ul><li><strong>注意：</strong></li></ul><p>1.apikey或applicationid不一致这里会出错。需与algolia官网获取的保持一致<br><img src="https://i.imgur.com/Ywri6o8.png" alt=""></p><p>2.博客文章发生变化需要清空原index,重新更新index,否则将出现搜索不到或已删除、变更之前的内容</p><p>3.当出现下面的提示时，表明key 发生变化或者不对，需要重新配置apikey变量<br><img src="https://i.imgur.com/DvTtiVw.png" alt=""></p><h4 id="验证搜索效果"><a href="#验证搜索效果" class="headerlink" title="验证搜索效果"></a>验证搜索效果</h4><p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br><img src="https://i.imgur.com/0sf0CMj.png" alt=""></p><p>上面的两种方式均为在next主题下弹框方式，其他搜索方式待补充</p><h2 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h2><p>评论系统由于多说、网易跟帖已关闭，目前已知有三种方式可选，Disqus，gitment,来必力<br>下面依次说明启用方式</p><h3 id="Disqus"><a href="#Disqus" class="headerlink" title="Disqus"></a>Disqus</h3><p><a href="https://disqus.com" target="_blank" rel="noopener">Disqus,需科学上网</a></p><p>由shortname作为唯一标识</p><h4 id="获取’shortName’"><a href="#获取’shortName’" class="headerlink" title="获取’shortName’"></a>获取’shortName’</h4><ul><li><p>右侧，Admin 选项<br><img src="https://i.imgur.com/NMWSkiE.png" alt=""></p></li><li><p>进入创建页面<br><img src="https://i.imgur.com/UudISQC.png" alt=""></p></li><li><p>注册网址，编辑’shortName’,保存</p></li></ul><p><img src="https://i.imgur.com/OpSNexk.png" alt=""></p><ul><li>进入Settings/general页面,确认’shortName’<br><img src="https://i.imgur.com/vXyZK3E.png" alt=""></li></ul><p>disqus可以创建多个站点，根据需要配置不同类型与’shortName’</p><h4 id="启用评论系统"><a href="#启用评论系统" class="headerlink" title="启用评论系统"></a>启用评论系统</h4><p>添加到主题配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">disqus:</span><br><span class="line"> enable: true #启用</span><br><span class="line"> shortname: ********#替换你自己的shortname</span><br><span class="line"> count: false #自行决定</span><br></pre></td></tr></table></figure><h4 id="验证效果-必须科学上网"><a href="#验证效果-必须科学上网" class="headerlink" title="验证效果,必须科学上网"></a>验证效果,必须科学上网</h4><p><img src="https://i.imgur.com/IqCHuPO.png" alt=""></p><h4 id="对用户友好处理"><a href="#对用户友好处理" class="headerlink" title="对用户友好处理"></a>对用户友好处理</h4><p>原理：<br>通过按钮点击加载Disqus，使用主题默认样式</p><blockquote><p>[参考][参考]<br>layout_third-partycomments\disqus.swig定义方法</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> disqus = &#123;</span><br><span class="line">load : <span class="function"><span class="keyword">function</span> <span class="title">disqus</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="comment">//原disqus核心代码</span></span><br><span class="line"></span><br><span class="line"> $(<span class="string">'#load-disqus'</span>).remove();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>themes\next\layout_partials\comments.swig增加代码，添加定义好方法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">id</span>=<span class="string">"load-disqus"</span> <span class="attr">onclick</span>=<span class="string">"disqus.load();"</span>&gt;</span>加载 Disqus 评论<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改后的 disqus.swig 代码为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"></span><br><span class="line">#省略</span><br><span class="line">&#123;% <span class="keyword">if</span> page.comments %&#125;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">  <span class="keyword">var</span> disqus = &#123;</span><br><span class="line">  load : <span class="function"><span class="keyword">function</span> <span class="title">disqus</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> disqus_config = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.page.url = <span class="string">'&#123;&#123; page.permalink &#125;&#125;'</span>;</span><br><span class="line">  <span class="keyword">this</span>.page.identifier = <span class="string">'&#123;&#123; page.path &#125;&#125;'</span>;</span><br><span class="line">  <span class="keyword">this</span>.page.title = <span class="string">'&#123;&#123; page.title| addslashes &#125;&#125;'</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> d = <span class="built_in">document</span>, s = d.createElement(<span class="string">'script'</span>);</span><br><span class="line">s.src = <span class="string">'https://&#123;&#123;theme.disqus.shortname&#125;&#125;.disqus.com/embed.js'</span>;</span><br><span class="line">s.setAttribute(<span class="string">'data-timestamp'</span>, <span class="string">''</span> + +<span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">(d.head || d.body).appendChild(s);</span><br><span class="line"></span><br><span class="line">$(<span class="string">'#load-disqus'</span>).remove();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">   &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br><span class="line"><span class="regexp">#省略</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#123;% endraw %&#125;</span></span><br></pre></td></tr></table></figure><h3 id="来必力"><a href="#来必力" class="headerlink" title="来必力"></a>来必力</h3><h4 id="获取data-uid"><a href="#获取data-uid" class="headerlink" title="获取data-uid"></a>获取data-uid</h4><p>首次登录时 chrome 反应比较慢，建议换其他浏览器，注意发送到注册邮箱的验证码</p><p>选择安装版本，选择个人版，获取data-uid</p><h4 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h4><p>主题配置，打开livere_uid，填写uid</p><p><strong>注意：</strong><br>此时需要关闭主题配置启用的其他评论系统，原代码逻辑采用的是只开启一种评论系统</p><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p><img src="https://i.imgur.com/lm3cDsH.png" alt=""></p><h4 id="增加开关控制"><a href="#增加开关控制" class="headerlink" title="增加开关控制"></a>增加开关控制</h4><ul><li>主题配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">livere:#新增</span><br><span class="line">    enable: true#新增，控制评论显示</span><br><span class="line">    livere_uid: xxxxxxx</span><br></pre></td></tr></table></figure><ul><li>livere.swig 模板修改</li></ul><p>增加<code>theme.livere.enable</code>引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if page.comments and theme.livere.enable and theme.livere.livere_uid  %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><ul><li>comments.swig 模板</li></ul><p>原<code>theme.livere_uid</code><br>变更为：<code>theme.livere.livere_uid</code></p><p>注意：<br>上述评论系统代码在主题更新到6.0之后会有变化</p><p>双评论系统实现原理不变，具体方案有变化</p><h3 id="gitment"><a href="#gitment" class="headerlink" title="gitment"></a>gitment</h3><h2 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p><code>npm install hexo-generator-feed --save</code></p><h3 id="主题修改"><a href="#主题修改" class="headerlink" title="主题修改"></a>主题修改</h3><p><code>rss: /atom.xml</code></p><p>效果:<br><img src="https://i.imgur.com/fBbqUg4.png" alt=""><br>chrome浏览器没做解析，所以不用关心显示问题，正常现象</p><p>firefox ，ie浏览器显示正常，效果不太一样。可自行验证</p><h2 id="seo-相关"><a href="#seo-相关" class="headerlink" title="seo 相关"></a>seo 相关</h2><p>文章尽量为英文名称，短路径，修改站点配置，permalink如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: http://yoursite</span><br><span class="line">root: /</span><br><span class="line">permalink: :title.html</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><h2 id="多端同步Hexo源文件"><a href="#多端同步Hexo源文件" class="headerlink" title="多端同步Hexo源文件"></a>多端同步Hexo源文件</h2><p>各网站需添加访问公钥，这里演示三个比较流行的代码托管网站，github ，gitee ,coding</p><h3 id="多仓库操作"><a href="#多仓库操作" class="headerlink" title="多仓库操作"></a>多仓库操作</h3><h4 id="删除本地已关联的origin仓库"><a href="#删除本地已关联的origin仓库" class="headerlink" title="删除本地已关联的origin仓库"></a>删除本地已关联的origin仓库</h4><p><code>git remote rm origin</code></p><h4 id="关联远程仓库"><a href="#关联远程仓库" class="headerlink" title="关联远程仓库"></a>关联远程仓库</h4><ul><li><p>coding 需新建仓库，使用此仓库名称与本地关联</p></li><li><p>gitee 与coding 由于可以将仓库设置为私有，因此可以将源码上传，</p></li><li><p>发布地址上述3个网站需要有选择性添加</p><p>​</p></li></ul><p>下面演示三个都关联,gitee、coding 新建仓库，注意仓库名称与用户名称保持一致</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add github git@github.com:username/repo.git</span><br><span class="line">$ git remote add gitee git@gitee.com:username/repo.git</span><br><span class="line">$ git remote add coding git@git.coding.net:username/repo.git</span><br><span class="line"></span><br><span class="line">$ git remote -v</span><br><span class="line">coding  git@git.coding.net:username/repo.git (fetch)</span><br><span class="line">coding  git@git.coding.net:username/repo.git (push)</span><br><span class="line">gitee   git@gitee.com:username/repo.git (fetch)</span><br><span class="line">gitee   git@gitee.com:username/repo.git (push)</span><br><span class="line">github  git@github.com:username/repo.git (fetch)</span><br><span class="line">github  git@github.com:username/repo.git (push)</span><br></pre></td></tr></table></figure><h4 id="多个仓库部署发布"><a href="#多个仓库部署发布" class="headerlink" title="多个仓库部署发布"></a>多个仓库部署发布</h4><p>参考<a href="http://shomy.top/2016/03/03/hexo-in-coding-github/" target="_blank" rel="noopener">hexo同时部署到coding(gitcafe)和github</a></p><p>若同时发布</p><ul><li>站点配置：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">repository:</span><br><span class="line">  #发布到github</span><br><span class="line">  github: git@github.com:username/repo.git</span><br><span class="line">  #发布到gitee</span><br><span class="line">  gitee: git@gitee.com:username/repo.git</span><br><span class="line">  #发布到coding</span><br><span class="line">  coding:git@git.coding.net:username/repo.git</span><br></pre></td></tr></table></figure><p>注意： 由于coding有广告，免广告需单独修改主题配置，站点发布仓库需区分处理<br>若单仓库发布</p><p>站点配置不变</p><p><code>repository: git@github.com:username/repo.git</code></p><ul><li><p>GitHub</p><p>优点：仓库数量不限，</p><p>缺点：仓库公开，任何人都可以随意fork，国内访问速度慢，容量限制</p><p>新建仓库，推送本地代码</p></li></ul><ul><li><p>coding</p><p>优点： 据说访问速度快</p><p>缺点： 无法直接导入仓库，仓库数量限制，256m容量限制，想更高需软妹币</p><p>新建仓库，推送本地代码</p><p>注意：Hosted by Coding Pages 免广告页面申请需单独配置，最简单的只需修改主题配置custom_text即可</p><p>文字形式：</p><p>主题配置</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">custom_text:</span><br><span class="line">             #发布到coding需打开，发布到除coding之外的其他托管网站，可以注释掉</span><br><span class="line">             Hosted by &lt;a href=&quot;https://pages.coding.me&quot;&gt;Coding Pages&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>图片形式：可参考coding官网</p><ul><li><p>Gitee</p><p>优点：仓库可以为私有，安全 ,企业用户</p><p>缺点：仓库超400m，限制svn访问</p><p>可直接从github 导入仓库，或上述方法</p></li></ul><ul><li>注意</li></ul><ol><li>gitee分支属性需设置为常规分支，否则其他端无法读写代码</li><li>coding 分支属性设置之后无法变更，谨慎操作</li><li>经验证发现coding、gitee仓库名需与用户名一致，否则css失效</li><li>gitee 与coding发布站点需启用pages</li></ol><h4 id="上传源码"><a href="#上传源码" class="headerlink" title="上传源码"></a>上传源码</h4><p>将本地当前所在分支上传到远程指定分支</p><ul><li>源码上传到gitee</li></ul><p>分支为hexo</p><p><code>git push gitee hexo</code></p><ul><li>源码上传到coding</li></ul><p><code>git push coding hexo</code></p><p>注意敏感信息配置文件不要上传，当然仓库为私有的话，就无所谓了</p><p>由于github只能公开仓库，因此源码不再上传到github</p><h3 id="备份流程"><a href="#备份流程" class="headerlink" title="备份流程"></a>备份流程</h3><blockquote><p>参考<a href="http://cherryblog.site/hexo-3.html" target="_blank" rel="noopener">cherry</a></p></blockquote><p>自行修改备份源文件仓库地址，github、gitee 、coding</p><h4 id="备份源文件流程"><a href="#备份源文件流程" class="headerlink" title="备份源文件流程"></a>备份源文件流程</h4><p>配置原.gitignore文件，添加需要忽略的文件</p><p>如：关键信息、文章源文件、配置等</p><p>我的配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">/.deploy_git</span><br><span class="line">/_config.yml</span><br><span class="line">next.yml  </span><br><span class="line">package.json</span><br><span class="line">package-lock.json</span><br></pre></td></tr></table></figure><p>忽略原则可自行配置</p><p>站点目录下删除自带.git文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init` #创建仓库</span><br><span class="line"></span><br><span class="line">git checkout -b hexo #创建并切换到hexo分支</span><br></pre></td></tr></table></figure><p>注：此分支用于存储需要同步的源文件，此分支是否为默认分支大何影响，非默认分支时我们在push时指定该分支，远程master分支属于站点分支，不能存储源文件，当我们本地编译发布时会自动更新，无需操心</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;添加源文件&quot;</span><br><span class="line"></span><br><span class="line">#关联到gitee</span><br><span class="line">git remote add gitee git@gitee.com:&lt;username&gt;/&lt;repo&gt;.git</span><br><span class="line"></span><br><span class="line">#关联到coding</span><br><span class="line">git remote add coding git@git.coding.net:&lt;username&gt;/&lt;repo&gt;.git</span><br><span class="line"></span><br><span class="line">#推送代码</span><br><span class="line">git push --set-upstream gitee hexo</span><br><span class="line">或`git push gitee hexo` :push到远端</span><br><span class="line"></span><br><span class="line">git push coding hexo</span><br></pre></td></tr></table></figure><h4 id="备份主题文件"><a href="#备份主题文件" class="headerlink" title="备份主题文件"></a>备份主题文件</h4><ul><li>如果定制程度不高，仅修改了配置文件，可以采用<a href="https://github.com/iissnan/hexo-theme-next/issues/328" target="_blank" rel="noopener">DataFile</a><br>的方式备份</li></ul><p>即：将主题配置修改过的信息单独存放于\source_data\next.yml文件，原主题配置文件改为<code>override： true</code></p><ul><li>如果主题定制程度比较高的话，建议使用下面的方法进行备份，注意，不要泄露主题配置文件内的敏感信息</li></ul><p><a href="https://github.com/iissnan/hexo-theme-next/issues/932" target="_blank" rel="noopener">参考</a></p><p>主题需先fork 到自己的github仓库，删除git 及.gitignore文件，可直接push 到博客源仓库，不删除这俩文件，可push到自己的fork 仓库</p><p>按上述方法push效果如下图：</p><p><img src="https://i.imgur.com/gh5lnW5.png" alt=""></p><p><strong>注意：</strong><br>经试验证实，搭建博客时clone 的主题文件属于Next 官网，我们在上传本地源文件时即使删除了.git等文件也无法成功上传 ，此时我们自己修改后的主题文件需要备份，再使用上面提到的方法，覆盖修改过的文件后再上传</p><h4 id="关于主题更新的问题"><a href="#关于主题更新的问题" class="headerlink" title="关于主题更新的问题"></a>关于主题更新的问题</h4><p>待研究出可行方案再补充<br>目前的一个思路是：fork后clone 的本地仓库保留，next官网更新主题后可直接远程拉取最新提交，再与本地比对合并，有机会可以验证一下</p><h3 id="其他端后续操作"><a href="#其他端后续操作" class="headerlink" title="其他端后续操作"></a>其他端后续操作</h3><ul><li>本地无仓库代码时</li></ul><p>git clone ,<br>无需 init，因为已经包含了原git仓库</p><ul><li><p>本地已存在仓库时</p><p>git pull 时，指定远程仓库分支</p></li></ul><p>如：</p><p>coding ：<code>git putll coding hexo</code></p><p>gitee : <code>git pull gitee hexo</code></p><p>github: <code>git pull github hexo</code></p><ul><li>推送代码</li></ul><p>coding:</p><p><code>git push coding hexo</code></p><p>gitee:</p><p><code>git push gitee hexo</code></p><p>github:</p><p><code>git push github hexo</code></p><h2 id="插件总结"><a href="#插件总结" class="headerlink" title="插件总结"></a>插件总结</h2><h3 id="自动部署Git-插件"><a href="#自动部署Git-插件" class="headerlink" title="自动部署Git 插件"></a>自动部署Git 插件</h3><p><code>npm install hexo-deployer-git --save</code></p><h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-index</span><br><span class="line">npm install --save hexo-generator-archive</span><br><span class="line">npm install --save hexo-generator-tag</span><br></pre></td></tr></table></figure><h3 id="文章字数统计阅读时长"><a href="#文章字数统计阅读时长" class="headerlink" title="文章字数统计阅读时长"></a>文章字数统计阅读时长</h3><p><code>npm install hexo-wordcount --save</code></p><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><h4 id="localSearch"><a href="#localSearch" class="headerlink" title="localSearch"></a>localSearch</h4><p><code>npm install hexo-generator-searchdb --save</code></p><h4 id="algolia"><a href="#algolia" class="headerlink" title="algolia"></a>algolia</h4><p><code>npm install --save hexo-algolia</code></p><p>至此，Hexo 搭建博客相关内容告一段落，剩下的就是看到好玩的东西会临时加一下到博客，同步更新实现方案</p><h2 id="博客文章添加代码且高亮方法"><a href="#博客文章添加代码且高亮方法" class="headerlink" title="博客文章添加代码且高亮方法"></a>博客文章添加代码且高亮方法</h2><h3 id="md文件引入代码"><a href="#md文件引入代码" class="headerlink" title="md文件引入代码"></a>md文件引入代码</h3><p><img src="https://i.imgur.com/NyIQVX7.png" alt=""></p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>站点配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: true</span><br><span class="line">  tab_replace:</span><br></pre></td></tr></table></figure><h2 id="站点加速"><a href="#站点加速" class="headerlink" title="站点加速"></a>站点加速</h2><h3 id="关闭默认字体"><a href="#关闭默认字体" class="headerlink" title="关闭默认字体"></a>关闭默认字体</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">font:</span><br><span class="line">  enable: false</span><br><span class="line"></span><br><span class="line">  global:</span><br><span class="line">    external: false</span><br><span class="line">    family: Lato</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  headings:</span><br><span class="line">    external: false</span><br><span class="line">    family:</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  posts:</span><br><span class="line">    external: false</span><br><span class="line">    family:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  logo:</span><br><span class="line">    external: false</span><br><span class="line">    family:</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  codes:</span><br><span class="line">    external: false</span><br><span class="line">    family:</span><br><span class="line">    size:</span><br></pre></td></tr></table></figure><h3 id="浏览器自动部署"><a href="#浏览器自动部署" class="headerlink" title="浏览器自动部署"></a>浏览器自动部署</h3><p>使用hexo的hexo-browersync插件<br>安装插件：<code>npm install hexo-browersync --save</code><br><code>hexo s</code></p><blockquote><p>吃水不忘挖井人 ，感谢以下大神</p><p><a href="https://www.jianshu.com/p/087c84edfc43" target="_blank" rel="noopener">南尘</a> |  <a href="http://www.zipperary.com/2013/05/28/hexo-guide-2" target="_blank" rel="noopener">Zippera</a> |  <a href="https://www.jianshu.com/p/380290deb8f0" target="_blank" rel="noopener">diygreen</a> |  <a href="https://segmentfault.com/a/1190000009009697" target="_blank" rel="noopener">cherry</a> | <a href="https://zhuanlan.zhihu.com/p/28128674)" target="_blank" rel="noopener">知乎</a>| <a href="https://ehlxr.me/" target="_blank" rel="noopener">ehlxr</a> |  <a href="https://chalkit.tk/20171123-load-Disqus-livere-comment-on-click-in-hexo-next-theme/" target="_blank" rel="noopener">chalkit</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言：&lt;/p&gt;
&lt;p&gt;对博客做一些扩展，增加一些交互功能，如搜索、评论、订阅等&lt;/p&gt;
&lt;p&gt;教你如何多端同步修改，博客源码托管&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="原创" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Hexo" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/Hexo/"/>
    
    
      <category term="博客" scheme="https://tianbozhang.coding.me/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Git" scheme="https://tianbozhang.coding.me/tags/Git/"/>
    
      <category term="Hexo" scheme="https://tianbozhang.coding.me/tags/Hexo/"/>
    
      <category term="Node.js" scheme="https://tianbozhang.coding.me/tags/Node-js/"/>
    
      <category term="实战" scheme="https://tianbozhang.coding.me/tags/%E5%AE%9E%E6%88%98/"/>
    
      <category term="高级" scheme="https://tianbozhang.coding.me/tags/%E9%AB%98%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>个人博客，从入坑到填坑</title>
    <link href="https://tianbozhang.coding.me/personal-blog-custom.html"/>
    <id>https://tianbozhang.coding.me/personal-blog-custom.html</id>
    <published>2018-01-16T16:00:00.000Z</published>
    <updated>2018-01-30T06:34:40.486Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：</p><p>静态网站建立之后我们需要对其做些细节修改</p><p>此博文包括文章、整站的一些细节修改，并增加一些统计功能</p></blockquote><a id="more"></a><h2 id="站点细节"><a href="#站点细节" class="headerlink" title="站点细节"></a>站点细节</h2><p>大部分内容都能从官网找到，这里做个备忘录</p><h3 id="头像设置"><a href="#头像设置" class="headerlink" title="头像设置"></a>头像设置</h3><p>参考Next官网</p><p>主题配置文件</p><p>按描述路径放置图片，图片格式不重要，但必须为有效图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line"># in theme directory(source/images): /images/avatar.gif</span><br><span class="line"># in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class="line">avatar: /images/avatar.jpg</span><br></pre></td></tr></table></figure><h3 id="网站logo"><a href="#网站logo" class="headerlink" title="网站logo"></a>网站logo</h3><p>此logo为页面在浏览器标签上显示图片</p><ul><li><a href="https://tool.lu/favicon/" target="_blank" rel="noopener">制作网站</a></li></ul><p>命名为.ico或.png文件<br>存放于sources\images\路径</p><ul><li>主题配置：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line"></span><br><span class="line">  small: /images/favicon-16x16.ico</span><br><span class="line"></span><br><span class="line">  medium: /images/favicon-32x32.png</span><br></pre></td></tr></table></figure><h3 id="设置阅读全文"><a href="#设置阅读全文" class="headerlink" title="设置阅读全文"></a>设置阅读全文</h3><p><a href="http://theme-next.iissnan.com/faqs.html" target="_blank" rel="noopener">参考官网</a>)</p><h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><p>插件安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-generator-index</span><br><span class="line">npm install --save hexo-generator-archive</span><br><span class="line">npm install --save hexo-generator-tag</span><br></pre></td></tr></table></figure><p>站点配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">index_generator:</span><br><span class="line">path: &apos;&apos;</span><br><span class="line">per_page: 5</span><br><span class="line">order_by: -date</span><br><span class="line"></span><br><span class="line">archive_generator:</span><br><span class="line">per_page: 20</span><br><span class="line">yearly: true</span><br><span class="line">monthly: true</span><br><span class="line"></span><br><span class="line">tag_generator:</span><br><span class="line">per_page: 10</span><br></pre></td></tr></table></figure><h3 id="社会化链接"><a href="#社会化链接" class="headerlink" title="社会化链接"></a>社会化链接</h3><ul><li><a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">图标名称获取</a></li></ul><p>这里只需要替换自己想要的图标名称即可</p><ul><li>主题配置<br>social标签，打开或添加对应项，替换链接</li></ul><h3 id="文本的居中引用"><a href="#文本的居中引用" class="headerlink" title="文本的居中引用"></a>文本的居中引用</h3><p>以下三种任选其一，直接在md文件插入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. &lt;blockquote class=&quot;blockquote-center&quot;&gt;blah blah blah&lt;/blockquote&gt;</span><br><span class="line">2. &#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;</span><br><span class="line">3. &#123;% cq %&#125; blah blah blah &#123;% endcq %&#125;</span><br></pre></td></tr></table></figure><h3 id="背景动画"><a href="#背景动画" class="headerlink" title="背景动画"></a>背景动画</h3><ul><li>默认的无需插件安装 ：<br>canvas_nest 与three_waves 二选一</li></ul><h3 id="隐藏强力驱动"><a href="#隐藏强力驱动" class="headerlink" title="隐藏强力驱动"></a>隐藏强力驱动</h3><p>直接修改配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">footer:</span><br><span class="line">  powered: false</span><br><span class="line">  theme:</span><br><span class="line">  enable: false</span><br></pre></td></tr></table></figure><h3 id="网页底部图标"><a href="#网页底部图标" class="headerlink" title="网页底部图标"></a>网页底部图标</h3><p><a href="http://fontawesome.io/icons/" target="_blank" rel="noopener">图标名称</a></p><p>主题配置：<code>footer: icon： xxx</code><br>修改themes\next\layout_partials\footer.swig</p><p><code>footer.icon</code>关键字</p><p>图标放大：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#原图：</span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-&#123;&#123; theme.footer.icon &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">#1倍：</span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-&#123;&#123; theme.footer.icon &#125;&#125; fa-lg"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">#2倍：</span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-&#123;&#123; theme.footer.icon &#125;&#125; fa-2x"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文章相关"><a href="#文章相关" class="headerlink" title="文章相关"></a>文章相关</h2><h3 id="文章版权声明"><a href="#文章版权声明" class="headerlink" title="文章版权声明"></a>文章版权声明</h3><ul><li>主题配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post_copyright:</span><br><span class="line">enable: true</span><br></pre></td></tr></table></figure><ul><li>站点配置</li></ul><p><code>url:http://yoururl.com #添加自己的url</code></p><p>最终会生成当前文章的完整url</p><h3 id="文章底部添加’The-End’"><a href="#文章底部添加’The-End’" class="headerlink" title="文章底部添加’The End’"></a>文章底部添加’The End’</h3><p>\themes\next\layout_macro\post.swig<br>post-body div<br>post.content</p><p>关键字 结束后</p><p>添加<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span>—— The End ——<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;post-body...&gt;</span><br><span class="line">#省略</span><br><span class="line">&#123;% if post.type === &apos;picture&apos; %&#125;</span><br><span class="line">&lt;a href=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot;&gt;&#123;&#123; post.content &#125;&#125;&lt;/a&gt;</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">&#123;&#123; post.content &#125;&#125;</span><br><span class="line">&lt;div style=&quot;text-align:center;color: #ccc;font-size:18px;&quot;&gt;—— The End ——&lt;/div&gt;</span><br><span class="line">#省略</span><br><span class="line">&#123;&#123; post.content &#125;&#125;</span><br><span class="line">&lt;div style=&quot;text-align:center;color: #ccc;font-size:18px;&quot;&gt;—— The End ——&lt;/div&gt;</span><br><span class="line">&#123;% endif  %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>添加位置不对容易出现 在首页</p><h3 id="文章底部标签‘-’修改"><a href="#文章底部标签‘-’修改" class="headerlink" title="文章底部标签‘#’修改"></a>文章底部标签‘#’修改</h3><p>\themes\next\layout_macro\post.swig</p><p>post-tags关键字：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">"post-footer"</span>&gt;</span></span><br><span class="line">      &#123;% if post.tags and post.tags.length and not is_index %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"post-tags"</span>&gt;</span></span><br><span class="line">          &#123;% for tag in post.tags %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(tag.path) &#125;&#125;"</span> <span class="attr">rel</span>=<span class="string">"tag"</span>&gt;</span># &#123;&#123; tag.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          &#123;% endfor %&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p><code>rel=&quot;tag&quot;&gt;#</code><br>替换为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rel="tag"&gt;<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-tag"</span>&gt;</span> <span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文章小图标"><a href="#文章小图标" class="headerlink" title="文章小图标"></a>文章小图标</h3><p>主题配置 定义：<br>    post #控制文章图标显示<br>        icon: false</p><p>需要处理图标的找到对应图标，添加类似下面的代码来控制图标的显示：</p><pre><code>&lt;% if theme.xxx.icon %&gt;&lt;% endif %&gt;</code></pre><p>xxx为当前元素标识<br>修改文件：\themes\next\layout_macro\post.swig<br>找到 <code>icon</code>字符串</p><h4 id="字数统计与阅读时间图标"><a href="#字数统计与阅读时间图标" class="headerlink" title="字数统计与阅读时间图标"></a>字数统计与阅读时间图标</h4><p>post_wordcount  关键字</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">  &#123;% if theme.post_wordcount.wordcount %&#125;</span><br><span class="line">     #省略</span><br><span class="line">     <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span> #这个是图标</span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-file-word-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">     #省略</span><br><span class="line">   &#123;% endif %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>改为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&#123;% if theme.post_wordcount.wordcount %&#125;</span><br><span class="line">  #省略</span><br><span class="line">  &#123;% if theme.post_wordcount.icon %&#125;#新增图标控制</span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span>#这个是图标</span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-file-word-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  #省略</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>min2read 关键字</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&#123;% if theme.post_wordcount.min2read %&#125;</span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span> #这个是图标</span><br><span class="line">   <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-clock-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   #省略</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>改为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&#123;% if theme.post_wordcount.min2read %&#125;</span><br><span class="line">&#123;% if theme.post_wordcount.icon %&#125;#新增图标控制</span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-clock-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">#省略</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><h4 id="发表、更新等时间图标"><a href="#发表、更新等时间图标" class="headerlink" title="发表、更新等时间图标"></a>发表、更新等时间图标</h4><p>created_at</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-time"</span>&gt;</span></span><br><span class="line">   &#123;% if theme.post_meta.created_at %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-calendar-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   #省略</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>改为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&#123;% if theme.post_meta.created_at %&#125;</span><br><span class="line">  &#123;% if theme.post_meta.icon %&#125;#新增图标控制</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-calendar-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> &#123;% endif %&#125;</span><br><span class="line"> #省略</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>updated_at</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&#123;% if theme.post_meta.updated_at %&#125;</span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span>#图标</span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-calendar-check-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">     #省略</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>改为：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"> &#123;% if theme.post_meta.updated_at %&#125;</span><br><span class="line">&#123;% if theme.post_meta.icon %&#125;#新增图标控制</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-calendar-check-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">#省略</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></p><h4 id="文章评论计数图标"><a href="#文章评论计数图标" class="headerlink" title="文章评论计数图标"></a>文章评论计数图标</h4><p>disqus.count关键字 ，主题配置设置为flase，最简单</p><p>或者按上述方法添加代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&#123;% elseif theme.disqus.enable and theme.disqus.count %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-comments-count"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;% if theme.disqus.icon %&#125;#新增图标控制</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-divider"</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-comment-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><h3 id="阅读时长"><a href="#阅读时长" class="headerlink" title="阅读时长"></a>阅读时长</h3><p>min2read 关键字</p><ul><li>增加时间单位</li></ul><p>语言文件</p><p>\themes\next\languagues\zh-Hans</p><p>增加 min2read_unit: 分钟</p><ul><li>增加下面代码，去除多余符号</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-text"</span>&gt;</span>&#123;&#123; __('post.min2read_unit') &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>post文件修改：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&#123;% if theme.post_wordcount.min2read %&#125;</span><br><span class="line">#省略</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-text"</span>&gt;</span>&#123;&#123; ('post.min2read_unit') &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">&#123;% if theme.post_wordcount.item_text %&#125;</span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-text"</span>&gt;</span>&#123;&#123; __('post.min2read') &#125;&#125; &amp;asymp;   <span class="tag">&lt;/<span class="name">span</span>&gt;</span>#待去除符号</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; __('post.min2read') &#125;&#125;"</span>&gt;</span>&#123;&#123; min2read(post.content) &#125;&#125;</span><br><span class="line"> <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   #待加入新代码</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&#123;% if theme.post_wordcount.min2read %&#125;</span><br><span class="line">#省略</span><br><span class="line">&#123;% if theme.post_wordcount.item_text %&#125;</span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-text"</span>&gt;</span>&#123;&#123; __('post.min2read') &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>#去除符号</span><br><span class="line"> &#123;% endif %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; __('post.min2read') &#125;&#125;"</span>&gt;</span></span><br><span class="line">    &#123;&#123; min2read(post.content) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-text"</span>&gt;</span>&#123;&#123; __('post.min2read_unit') &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>#新加入的代码</span><br><span class="line"></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>上述几处修改效果：</p><p><img src="https://i.imgur.com/0XooJHc.png" alt=""></p><h2 id="相关统计"><a href="#相关统计" class="headerlink" title="相关统计"></a>相关统计</h2><h3 id="文章字数与阅读时长"><a href="#文章字数与阅读时长" class="headerlink" title="文章字数与阅读时长"></a>文章字数与阅读时长</h3><ul><li><p>安装 wordcount 插件</p><p><code>npm install hexo-wordcount --save</code></p></li><li><p>主题配置</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">post_wordcount:</span><br><span class="line">  item_text: true #整体</span><br><span class="line">  wordcount: true # 字数</span><br><span class="line">  min2read: true # 时间</span><br><span class="line">  totalcount: false #阅读统计</span><br><span class="line">  separated_meta: true #分割元素控制</span><br><span class="line">  icon: false #新增项，控制图标显示</span><br></pre></td></tr></table></figure><h3 id="文章阅读次数"><a href="#文章阅读次数" class="headerlink" title="文章阅读次数"></a>文章阅读次数</h3><p>使用 <a href="https://leancloud.cn/" target="_blank" rel="noopener">leancloud</a></p><ul><li><p>注册<br>拿到app_id及app_key</p></li><li><p>启用</p></li></ul><p>主题配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">leancloud_visitors</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: xxxxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">  app_key: xxxxxxxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><h3 id="文章阅读数"><a href="#文章阅读数" class="headerlink" title="文章阅读数"></a>文章阅读数</h3><p>热度：</p><p>需要leanCloud id 及key</p><p>themes\next\layout_macro\post.swig 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span class=&quot;leancloud-visitors-count&quot;&gt;&lt;/span&gt;</span><br><span class="line">/span&gt;</span><br><span class="line">#待新增符号</span><br></pre></td></tr></table></figure><p>新增符号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> &lt;span class=&quot;leancloud-visitors-count&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;span&gt;℃&lt;/&gt;#新增符号</span><br></pre></td></tr></table></figure><p>zh_Hans.yml  </p><p><code>visitors: 热度  #原词修改为“热度”</code></p><h3 id="站点访问"><a href="#站点访问" class="headerlink" title="站点访问"></a>站点访问</h3><p>推荐使用高版本，毕竟相对来说配置简单<br>不蒜子统计uv 与pv：<br>主题配置文件</p><p>修改:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line"> enable :true</span><br></pre></td></tr></table></figure><p>以下配置：true 为开启，false 为关闭    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line"># count values only if the other configs are false</span><br><span class="line">  enable: true</span><br><span class="line"># custom uv span for the whole site  全站访问人数</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;访问人数&lt;/i&gt;</span><br><span class="line">  site_uv_footer: 人</span><br><span class="line"># custom pv span for the whole site 全站访问次数</span><br><span class="line"> site_pv: true</span><br><span class="line">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;访问次数&lt;/i&gt;</span><br><span class="line">  site_pv_footer: 次</span><br><span class="line"># custom pv span for one page only 每篇文章访问次数</span><br><span class="line">  page_pv: false</span><br><span class="line">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;本文总阅读量&lt;/i&gt;</span><br><span class="line">  page_pv_footer: 次</span><br></pre></td></tr></table></figure><p>去除图标：<br>删除<i class="fa fa-xxx"></i>即可</p><p>上述几处效果：<br><img src="https://i.imgur.com/AXlen72.png" alt=""></p><h2 id="其他及一些好玩的"><a href="#其他及一些好玩的" class="headerlink" title="其他及一些好玩的"></a>其他及一些好玩的</h2><h3 id="Frok-Me-On-GitHub"><a href="#Frok-Me-On-GitHub" class="headerlink" title="Frok Me On GitHub"></a>Frok Me On GitHub</h3><ul><li>选定代码<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="noopener">GitHub Ribbons</a></li><li>添加<br>themes\next\layout_layout.swig，添加到body内</li></ul><p><img src="https://i.imgur.com/hDREJ0x.png" alt=""></p><p>标红处替换为你自己的github地址</p><h3 id="头像旋转"><a href="#头像旋转" class="headerlink" title="头像旋转"></a>头像旋转</h3><p><a href="https://ehlxr.me/2016/08/30/%E4%BD%BF%E7%94%A8Hexo%E5%9F%BA%E4%BA%8EGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89/" target="_blank" rel="noopener">效果参考</a></p><p>方案参考： next\source\css\main.styl</p><p>为方便主题更新，代码改动比较大的原则上尽量使用自定义文件导入的方式。</p><p>优化实现方案：</p><ol><li><p>自定义css  文件命名为<code>custom-sidebar.styl</code></p><p>完整路径：themes\next\source\css_custom\custom-sidebar.styl</p></li><li><p>引入自定义css，原文件主体代码不改动</p><p>themes\next\source\css_common\components\sidebar\sidebar-author.styl 模板末尾</p></li></ol><p><code>@import &quot;../../../_custom/custom-sidebar&quot;;</code></p><p>再加个放大效果<br><code>custom-sidebar.styl</code>文件完整代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/*头像圆形*/</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#333</span>sf;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束</span></span><br><span class="line"><span class="comment">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span></span><br><span class="line">  <span class="attribute">-webkit-animation</span>: play <span class="number">2s</span> ease-out <span class="number">1s</span> <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">-moz-animation</span>: play <span class="number">2s</span> ease-out <span class="number">1s</span> <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">animation</span>: play <span class="number">2s</span> ease-out <span class="number">1s</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  <span class="attribute">-webkit-transition</span>: -webkit-transform <span class="number">1.5s</span> ease-out;</span><br><span class="line">  <span class="attribute">-moz-transition</span>: -moz-transform <span class="number">1.5s</span> ease-out;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">1.5s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line"><span class="comment">/* 鼠标经过停止头像旋转</span></span><br><span class="line"><span class="comment">  -webkit-animation-play-state:paused;</span></span><br><span class="line"><span class="comment">  animation-play-state:paused;*/</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* 鼠标经过头像旋转360度，放大 */</span></span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(360deg) <span class="built_in">scale</span>(1.1);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(360deg) <span class="built_in">scale</span>(1.1);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(360deg) <span class="built_in">scale</span>(1.1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Z 轴旋转动画 */</span></span><br><span class="line">@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-<span class="keyword">moz</span>-<span class="keyword">keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-author-name</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: $site-author-name-margin;</span><br><span class="line">  <span class="attribute">text-align</span>: $site-author-name-align;</span><br><span class="line">  <span class="attribute">color</span>: $site-author-name-color;</span><br><span class="line">  <span class="attribute">font-weight</span>: $site-author-name-weight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-description</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: $site-description-margin-top;</span><br><span class="line">  <span class="attribute">text-align</span>: $site-description-align;</span><br><span class="line">  <span class="attribute">font-size</span>: $site-description-font-size;</span><br><span class="line">  <span class="attribute">color</span>: $site-description-color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="页面自定义样式"><a href="#页面自定义样式" class="headerlink" title="页面自定义样式"></a>页面自定义样式</h3><p><a href="http://iloveocean.science/2017/build-blog-hexo-advanced/" target="_blank" rel="noopener">参考</a></p><p>添加到themes\next\source\css_custom.styl</p><h3 id="footer与文章内容间距"><a href="#footer与文章内容间距" class="headerlink" title="footer与文章内容间距"></a>footer与文章内容间距</h3><p>根据：source\css_common\outline\outline.styl</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// Main Section</span><br><span class="line">// --------------------------------------------------</span><br><span class="line">.main &#123; padding-bottom: $footer-height + $gap-between-main-and-footer; &#125;</span><br></pre></td></tr></table></figure><p>修改：</p><p>\themes\next\source\css_variables\custom.styl样式文件</p><p><code>$gap-between-main-and-footer = 40px</code></p><p>\themes\next\source\css_custom\custom.styl</p><p>添加代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//页脚</span><br><span class="line"><span class="selector-class">.footer</span>&#123;</span><br><span class="line"> <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line"> <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置动态title崩溃欺骗"><a href="#设置动态title崩溃欺骗" class="headerlink" title="设置动态title崩溃欺骗"></a>设置动态title崩溃欺骗</h3><p>\themes\next\source\js\src，新建custom-title.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line"><span class="keyword">var</span> OriginTitile = <span class="built_in">document</span>.title;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'visibilitychange'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.hidden) &#123;</span><br><span class="line">   $(<span class="string">'[rel="icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"/img/TEP.ico"</span>);</span><br><span class="line">   <span class="built_in">document</span>.title = <span class="string">' 页面崩溃啦 ~ ！'</span>;</span><br><span class="line">   clearTimeout(titleTime);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">   $(<span class="string">'[rel="icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"/favicon.ico"</span>);</span><br><span class="line">   <span class="built_in">document</span>.title = <span class="string">' 噫又好了~ '</span> + OriginTitile;</span><br><span class="line">   titleTime = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="built_in">document</span>.title = OriginTitile;&#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>更改 \themes\next\layout_layout.swig 。在 &lt;/body 之前添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--卖萌--&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/custom/custom-title.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="High一下"><a href="#High一下" class="headerlink" title="High一下"></a>High一下</h3><p>注意：主题升级文件路径有变化，代码不变<br>来源：<a href="http://www.zipperary.com/2013/11/19/give-it-a-high/" target="_blank" rel="noopener">zipperary</a>，感谢大神</p><p>修改原则：减少源码修改，尽量使用自定义文件方式</p><p>header位置可添加到themes\next\layout_custom\header.swig</p><p>sidebar位置可添加到themes\next\layout_custom\sidebar.swig</p><p>源码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">title</span>=<span class="string">"把这个链接拖到你的Chrome收藏夹工具栏中"</span> <span class="attr">href</span>=<span class="string">'javascript:(function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">function c() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var e = document.createElement("link");</span></span></span><br><span class="line"><span class="tag"><span class="string">e.setAttribute("type", "text/css");</span></span></span><br><span class="line"><span class="tag"><span class="string">e.setAttribute("rel", "stylesheet");</span></span></span><br><span class="line"><span class="tag"><span class="string">e.setAttribute("href", f);</span></span></span><br><span class="line"><span class="tag"><span class="string">e.setAttribute("class", l);</span></span></span><br><span class="line"><span class="tag"><span class="string">document.body.appendChild(e)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">function h() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var e = document.getElementsByClassName(l);</span></span></span><br><span class="line"><span class="tag"><span class="string">for (var t = 0; t &lt; e.length; t++) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">document.body.removeChild(e[t])</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">function p() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var e = document.createElement("div");</span></span></span><br><span class="line"><span class="tag"><span class="string">e.setAttribute("class", a);</span></span></span><br><span class="line"><span class="tag"><span class="string">document.body.appendChild(e);</span></span></span><br><span class="line"><span class="tag"><span class="string">setTimeout(function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">document.body.removeChild(e)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;, 100)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">function d(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">return &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">height : e.offsetHeight,</span></span></span><br><span class="line"><span class="tag"><span class="string">width : e.offsetWidth</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">function v(i) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var s = d(i);</span></span></span><br><span class="line"><span class="tag"><span class="string">return s.height &gt; e &amp;&amp; s.height &lt; n &amp;&amp; s.width &gt; t &amp;&amp; s.width &lt; r</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">function m(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var t = e;</span></span></span><br><span class="line"><span class="tag"><span class="string">var n = 0;</span></span></span><br><span class="line"><span class="tag"><span class="string">while (!!t) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">n += t.offsetTop;</span></span></span><br><span class="line"><span class="tag"><span class="string">t = t.offsetParent</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">return n</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">function g() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var e = document.documentElement;</span></span></span><br><span class="line"><span class="tag"><span class="string">if (!!window.innerWidth) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">return window.innerHeight</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125; else if (e &amp;&amp; !isNaN(e.clientHeight)) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">return e.clientHeight</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">return 0</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">function y() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">if (window.pageYOffset) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">return window.pageYOffset</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">return Math.max(document.documentElement.scrollTop, document.body.scrollTop)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">function E(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var t = m(e);</span></span></span><br><span class="line"><span class="tag"><span class="string">return t &gt;= w &amp;&amp; t &lt;= b + w</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">function S() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var e = document.createElement("audio");</span></span></span><br><span class="line"><span class="tag"><span class="string">e.setAttribute("class", l);</span></span></span><br><span class="line"><span class="tag"><span class="string">e.src = i;</span></span></span><br><span class="line"><span class="tag"><span class="string">e.loop = false;</span></span></span><br><span class="line"><span class="tag"><span class="string">e.addEventListener("canplay", function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">setTimeout(function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">x(k)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;, 500);</span></span></span><br><span class="line"><span class="tag"><span class="string">setTimeout(function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">N();</span></span></span><br><span class="line"><span class="tag"><span class="string">p();</span></span></span><br><span class="line"><span class="tag"><span class="string">for (var e = 0; e &lt; O.length; e++) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">T(O[e])</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;, 15500)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;, true);</span></span></span><br><span class="line"><span class="tag"><span class="string">e.addEventListener("ended", function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">N();</span></span></span><br><span class="line"><span class="tag"><span class="string">h()</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;, true);</span></span></span><br><span class="line"><span class="tag"><span class="string">e.innerHTML = " &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;";</span></span></span><br><span class="line"><span class="tag"><span class="string">document.body.appendChild(e);</span></span></span><br><span class="line"><span class="tag"><span class="string">e.play()</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">function x(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">e.className += " " + s + " " + o</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">function T(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">e.className += " " + s + " " + u[Math.floor(Math.random() * u.length)]</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">function N() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var e = document.getElementsByClassName(s);</span></span></span><br><span class="line"><span class="tag"><span class="string">var t = new RegExp("\\b" + s + "\\b");</span></span></span><br><span class="line"><span class="tag"><span class="string">for (var n = 0; n &lt; e.length; ) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">e[n].className = e[n].className.replace(t, "")</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"></span></span></span><br><span class="line"><span class="tag"><span class="string">var e = 30;</span></span></span><br><span class="line"><span class="tag"><span class="string">var t = 30;</span></span></span><br><span class="line"><span class="tag"><span class="string">var n = 350;</span></span></span><br><span class="line"><span class="tag"><span class="string">var r = 350;</span></span></span><br><span class="line"><span class="tag"><span class="string">var i = "//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake.mp3";</span></span></span><br><span class="line"><span class="tag"><span class="string">var s = "mw-harlem_shake_me";</span></span></span><br><span class="line"><span class="tag"><span class="string">var o = "im_first";</span></span></span><br><span class="line"><span class="tag"><span class="string">var u = ["im_drunk", "im_baked", "im_trippin", "im_blown"];</span></span></span><br><span class="line"><span class="tag"><span class="string">var a = "mw-strobe_light";</span></span></span><br><span class="line"><span class="tag"><span class="string">var f = "//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css";</span></span></span><br><span class="line"><span class="tag"><span class="string">var l = "mw_added_css";</span></span></span><br><span class="line"><span class="tag"><span class="string">var b = g();</span></span></span><br><span class="line"><span class="tag"><span class="string">var w = y();</span></span></span><br><span class="line"><span class="tag"><span class="string">var C = document.getElementsByTagName("*");</span></span></span><br><span class="line"><span class="tag"><span class="string">var k = null;</span></span></span><br><span class="line"><span class="tag"><span class="string">for (var L = 0; L &lt; C.length; L++) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var A = C[L];</span></span></span><br><span class="line"><span class="tag"><span class="string">if (v(A)) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">if (E(A)) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">k = A;</span></span></span><br><span class="line"><span class="tag"><span class="string">break</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">if (A === null) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">console.warn("Could not find a node of the right size. Please try a different page.");</span></span></span><br><span class="line"><span class="tag"><span class="string">return</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">c();</span></span></span><br><span class="line"><span class="tag"><span class="string">S();</span></span></span><br><span class="line"><span class="tag"><span class="string">var O = [];</span></span></span><br><span class="line"><span class="tag"><span class="string">for (var L = 0; L &lt; C.length; L++) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var A = C[L];</span></span></span><br><span class="line"><span class="tag"><span class="string">if (v(A)) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">O.push(A)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;)()    '</span>&gt;</span>High一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言：&lt;/p&gt;
&lt;p&gt;静态网站建立之后我们需要对其做些细节修改&lt;/p&gt;
&lt;p&gt;此博文包括文章、整站的一些细节修改，并增加一些统计功能&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="原创" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Hexo" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/Hexo/"/>
    
    
      <category term="博客" scheme="https://tianbozhang.coding.me/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Git" scheme="https://tianbozhang.coding.me/tags/Git/"/>
    
      <category term="Hexo" scheme="https://tianbozhang.coding.me/tags/Hexo/"/>
    
      <category term="Node.js" scheme="https://tianbozhang.coding.me/tags/Node-js/"/>
    
      <category term="实战" scheme="https://tianbozhang.coding.me/tags/%E5%AE%9E%E6%88%98/"/>
    
      <category term="中级" scheme="https://tianbozhang.coding.me/tags/%E4%B8%AD%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>个人博客，从入坑开始</title>
    <link href="https://tianbozhang.coding.me/personal-blog-start.html"/>
    <id>https://tianbozhang.coding.me/personal-blog-start.html</id>
    <published>2018-01-15T16:00:00.000Z</published>
    <updated>2018-01-30T06:35:03.097Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：</p><p>Node.js+Hexo+Next+Git+GitHub，让你几分钟就能创建一个博客</p><p>网上很多资料由于版本原因，实现方法已经发生变化，这里贴出一些新版本更方便的方法，如果失效，请联系我</p><p>本系列文章 所提及方案全部经过实验证明有效，基于Node 8.9.4,Hexo 3.4.4 ,Next 5.1.4</p></blockquote><a id="more"></a><p>talk is cheap ,下面开始</p><h3 id="必须准备"><a href="#必须准备" class="headerlink" title="必须准备"></a>必须准备</h3><p><a href="https://nodejs.org" target="_blank" rel="noopener">Node.js</a></p><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a></p><p><a href="https://github.com/" target="_blank" rel="noopener">GitHub 账户及仓库</a></p><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><h3 id="Hexo-的安装"><a href="#Hexo-的安装" class="headerlink" title="Hexo 的安装"></a>Hexo 的安装</h3><p>创建博客目录，该目录下 ：git bash</p><p>输入命令：</p><p> <code>npm install -g hexo-cli</code></p><p><img src="https://i.imgur.com/YRQJeOQ.png" alt=""></p><h3 id="创建hexo文件夹"><a href="#创建hexo文件夹" class="headerlink" title="创建hexo文件夹"></a>创建hexo文件夹</h3><p>博客目录下</p><p><code>hexo init</code></p><p><img src="https://i.imgur.com/WcbZyD1.png" alt=""></p><h3 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h3><p><code>npm install</code></p><p><img src="https://i.imgur.com/HsUtIRc.png" alt=""></p><h3 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h3><p><strong>必须要改动的</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">title: xxx  # 博客名，站点名称</span><br><span class="line"></span><br><span class="line">author: xxx # 博客作者名字</span><br><span class="line"></span><br><span class="line">description: xxx # 对站点的描述，搜索引擎会抓取，可以自定义</span><br><span class="line"></span><br><span class="line">language: zh-Hans # 语言 简体中文</span><br><span class="line"></span><br><span class="line">theme: next  # 配置主题，后面会讲到主题配置</span><br></pre></td></tr></table></figure><p><strong>发布必须要增加的</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy: # 部署相关配置</span><br><span class="line"> type: git # 使用 Git 提交</span><br><span class="line"> repository: git@github.com/username/username.github.io.git# 博客仓库地址</span><br><span class="line"> #repository: https://github.com/xxx/xxx.github.io.git</span><br></pre></td></tr></table></figure><p><strong>注意：</strong><br>nodejs 3.0版本以上不再使用：<code>https://github.com/username/username.github.io.git</code></p><h2 id="本地查看默认站点"><a href="#本地查看默认站点" class="headerlink" title="本地查看默认站点"></a>本地查看默认站点</h2><p>生成文件</p><p><code>hexo g</code> 或 <code>hexo generate</code><br><img src="https://i.imgur.com/btZ0fKd.png" alt=""></p><p>启动服务</p><p><code>hexo s</code> 或 <code>hexo server</code></p><p><img src="https://i.imgur.com/r2JmZD7.png" alt=""></p><p>浏览器输入localhost:4000查看</p><p><img src="https://i.imgur.com/C1AREhv.png" alt=""></p><h2 id="发布，部署到github"><a href="#发布，部署到github" class="headerlink" title="发布，部署到github"></a>发布，部署到github</h2><p>确认站点配置文件配置正确</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com:username/username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>发布<br><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></p><p><img src="https://i.imgur.com/oeMvhMe.png" alt=""></p><p><img src="https://i.imgur.com/JQB6KRV.png" alt=""></p><p><strong>发布无反应且页面为404时：</strong></p><p>站点配置：<code>repository: git@github.com:path/username.github.io.git</code>，GitHub仓库需为username.github.io</p><p>每次修改本地配置文件后，需要hexo generate才能保存。每次使用命令时，都要在博客所在目录下进行。</p><p>恭喜，博客已经初步创建成功</p><h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><p><code>hexo new &quot;博客文章文件名&quot;</code></p><p>或新建md文件放到<br>\source_posts文件夹或其子文件夹中</p><p>文章要按照规定格式书写</p><p>如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 个人博客搭建详解（Windows和Mac通用版） # 这是标题</span><br><span class="line">tags:   # 这里写的标签会自动汇集到 tags 页面上</span><br><span class="line">- 实用 # 可配置多个标签，注意格式</span><br><span class="line">- 个人博客</span><br><span class="line">category:  # 这里写的分类会自动汇集到 categories 页面上，分类可以多级</span><br><span class="line">- 实用技术 # 一级分类</span><br><span class="line">- 个人博客 # 二级分类</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h3 id="本地预览文章"><a href="#本地预览文章" class="headerlink" title="本地预览文章"></a>本地预览文章</h3><p>清除缓存： <code>hexo clean</code><br>生成静态网页： <code>hexo g</code><br>预览： <code>hexo s</code></p><p><strong>注意</strong></p><ol><li>已发布的文章发生修改， 可直接预览，即 不执行上述3个命令,刷新浏览器即可;</li><li>远程部署必须要执行上述命令</li><li>修改内容一旦预览与修改不一致，则需要clean</li></ol><p>也可一次性执行：<code>hexo clean  &amp;&amp; hexo g &amp;&amp; hexo s</code></p><h2 id="创建分类及标签页面"><a href="#创建分类及标签页面" class="headerlink" title="创建分类及标签页面"></a>创建分类及标签页面</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>命令：<code>hexo new page &quot;categories&quot;</code></p><p>找到 index.md文件编辑：</p><p>增加页面类型：</p><p>type: “categories” #将页面的类型设置为categories</p><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><p><code>hexo new page &quot;tags&quot;</code></p><p>index.md文件<br>设置页面类型:<br>type: “tags”</p><p>站点配置：启用分类及标签，清除缓存，生成页面，启动服务预览，无问题后发布</p><h3 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h3><p><code>hexo new page &quot;404&quot;</code></p><p>编辑source\404.md 即可</p><p>\404页面<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">参考Next</a></p><h3 id="主题修改"><a href="#主题修改" class="headerlink" title="主题修改"></a>主题修改</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p><p><strong>建议</strong>：<br>若想多端同步修改博客，最好先将此主题fork到自己github仓库，再下载。否则，无法对主题进行push，此处有坑，若无此需求，无视</p><h4 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h4><p>主题文件拷贝到themes目录下</p><ul><li><p>站点配置文件<br>theme：next<br>hexo generate 保存</p></li><li><p>主题配置文件<br>打开任意一项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure></li></ul><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code></p><p><img src="https://i.imgur.com/tA24GmC.png" alt=""></p><p>博客已经初步完成。</p><h2 id="Hexo相关命令总结"><a href="#Hexo相关命令总结" class="headerlink" title="Hexo相关命令总结"></a>Hexo相关命令总结</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">hexo clean #清除缓存</span><br><span class="line"></span><br><span class="line">hexo g  #保存修改，生成文件</span><br><span class="line"></span><br><span class="line">hexo s  #启动本地服务</span><br><span class="line"></span><br><span class="line">hexo d  #发布到远程</span><br><span class="line"></span><br><span class="line">hexo init #生成站点</span><br><span class="line"></span><br><span class="line">hexo new page &quot;xxx&quot; #生成页面</span><br><span class="line"></span><br><span class="line">hexo new &quot;&quot; #生成文章</span><br><span class="line"></span><br><span class="line">npm install --save xxx  #安装插件</span><br><span class="line"></span><br><span class="line">npm unstall xxx #卸载插件</span><br></pre></td></tr></table></figure><p>上述命令将贯穿于整个博客过程，不难，能动手尽量别复制粘贴</p><p>全程在博客目录下进行，离不开gitbash</p><h2 id="建站问题及错误"><a href="#建站问题及错误" class="headerlink" title="建站问题及错误"></a>建站问题及错误</h2><p>遇到问题不要慌，大胆猜测小心验证</p><h3 id="站点配置文件"><a href="#站点配置文件" class="headerlink" title="站点配置文件"></a>站点配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Site</span><br><span class="line">key: value#字段后必须空格</span><br></pre></td></tr></table></figure><h3 id="hexo-d-发布时"><a href="#hexo-d-发布时" class="headerlink" title="hexo d 发布时"></a>hexo d 发布时</h3><p>问题：ERROR Deployer not found: git</p><p>如果使用git方式进行部署需要<br>需要安装对应的插件</p><p>解决：安装自动部署发布工具</p><p><code>npm install hexo-deployer-git --save</code></p><h3 id="发布后页面404或无反应"><a href="#发布后页面404或无反应" class="headerlink" title="发布后页面404或无反应"></a>发布后页面404或无反应</h3><ol><li><p>github创建的仓库名必须为：username.github.io</p></li><li><p>配置文件：key: value必须空格</p></li><li><p>3.0后 类型需为git,仓库需为ssh形式: git@github.com:path/username.github.io.git</p><p>参考：<a href="https://www.zhihu.com/question/38219432" target="_blank" rel="noopener">知乎</a></p></li></ol><h3 id="FATAL-Cannot-read-property-‘replace’-of-null"><a href="#FATAL-Cannot-read-property-‘replace’-of-null" class="headerlink" title="FATAL Cannot read property ‘replace’ of null"></a>FATAL Cannot read property ‘replace’ of null</h3><p>解决:<br>站点配置文件</p><pre><code># URLurl: http://yoursite.com</code></pre><p>url不能为空</p><h3 id="发布时无反应，username-github-io-404"><a href="#发布时无反应，username-github-io-404" class="headerlink" title="发布时无反应，username.github.io 404"></a>发布时无反应，username.github.io 404</h3><p>定位：<br>站点配置：发布地址为<code>https://github.com/path/username.github.io.git</code></p><p>解决：<br>\3.0版本以上使用如下配置：<br>发布地址修改为 <code>git@github.com:yourname/yourname.github.io.git</code></p><p>git bash 提示如下表示发布成功<br><img src="https://i.imgur.com/fGVHult.png" alt=""></p><h3 id="发表文章标题显示为无标题"><a href="#发表文章标题显示为无标题" class="headerlink" title="发表文章标题显示为无标题"></a>发表文章标题显示为无标题</h3><p>定位：手动新建的md文件 放于source文件夹且 文件遵守规则</p><p>解决：<br>使用<code>git bash 命令： hexo new&quot;xxx文件名&quot;</code><br>此时 自动在source文件夹下生成 xxx文件名的md 文件，自带标题，修改此标题 即可</p><h3 id="测试标题显示情况"><a href="#测试标题显示情况" class="headerlink" title="测试标题显示情况"></a>测试标题显示情况</h3><h4 id="实验手动创建文章"><a href="#实验手动创建文章" class="headerlink" title="实验手动创建文章"></a>实验手动创建文章</h4><p>遵守规则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章测试文件</span><br><span class="line">tags:</span><br><span class="line">category:</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>启动服务，验证：成功<br><img src="https://i.imgur.com/EMRLp8L.png" alt=""></p><h4 id="已有md文件，手动添加title"><a href="#已有md文件，手动添加title" class="headerlink" title="已有md文件，手动添加title"></a>已有md文件，手动添加title</h4><p>遵守规则<br>成功</p><h3 id="复现文章标题失败情景"><a href="#复现文章标题失败情景" class="headerlink" title="复现文章标题失败情景"></a>复现文章标题失败情景</h3><p>复现失败<br>猜测：网页缓存或浏览器缓存导致，待验证</p><h3 id="hexo-g-生成静态网页时"><a href="#hexo-g-生成静态网页时" class="headerlink" title="hexo g 生成静态网页时"></a>hexo g 生成静态网页时</h3><p><img src="https://i.imgur.com/syPuUTi.png" alt=""></p><p><a href="http://www.voidcn.com/article/p-uuequjzl-qq.html" target="_blank" rel="noopener">类似错误参考</a></p><p>问题重点：<code>Error: Unable to call __, which is undefined or falsey</code></p><p>定位：<br>md文件出现不识别字符：__</p><p>解决： 找到对应字符，转义或删除</p><h3 id="404页面直接添加到站点失败"><a href="#404页面直接添加到站点失败" class="headerlink" title="404页面直接添加到站点失败"></a>404页面直接添加到站点失败</h3><p>参考<a href="https://www.zhihu.com/question/21650209" target="_blank" rel="noopener">知乎</a></p><p>使用 <code>hexo new page&quot;404&quot;</code>，编辑index.md文件即可</p><h3 id="部署到GitHub后头像显示失败"><a href="#部署到GitHub后头像显示失败" class="headerlink" title="部署到GitHub后头像显示失败"></a>部署到GitHub后头像显示失败</h3><p>图片放于<br>主题：\themes\next\source\images\路径，显示成功<br>站点:\source\uploads\路径，显示失败</p><p>主题完整路径：\themes\next\source\images\avatar.jpg</p><p>主题配置：<code>avatar: /images/avatar.jpg</code></p><p>参考 主题配置文件</p><h3 id="关闭页面评论"><a href="#关闭页面评论" class="headerlink" title="关闭页面评论"></a>关闭页面评论</h3><p><a href="http://theme-next.iissnan.com/faqs.html" target="_blank" rel="noopener">Next官网</a></p><p>index.md文件增加<code>comments: false #关闭页面评论显示</code></p><h3 id="文章插入代码块"><a href="#文章插入代码块" class="headerlink" title="文章插入代码块"></a>文章插入代码块</h3><ol><li>使用  codeblock  endcodeblock 标记swig模板代码,代码无法显示</li><li>使用tab 标记代码块，显示为非源码</li></ol><p>改为``` 包裹代码 标记</p><p>可正常显示</p><p>参考<a href="https://www.zhihu.com/question/51705387" target="_blank" rel="noopener">知乎</a></p><h3 id="代码包含-123-123-125-125-or-123-37-37-125-编译出错"><a href="#代码包含-123-123-125-125-or-123-37-37-125-编译出错" class="headerlink" title="代码包含 &#123;&#123; &#125;&#125;or &#123;&#37; &#37;&#125; 编译出错"></a>代码包含 &#123;&#123; &#125;&#125;or &#123;&#37; &#37;&#125; 编译出错</h3><p><a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">官方方案</a><br>使用&#123;&#37; raw &#37;&#125; &#123;&#37; endraw &#37;&#125;包裹</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言：&lt;/p&gt;
&lt;p&gt;Node.js+Hexo+Next+Git+GitHub，让你几分钟就能创建一个博客&lt;/p&gt;
&lt;p&gt;网上很多资料由于版本原因，实现方法已经发生变化，这里贴出一些新版本更方便的方法，如果失效，请联系我&lt;/p&gt;
&lt;p&gt;本系列文章 所提及方案全部经过实验证明有效，基于Node 8.9.4,Hexo 3.4.4 ,Next 5.1.4&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="原创" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Hexo" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/Hexo/"/>
    
    
      <category term="博客" scheme="https://tianbozhang.coding.me/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Git" scheme="https://tianbozhang.coding.me/tags/Git/"/>
    
      <category term="Hexo" scheme="https://tianbozhang.coding.me/tags/Hexo/"/>
    
      <category term="Node.js" scheme="https://tianbozhang.coding.me/tags/Node-js/"/>
    
      <category term="实战" scheme="https://tianbozhang.coding.me/tags/%E5%AE%9E%E6%88%98/"/>
    
      <category term="初级" scheme="https://tianbozhang.coding.me/tags/%E5%88%9D%E7%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio Gradle-Build 龟速解决方案</title>
    <link href="https://tianbozhang.coding.me/gradle-build-solution.html"/>
    <id>https://tianbozhang.coding.me/gradle-build-solution.html</id>
    <published>2018-01-11T04:00:00.000Z</published>
    <updated>2018-01-22T01:46:45.759Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：</p><p>AndroidStudio 重度用户们，试问，谁没经历过Build乌龟爬一般的耗时煎熬？</p><p>忍无可忍，无须再忍。</p><p>给你一个靠谱、真实有效解决方案，一招直达痛处</p></blockquote><a id="more"></a><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>先看配置后：<img src="https://i.imgur.com/Icggu2c.png" alt=""><br>平均28s，这个跟机器配置，项目大小，修改内容也有关系</p><p>未配置的：<img src="https://i.imgur.com/QTpSN8T.png" alt=""><br> 将近5分钟 ,同等条件！！</p><p>相对来说，减少了不止一大半时间，感觉很爽有木有</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="gradle-proerties-文件"><a href="#gradle-proerties-文件" class="headerlink" title="gradle.proerties 文件"></a>gradle.proerties 文件</h3><pre><code>org.gradle.daemon=true  org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8org.gradle.parallel=trueorg.gradle.configureondemand=true</code></pre><h3 id="Android-Studio-setting"><a href="#Android-Studio-setting" class="headerlink" title="Android Studio setting:"></a>Android Studio setting:</h3><p>环境：studio 3.0,win7 64位 16G<br><img src="https://i.imgur.com/LN9ctBn.png" alt=""><br><img src="https://i.imgur.com/I9HSWv6.png" alt=""></p><blockquote><p>参考： <a href="http://www.cnblogs.com/wuyudong/p/5610666.html" target="_blank" rel="noopener">奉上原文，感谢作者</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言：&lt;/p&gt;
&lt;p&gt;AndroidStudio 重度用户们，试问，谁没经历过Build乌龟爬一般的耗时煎熬？&lt;/p&gt;
&lt;p&gt;忍无可忍，无须再忍。&lt;/p&gt;
&lt;p&gt;给你一个靠谱、真实有效解决方案，一招直达痛处&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="解决方案" scheme="https://tianbozhang.coding.me/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
      <category term="解决方案" scheme="https://tianbozhang.coding.me/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
      <category term="Gradle" scheme="https://tianbozhang.coding.me/tags/Gradle/"/>
    
      <category term="Build" scheme="https://tianbozhang.coding.me/tags/Build/"/>
    
  </entry>
  
  <entry>
    <title>应用优化与开发流程</title>
    <link href="https://tianbozhang.coding.me/application-optimization-and-development.html"/>
    <id>https://tianbozhang.coding.me/application-optimization-and-development.html</id>
    <published>2018-01-11T03:55:21.000Z</published>
    <updated>2018-01-25T01:46:25.116Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：<br>日常开发 代码与资源的优化必不可避，无论是为了提高代码质量还是为了提高用户留存度<br>吾日三省吾身，今天你优化了没<br>真实项目开发优化经历，LeakCannary与Lint 带你飞</p></blockquote><a id="more"></a><h1 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h1><h2 id="内存泄露"><a href="#内存泄露" class="headerlink" title="内存泄露"></a>内存泄露</h2><p>最常见最严重 ：后果不限于 OutOfMemory</p><p>持有Activity 与Context引用，生命周期本该短于应用生命周期，该回收的没被回收掉，导致泄露<br>检测手段：最方便leakcanary ，历史悠久的 MIT</p><h3 id="Handler泄露"><a href="#Handler泄露" class="headerlink" title="Handler泄露"></a>Handler泄露</h3><p>new Handler 替换为 静态内部类</p><p>将持有当前Activity或Context 对象实例化为WeakReference对象</p><p>onDestory 时：<code>handler.removeAllMessageAndCallback(null)</code></p><p>高级方案：不可避免的Handler仍采用静态内部类，提供CallBack,独立于使用者,避免Activity与Context直接引用</p><p>更高级的方案：可以避免的Handler使用RxJava</p><h3 id="单例泄露"><a href="#单例泄露" class="headerlink" title="单例泄露"></a>单例泄露</h3><p>单例对象持有的Activity 使用WeakReference 、Context 使用ApplicationContext</p><p>去除不必要的Activity引用</p><p>泄露不止显式的Activity 与context,一旦定义其他对象，且该对象引用了Context或Activity ,却比应用生命周期短，也会发生泄露，比如单例里使用了RecyclerView</p><p>此时需要考虑使用WeakReference 持有该对象引用</p><p>这时，应该想想可否将其独立出来</p><h3 id="Fragment-之间静态属性引用-泄露"><a href="#Fragment-之间静态属性引用-泄露" class="headerlink" title="Fragment 之间静态属性引用 泄露"></a>Fragment 之间静态属性引用 泄露</h3><p><strong>消灭静态属性</strong></p><p>静态属性会一直持有当前Activity或Context引用</p><p>Fragment之间通讯可使用接口，Activity实现该接口， onAttach 将Activity转换为接口对象</p><p>Activity操作Fragmeng方式不变</p><p>高级方案：可使用MVVM ，ViewModel方式</p><h3 id="Cursor-等游标、流的关闭"><a href="#Cursor-等游标、流的关闭" class="headerlink" title="Cursor 等游标、流的关闭"></a>Cursor 等游标、流的关闭</h3><p>数据库操作：增删改查的游标，文件、网络操作流<br>用后close</p><h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><p>onDestory销毁List：clear </p><h3 id="WebView"><a href="#WebView" class="headerlink" title="WebView"></a>WebView</h3><p>onDestory销毁WebView  ：<code>removeJavaScript;removeAllView</code><br>高级方案：多进程</p><h3 id="避免原则"><a href="#避免原则" class="headerlink" title="避免原则"></a>避免原则</h3><p>尽可能保证持有的对象及时被回收，必须使用Activity的采用WeakReference,能使用ApplicationContext的不使用 当前Context<br>其他对象生命周期短于应用的，一旦持有了Context或Activity都有可能发生泄露，尽可能采用WeakReference</p><h2 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h2><h3 id="优化的数据结构"><a href="#优化的数据结构" class="headerlink" title="优化的数据结构"></a>优化的数据结构</h3><p>HashMap 替换为SparseArray 等</p><h3 id="枚举、匿名内部类、反射等"><a href="#枚举、匿名内部类、反射等" class="headerlink" title="枚举、匿名内部类、反射等"></a>枚举、匿名内部类、反射等</h3><p>减少使用</p><h2 id="布局，涉及过渡绘制等"><a href="#布局，涉及过渡绘制等" class="headerlink" title="布局，涉及过渡绘制等"></a>布局，涉及过渡绘制等</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>窗体背景，多余背景，减少过渡绘制有效手段</p><h3 id="过渡绘制"><a href="#过渡绘制" class="headerlink" title="过渡绘制"></a>过渡绘制</h3><p>include标签（通常用于公共布局组件）、merge（有效减少层级，但会出现不可控因素，属性失效等问题）、viewsub</p><p>减少不必要的层级</p><h3 id="控件优化"><a href="#控件优化" class="headerlink" title="控件优化"></a>控件优化</h3><h4 id="比较突出的："><a href="#比较突出的：" class="headerlink" title="比较突出的："></a>比较突出的：</h4><p>ImageView 与TextView 呈上下左右关系时，优先考虑<br>TextView增加drawable属性，即<code>compoundDrawable</code></p><p>布局设置：<code>drawableLeft ,drawableTop, drawableRight,drawableBoottom</code><br>图片文字间距使用：<code>drawablePadding</code></p><p>代码设置：<code>setCompoundDrawablesRelativeWithIntrinsicBounds(left，top,right,bottoom)</code></p><h3 id="内存、网络、电池"><a href="#内存、网络、电池" class="headerlink" title="内存、网络、电池"></a>内存、网络、电池</h3><p>BitMap的回收，应用不可见的监听，减少app被系统关闭的几率</p><h3 id="安装包与第三方"><a href="#安装包与第三方" class="headerlink" title="安装包与第三方"></a>安装包与第三方</h3><p>无用资源，大图，图片适配，减少不必要的图片，png替换为.9,简单图片代码实现优先</p><p>lib 文件</p><h2 id="开发与测试"><a href="#开发与测试" class="headerlink" title="开发与测试"></a>开发与测试</h2><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p>业务、实现分离<br>MVP或MVVM等<br>viewmodel<br>代码规则：命名，方法数，自解释</p><p>目的：便于维护</p><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><h2 id="测试环节"><a href="#测试环节" class="headerlink" title="测试环节"></a>测试环节</h2><p>如：用例覆盖，情景覆盖，功能效果与产品需求匹配度等，数据抓取，可考虑以下方案增强</p><h3 id="全员测试"><a href="#全员测试" class="headerlink" title="全员测试"></a>全员测试</h3><h4 id="开发阶段"><a href="#开发阶段" class="headerlink" title="开发阶段"></a>开发阶段</h4><p>由开发把控，确认主要流程功能完成后打包安排测试，主要为产品确认功能实现情况，及时发现问题，以免后期不断产生功能修改，耽误开发进度</p><h4 id="测试阶段"><a href="#测试阶段" class="headerlink" title="测试阶段"></a>测试阶段</h4><p>除测试外所有相关人员，包括但不限于：前后端开发、产品、项目负责人</p><h4 id="上线前"><a href="#上线前" class="headerlink" title="上线前"></a>上线前</h4><p>最后的问题发现修改阶段，也是最后的问题修改阶段，避免上线前后发生重大问题</p><h3 id="测试次数"><a href="#测试次数" class="headerlink" title="测试次数"></a>测试次数</h3><p>问题修改完一批次之后统一回归，可分为第一轮至第三轮甚至四轮，根据测试及bug情况安排，除第一轮外后续皆主要为回归，最后一轮进行线上环境测试，确认功能与稳定性，正式上线前可考虑发布小范围用户安装包进行用户实际环境测试，俗称灰度</p><h3 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h3><p>测试拿到需求之后可编写测试用例，此用例可指导其他人进行功能验证，减少测试人员压力</p><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>控制bug数量，减少测试费时，尽可能的发现隐藏的问题，避免上线后发生重大事故<br>提升项目质量</p><h2 id="数据监控"><a href="#数据监控" class="headerlink" title="数据监控"></a>数据监控</h2><p>抓取手法<br>可使用Charles,Fiddler等</p><p>数据类问题可直接由bug测出人员定位，避免其他人浪费时间定位</p><h2 id="版本分离"><a href="#版本分离" class="headerlink" title="版本分离"></a>版本分离</h2><h3 id="bug分离"><a href="#bug分离" class="headerlink" title="bug分离"></a>bug分离</h3><p>上线后的bug确认是否为重大bug是否需要修改，一旦确认可下期修改，则可列为后期版本优先修改内容</p><h3 id="api数据分离"><a href="#api数据分离" class="headerlink" title="api数据分离"></a>api数据分离</h3><p>最基本的数据稳定性保持方法<br>api上线时，安装包未必会及时被上传，此时线上环境已经发生变动，而用户所用仍为老版本，一旦数据不兼容，用户无法正常使用</p><p><strong>api可根据app的versioncode与平台等多参数进行数据隔离</strong></p><h2 id="问题监测"><a href="#问题监测" class="headerlink" title="问题监测"></a>问题监测</h2><p>主要为稳定性服务</p><p>手段包括但不限于：<br>真实用户实时崩溃日志：百度等</p><p>内嵌的日志收集上传功能</p><p>后台统计与收集</p><p>开发阶段的崩溃收集：崩溃截取显示上传功能</p><p><strong>开发阶段</strong></p><p>编写高质量代码</p><h2 id="性能优化手段"><a href="#性能优化手段" class="headerlink" title="性能优化手段"></a>性能优化手段</h2><p>LeakCanary 内存泄露</p><p>findbug bug 、隐藏问题</p><p>removed unused resoures  剔除废弃资源</p><p>Lint 找出隐藏问题，优化代码，重点关注Performance 如泄露，Correctness,Security</p><h3 id="内存泄露监测方法"><a href="#内存泄露监测方法" class="headerlink" title="内存泄露监测方法"></a>内存泄露监测方法</h3><p>说是监测，是因为在程序运行过程中，当发生泄露，我们的金丝雀可以直接将泄露信息dump出来<br><a href="https://github.com/square/leakcanary" target="_blank" rel="noopener">参考1:LeakCanary官网</a><br><a href="https://www.liaohuqiu.net/cn/posts/leak-canary-read-me/" target="_blank" rel="noopener">参考2:LeakCanary中文说明</a></p><h4 id="Gradle配置："><a href="#Gradle配置：" class="headerlink" title="Gradle配置："></a>Gradle配置：</h4><pre><code> debugCompile &apos;com.squareup.leakcanary:leakcanary-android:1.5.4&apos;releaseCompile &apos;com.squareup.leakcanary:leakcanary-android-no-            op:1.5.4&apos;</code></pre><h4 id="Application-："><a href="#Application-：" class="headerlink" title="Application ："></a>Application ：</h4><pre><code>   /** * 使用 RefWatcher 监控本该被回收的对象 * LeakCanary.install() 会返回一个预定义的 RefWatcher，同时也会启用一个             ActivityRefWatcher， * 用于自动监控调用 Activity.onDestroy() 之后泄露的 activity。 * @param context * @return */public static RefWatcher getRefWatcher(Context context) {    Application application = (Application)                                   context.getApplicationContext();    return application.refWatcher;}private RefWatcher refWatcher;protected RefWatcher installLeakCanary() {    return RefWatcher.DISABLED;}  if (LeakCanary.isInAnalyzerProcess(this)) {        return;    }    refWatcher  =  LeakCanary.install(this);</code></pre><h4 id="Fragment"><a href="#Fragment" class="headerlink" title="Fragment"></a>Fragment</h4><pre><code>/*** 使用 RefWatcher 监控 Fragment*/ RefWatcher refWatcher = Application.getRefWatcher(getActivity()); refWatcher.watch(this);</code></pre><p>详细说明请参考上面贴出的参考链接</p><h3 id="Lint-代码资源检测方法"><a href="#Lint-代码资源检测方法" class="headerlink" title="Lint 代码资源检测方法"></a>Lint 代码资源检测方法</h3><p><a href="http://blog.csdn.net/u011240877/article/details/54141714#%E5%9C%A8-java-%E4%BB%A3%E7%A0%81%E4%B8%AD%E5%BF%BD%E7%95%A5-lint-%E8%AD%A6%E5%91%8A" target="_blank" rel="noopener">参考</a></p><p>这个工具可以提前检测出内存泄露、无用资源、以及一些不规范代码等，需要我们重点关注的点前面以及上面的参考已经详细说明</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言：&lt;br&gt;日常开发 代码与资源的优化必不可避，无论是为了提高代码质量还是为了提高用户留存度&lt;br&gt;吾日三省吾身，今天你优化了没&lt;br&gt;真实项目开发优化经历，LeakCannary与Lint 带你飞&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="原创" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="开发" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="内存泄露" scheme="https://tianbozhang.coding.me/tags/%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2/"/>
    
      <category term="解决方案" scheme="https://tianbozhang.coding.me/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
      <category term="优化" scheme="https://tianbozhang.coding.me/tags/%E4%BC%98%E5%8C%96/"/>
    
      <category term="LeakCanery" scheme="https://tianbozhang.coding.me/tags/LeakCanery/"/>
    
      <category term="Lint" scheme="https://tianbozhang.coding.me/tags/Lint/"/>
    
  </entry>
  
  <entry>
    <title>Git 基础命令</title>
    <link href="https://tianbozhang.coding.me/git-learning.html"/>
    <id>https://tianbozhang.coding.me/git-learning.html</id>
    <published>2018-01-11T03:50:00.000Z</published>
    <updated>2018-01-22T01:45:53.181Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：<br>跟随大神脚步，<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰 Git 教程</a><br>学好Git,早日掌握代码托管利器</p></blockquote><a id="more"></a><h2 id="环境与版本库"><a href="#环境与版本库" class="headerlink" title="环境与版本库"></a>环境与版本库</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>windows版本 <a href="https://git-for-windows.github.io" target="_blank" rel="noopener">Git</a><br>打包好的模拟环境及git: msysgit</p><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p>开始菜单，Git–Git Bash</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>命令：</p><p><code>git config --global user.name &quot;Your Name&quot;</code><br><code>git config --global user.email &quot;email@example.com&quot;</code></p><p>说明：</p><p>git config –global 参数表示当前机器所有用户都是使用该配置</p><h3 id="版本库"><a href="#版本库" class="headerlink" title="版本库"></a>版本库</h3><p>进入版本库 ：cd e:/learngit</p><h4 id="1-创建版本库（仓库）"><a href="#1-创建版本库（仓库）" class="headerlink" title="1.创建版本库（仓库）"></a>1.创建版本库（仓库）</h4><p>选择合适位置创建空目录，Windows环境要确保路径不包含中文：</p><h5 id="进入目标盘符"><a href="#进入目标盘符" class="headerlink" title="进入目标盘符"></a>进入目标盘符</h5><p>命令：cd e:/</p><h5 id="确认进入，查看文件"><a href="#确认进入，查看文件" class="headerlink" title="确认进入，查看文件"></a>确认进入，查看文件</h5><p>命令：ls</p><h5 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h5><p>命令：<br><code>mkdir &lt;repo-name&gt;</code><br><code>cd &lt;repo-name&gt;</code></p><p><code>pwd</code><br>显示为：/路径/<repo-name></repo-name></p><p>注：pwd显示当前目录路径</p><h4 id="2-将空目录变成Git可以管理的仓库"><a href="#2-将空目录变成Git可以管理的仓库" class="headerlink" title="2.将空目录变成Git可以管理的仓库"></a>2.将空目录变成Git可以管理的仓库</h4><p>命令：<code>git init</code><br>提示：Initialized empty Git repository in /路径/<repo-name>/.git/<br>.git目录：Git用来跟踪管理版本库，勿动；默认隐藏， ls -ah查看路径</repo-name></p><h4 id="3-将文件添加提交到仓库，无提示即为成功"><a href="#3-将文件添加提交到仓库，无提示即为成功" class="headerlink" title="3.将文件添加提交到仓库，无提示即为成功"></a>3.将文件添加提交到仓库，无提示即为成功</h4><p>注：文件放入仓库目录，否则Git无法找到<br>命令：</p><p><code>git add  &lt;file&gt;</code><br>作用：添加文件到仓库</p><p>命令： </p><p><code>git commit -m &quot;infomation&quot;</code><br>作用：将文件提交到仓库</p><p>注：-m后必须跟随本次提交的说明，否则将无法继续操作！！！！</p><p>扩展：</p><p>1.<code>add &lt;file&gt;</code> 可反复使用，添加多个文件</p><p>commit可以一次提交很多文件<br>如：    git add file1.java<br>    git add file2.xml<br>    git add flie3.png<br>    ……<br>    git commit -m “add many files”</p><p>2.<code>add.</code>：提交当前工作区未被配置为忽略的所有文件到暂存区（更喜欢存储区这个称呼）</p><h3 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h3><p>命令：<code>git status</code></p><p>作用：时刻掌握仓库当期状态</p><h3 id="diff信息"><a href="#diff信息" class="headerlink" title="diff信息"></a>diff信息</h3><p>命令：<code>git diff</code></p><p>作用：查看difference,以unix通用diff格式显示</p><h3 id="历史记录"><a href="#历史记录" class="headerlink" title="历史记录"></a>历史记录</h3><p>命令：<code>git log</code></p><p>作用：查看提交历史，从最近到最远，可确定回退版本，会进入log界面</p><h4 id="扩展：git-log-pretty-oneline"><a href="#扩展：git-log-pretty-oneline" class="headerlink" title="扩展：git log --pretty=oneline"></a>扩展：<code>git log --pretty=oneline</code></h4><p> –pretty==oneline  单行显示重要信息，包含：commit-id ,commit information</p><p>版本号commit id HASH值 以16进制表示</p><h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><p>命令：<code>git reset --hard HEAD^</code></p><p>作用：回退到上一个版本</p><p><strong>注：HEAD指向当前版本 HEAD^上个版本 HEAD^^上两个版本，上100个版本 HEAD~100</strong></p><p>命令： <code>git reset --hard commit-id</code>   </p><p>作用：回退到指定版本：</p><p>注：id不需要写全，也不要太短，git会自动查找</p><p>命令：<code>cat &lt;file&gt;</code><br>作用：查看文件</p><h3 id="查看命令历史"><a href="#查看命令历史" class="headerlink" title="查看命令历史"></a>查看命令历史</h3><p>命令： <code>git reflog</code></p><p>作用：查看命令历史，可用于查看commit-id及HEAD版本， 用于版本回退</p><h2 id="工作区与暂存区"><a href="#工作区与暂存区" class="headerlink" title="工作区与暂存区"></a>工作区与暂存区</h2><h3 id="一些简单说明"><a href="#一些简单说明" class="headerlink" title="一些简单说明"></a>一些简单说明</h3><p>工作区包含隐藏目录.git ，是Git版本库</p><p>创建版本库时，Git默认创建第一个分支master，并包含暂存区stage</p><p><code>git add &lt;file&gt;</code>：添加文件，实际上是将文件修改添加到暂存区</p><p><code>git commit &lt;file&gt;</code>：提交更改，实际上是把暂存区的所有内容提交到当前分支</p><p>Git 跟踪修改，若没有add添加到暂存区，就不会加入到commit 队列</p><h3 id="版本比对"><a href="#版本比对" class="headerlink" title="版本比对"></a>版本比对</h3><p>命令：<code>git diff HEAD --&lt;file&gt;</code><br>作用：查看工作区和版本库里最新版本的区别</p><h3 id="撤销修改"><a href="#撤销修改" class="headerlink" title="撤销修改"></a>撤销修改</h3><p>命令：<code>git checkout -- &lt;file&gt;</code>  </p><p>作用：撤销工作区修改，让文件回到最近一次git commit 或git add时的状态，”–”很重要，没有则为切换分支；已添加到缓存区的无法直接撤销，需先重置缓存区，配合git reset使用</p><h3 id="重置"><a href="#重置" class="headerlink" title="重置"></a>重置</h3><p>命令：<code>git reset</code></p><p>作用：既可以回退版本，也可以把暂存区的修改，非删除的回退到工作区</p><p>命令：<code>git reset HEAD &lt;file&gt;</code><br>作用：撤换暂存区的修改unstage，重新放回工作区</p><p><strong>注：</strong></p><p>1.直接丢弃工作区，非缓存区的修改<code>checkout -- &lt;file&gt;</code></p><p>2.修改了工作区内容，且添加进缓存区，想丢弃修改，先<code>git reset HEAD &lt;file&gt;</code>或<code>git rest</code> 再<code>git checkout -- &lt;file&gt;</code></p><p>3.工作区修改已提交版本库，恢复只能通过版本回退！</p><h3 id="删除文件-rm"><a href="#删除文件-rm" class="headerlink" title="删除文件 rm"></a>删除文件 rm</h3><p>命令：<code>git rm &lt;file&gt;</code></p><p>作用：从版本库删除文件</p><p>注：删除后需commit提交，否则工作区与版本库不一致</p><p>命令： <code>git checkout -- &lt;file&gt;</code></p><p>作用：工作区删除但未提交，可以用版本库版本替换工作区版本，无论工作区是修改还是删除；若已提交，则无法恢复,除非回退版本</p><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><p>1.使用免费开放的GitHub</p><p>2.搭建Linux服务器</p><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><p>检查用户主目录下，是否有.ssh目录id_rsa和id_rsa.pub两个文件</p><h4 id="1-创建SSH-Key"><a href="#1-创建SSH-Key" class="headerlink" title="1.创建SSH Key"></a>1.创建SSH Key</h4><p>windows下打开Git Bash</p><p>命令：<code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code></p><p>默认值即可，无需设置密码</p><h4 id="2-添加用户到远程仓库"><a href="#2-添加用户到远程仓库" class="headerlink" title="2.添加用户到远程仓库"></a>2.添加用户到远程仓库</h4><p>登陆GitHub，“Account settings”，“SSH Keys”页：</p><p>“Add SSH Key”，任意Title，Key文本框里粘贴id_rsa.pub文件的内容<br>SSH Key,GitHub需识别出推送的提交确实是本人推送，而非他人冒充。</p><p>Git支持SSH协议</p><p>GitHub允许添加多个key</p><h3 id="1-添加远程仓库"><a href="#1-添加远程仓库" class="headerlink" title="1.添加远程仓库"></a>1.添加远程仓库</h3><p>GitHub： Create a new repo按钮创建一个新的仓库</p><p>Repository name填入仓库名repo-name，其他默认，“Create repository</p><h3 id="2-关联一个远程库"><a href="#2-关联一个远程库" class="headerlink" title="2.关联一个远程库"></a>2.关联一个远程库</h3><p>命令：<code>git remote add origin git@server-name:path/&lt;repo-name&gt;.git</code></p><p>如：<code>git remote add origin git@github.com:GitHub帐户名/repo-name.git</code></p><p>添加后，远程库的名字就是 origin,此为Git默认名称，可以更改</p><h3 id="3-关联后推送master分支所有内容"><a href="#3-关联后推送master分支所有内容" class="headerlink" title="3.关联后推送master分支所有内容"></a>3.关联后推送master分支所有内容</h3><p>命令：<code>git push -u origin &lt;branch-name&gt;</code></p><p>注：-u 关联本地库内分支与远程库内分支 </p><p>命令：<code>git push origin branch-name</code></p><p>每次提交本地版本库后，只要有必要，推送最新修改</p><p>也可使用： <code>git push</code>直接推送到当前分支关联的远程分支，未关联时使用此命令会提示</p><pre><code>fatal: The current branch &lt;branch&gt; has no upstream branch.To push the current branch and set the remote as upstream, usegit push --set-upstream origin &lt;branch&gt;</code></pre><h3 id="4-推送并关联远程分支："><a href="#4-推送并关联远程分支：" class="headerlink" title="4.推送并关联远程分支："></a>4.推送并关联远程分支：</h3><p><code>git push --set-upstream origin &lt;branch&gt;</code></p><p>此后便可直接使用<code>git push</code>完成提交</p><p><strong>注：</strong></p><p>第一次使用Git的clone或push命令连接GitHub时，会得到一个警告：</p><pre><code>The authenticity of host &apos;github.com (xx.xx.xx.xx)&apos; can&apos;t be established.RSA key fingerprint is xx.xx.xx.xx.xx.Are you sure you want to continue connecting (yes/no)?</code></pre><p>这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入yes回车即可。</p><p>如果你实在担心有人冒充GitHub服务器，输入yes前可以对照GitHub的RSA Key的指纹信息是否与SSH连接给出的一致。</p><h3 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h3><p>命令：<code>git clone git@github.com: 路径/&lt;repo-name&gt;.git</code></p><p>作用：从远程库克隆git clone</p><p><strong>注：</strong></p><p>必须知道仓库的地址</p><p>git支持多种协议 包括https</p><p>通过ssh支持原生git协议速度最快</p><h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><h3 id="分支创建及切换"><a href="#分支创建及切换" class="headerlink" title="分支创建及切换"></a>分支创建及切换</h3><p>命令：<code>git checkout -b &lt;branch-name&gt;</code><br>作用： 创建并切换分支</p><p>开发分支 假设为：dev分支<br>如：<code>git checkout -b dev</code></p><p>相当于：<br>    git branch <branch-name><br>    git checkout <branch-name></branch-name></branch-name></p><p>命令：<code>git branch</code></p><p>作用： 列出所有分支,当前分支前会标有星号</p><p>命令：<code>git checkout &lt;branch-name&gt;</code></p><p>作用： 切换回当前分支</p><p>命令：<code>git merge &lt;branch-name&gt;</code></p><p>作用： 合并指定分支到当前分支,直接将当前分支指向指定分支的提交内容，可理解为快速模式</p><p><code>git merge --no-ff -m&quot;infomation&quot; &lt;branch&gt;</code></p><p>作用：非快速模式，可保留分支信息</p><p>命令：<code>git branch -d &lt;branch-name&gt;</code></p><p>作用： 删除分支  </p><h3 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h3><p>多分支同时修改相同文件，合并时可能会出现冲突提示：<br>    Automatic merge failed; fix conflicts and then commit the result. </p><p>此时需手动解决冲突，再add ，commit</p><p>题外话：android studio中：右键冲突文件—&gt;解决冲突—&gt;apply</p><h3 id="查看分支合并图"><a href="#查看分支合并图" class="headerlink" title="查看分支合并图"></a>查看分支合并图</h3><p>命令：<br><code>git log --grahp</code></p><p>作用：显示多行分支信息</p><p>命令：<br><code>git log --graph --pretty=oneline --abbrev-commit</code><br>作用：单行显示分支信息</p><h3 id="分支管理策略"><a href="#分支管理策略" class="headerlink" title="分支管理策略"></a>分支管理策略</h3><p><code>git merge &lt;branch&gt;</code></p><p>快速模式合并分支，会丢失分支信息</p><p><code>git merge --no-ff -m&quot;infomation&quot; &lt;branch&gt;</code><br>普通模式，禁用Fast forward 模式</p><p><code>git log</code><br>日志查看：普通模式下，合并后可以看到曾经做过合并，有历史分支信息；</p><h3 id="分支管理策略-1"><a href="#分支管理策略-1" class="headerlink" title="分支管理策略"></a>分支管理策略</h3><p><strong>master分支应该是最稳定的，仅用来发布新版本，平时不能操作，在dev分支开发，发布时再合并到master分支</strong></p><p><strong>说明：</strong></p><ol><li><p>master分支是主分支，需要时刻与远程同步</p></li><li><p>dev 是开发分支，团队所有成员都在上面工作，也需要与远程同步</p></li><li><p>bug分支 只用于本地修复bug，没必要推送到远程</p></li><li><p>feature分支是否推送到远程，取决于是否和小伙伴合作开发</p></li><li><p>克隆远程库默认只可见master分支</p></li><li><p>本地新建的分支如果不推送到远程，对其他人是不可见的。</p></li></ol><h3 id="本地工作分支提交修改"><a href="#本地工作分支提交修改" class="headerlink" title="本地工作分支提交修改"></a>本地工作分支提交修改</h3><h4 id="建立本地分支与远程分支链接"><a href="#建立本地分支与远程分支链接" class="headerlink" title="建立本地分支与远程分支链接"></a>建立本地分支与远程分支链接</h4><p>本地创建和 远程库分支 对应的分支，名称最好一致：<br>远程分支：origin/branch-name<br><code>git checkout -b &lt;branch-name&gt; origin/&lt;branch-name&gt;</code></p><p>建立本地与远程分支的连接<br><code>git branch --set-upstream-to branch-name origin/branch-name</code></p><p>从远程仓库克隆时，Git自动把本地master分支和远程master分支对应，远程仓库默认名称是origin，以创建为准</p><p>强行删除分支：<br><code>git branch -D &lt;branch-name&gt;</code></p><h4 id="本地未完成的修改临时存储"><a href="#本地未完成的修改临时存储" class="headerlink" title="本地未完成的修改临时存储"></a>本地未完成的修改临时存储</h4><p>列出已有存储<br><code>git stash list</code></p><p>临时存储工作现场，保存未完成的工作，确保工作区干净，以便切分支，完成其他任务</p><p><code>git stash</code></p><p>恢复工作现场</p><ol><li><p><code>git stash apply</code> 提交恢复</p><p><code>git stash drop</code>删除stash内容</p></li></ol><p>批量删除可以使用<code>git stash clear</code></p><ol><li><code>git stash pop</code> 恢复的同时删除stash内容</li></ol><p>当有多次stash时：</p><p>可先 git stash list查看id，然后恢复指定stash </p><p><code>git stash apply &lt;stash-id&gt;</code></p><p>如：<code>git stash apply stash@{0}</code></p><h4 id="查看远程仓库信息"><a href="#查看远程仓库信息" class="headerlink" title="查看远程仓库信息"></a>查看远程仓库信息</h4><p>git remote</p><h4 id="显示更详细信息"><a href="#显示更详细信息" class="headerlink" title="显示更详细信息"></a>显示更详细信息</h4><p>git remote -v</p><p>注：若没有推送权限，将看不到push地址</p><h4 id="远程修改抓取"><a href="#远程修改抓取" class="headerlink" title="远程修改抓取"></a>远程修改抓取</h4><p>推送本地修改之前必须要先做的</p><p>抓取分支<br><code>git pull</code><br>注：建立本地与远程对应分支连接后再拉取，无需任何分支名称。</p><h4 id="推送分支"><a href="#推送分支" class="headerlink" title="推送分支"></a>推送分支</h4><p>指定本地分支推送到远程库<br>git push origin <branch-name></branch-name></p><p>如：dev分支</p><p>git push origin dev<br>注：若推送失败，先用git pull抓取远程的新提交</p><p><code>git push</code><br>注：从指定远程库分支抓取最新提交，若有冲突，先手动解决冲突，再push</p><h4 id="多人协作的工作模式通常是这样："><a href="#多人协作的工作模式通常是这样：" class="headerlink" title="多人协作的工作模式通常是这样："></a>多人协作的工作模式通常是这样：</h4><ol><li>试图用 git push origin bracn-name 推送自己的修改</li><li>如果推送失败，先用 git pull试图合并</li><li>如果合并有冲突，则解决冲突，并在本地提交</li><li>没有或解决掉冲突后，再用git push origin branch-name推送就可以成功</li></ol><h3 id="标签管理"><a href="#标签管理" class="headerlink" title="标签管理"></a>标签管理</h3><p>tag与commit-id绑定，便于查找</p><h4 id="查看标签"><a href="#查看标签" class="headerlink" title="查看标签"></a>查看标签</h4><p><code>git tag</code><br>查看所有标签</p><h4 id="打新标签"><a href="#打新标签" class="headerlink" title="打新标签"></a>打新标签</h4><ol><li><p>切换到需要打标签的分支 </p><p>先查看分支信息<code>git branch</code></p><p>切换指定分支<code>git checkout &lt;branch&gt;</code></p></li><li><p>git tag <tagname></tagname></p></li></ol><p>新标签默认打在HEAD,既最新提交的commit上</p><p>指定提交记录打标签:</p><ol><li>查找历史提交commit id<br><code>git log --pretty=oneline --abbrev-commit</code></li><li>再打标签<br><code>git tag &lt;tagname&gt; commit-id</code></li></ol><p>标签默认按字母排序，不按时间</p><h4 id="查看标签信息"><a href="#查看标签信息" class="headerlink" title="查看标签信息"></a>查看标签信息</h4><p><code>git show &lt;tagname&gt;</code></p><h4 id="创建带有说明的标签"><a href="#创建带有说明的标签" class="headerlink" title="创建带有说明的标签"></a>创建带有说明的标签</h4><p>-a指定标签名，-m指定说明文字<br><code>git tag -a &lt;tagname&gt; -m &quot;infomation&quot; commit id</code></p><p>用私钥签名标签 -s<br><code>git tag -s &lt;tagname&gt; -m &quot;infomation&quot; commit id</code></p><p><strong>说明：</strong></p><p>签名采用PGP，必须先安装gpg(GnuPG)，若没找多或没有gpg密钥对，就会报错<br>gpg: signing failed: secret key not available<br>error: gpg failed to sign the data<br>error: unable to sign the tag<br>如果报错，请参考GnuPG帮助文档配置Key。<br>git show <tagname> 可以看到GPG签名信息</tagname></p><h4 id="删除标签"><a href="#删除标签" class="headerlink" title="删除标签"></a>删除标签</h4><p>git tag -d <tagname></tagname></p><h4 id="将标签推送到远程"><a href="#将标签推送到远程" class="headerlink" title="将标签推送到远程"></a>将标签推送到远程</h4><p>git push origin <tagname><br>一次性推送全部尚未推送到远程的本地标签<br>git push origin –tags</tagname></p><h4 id="删除远程标签"><a href="#删除远程标签" class="headerlink" title="删除远程标签"></a>删除远程标签</h4><p>1.先删除本地</p><p>git tag -d <tagname></tagname></p><p>2.从远程删除,push命令</p><p>git push origin :refs/tags/<tagname></tagname></p><p>3.检查远程删除结果，登录GitHub查看</p><h2 id="Git-配置"><a href="#Git-配置" class="headerlink" title="Git 配置"></a>Git 配置</h2><h3 id="自定义Git"><a href="#自定义Git" class="headerlink" title="自定义Git"></a>自定义Git</h3><p>让Git显示颜色<br>    git config –global color.ui true</p><h3 id="忽略特殊文件"><a href="#忽略特殊文件" class="headerlink" title="忽略特殊文件"></a>忽略特殊文件</h3><p>1.编写.gitignore<br>在Git工作区根目录创建特殊的.gitignore文件，添加要忽略的文件名</p><p>2..gitignore 文件要放入版本库，并且可以对.gitignore做版本管理<br>检验.gitignore的标准是git status命令是不是说working directory clean</p><p>检查规则是否有误，是否忽略了指定具体文件：<br>    git check-ignore -v <file></file></p><p>添加被.gitignore忽略的文件到版本库，强制性</p><p>git add -f <file>  </file></p><p>忽略文件的原则是：</p><pre><code>1. 忽略操作系统自动生成的文件，比如缩略图等；2. 忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；3. 忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件</code></pre><h3 id="命令别名"><a href="#命令别名" class="headerlink" title="命令别名"></a>命令别名</h3><pre><code>git config --global alias.</code></pre><p>如 ：st表示status git config –global alias.st status<br>    co表示checkout<br>    ci 表示commit<br>    br 表示branch</p><h4 id="撤销更改别名配置：unstage"><a href="#撤销更改别名配置：unstage" class="headerlink" title="撤销更改别名配置：unstage"></a>撤销更改别名配置：unstage</h4><p>原命令：    <code>git reset HEAD file</code><br>    git config –global alias.unstage ‘rest HEAD’</p><p>更改后：<code>git unstage &lt;file&gt;</code></p><h4 id="显示最后一次提交的信息-git-last"><a href="#显示最后一次提交的信息-git-last" class="headerlink" title="显示最后一次提交的信息 git last"></a>显示最后一次提交的信息 git last</h4><pre><code>git config --global alias.last &apos;log -1&apos;</code></pre><p>更改后：<code>git last</code></p><h4 id="配置log"><a href="#配置log" class="headerlink" title="配置log"></a>配置log</h4><pre><code>git config --global alias.lg &quot;log --color --graph --pretty=format:&apos;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&apos; --abbrev-commit&quot;</code></pre><p>更改后：<code>git lg</code></p><p>注：–global针对当前用户起作用，不加只对当前仓库起作用<br>每个仓库的配置文件位置：.git/config</p><h4 id="查看：cat-git-config"><a href="#查看：cat-git-config" class="headerlink" title="查看：cat .git/config"></a>查看：cat .git/config</h4><p>配置的别名在[alias]后</p><p>当前用户的Git配置文件在用户主目录下的一个隐藏文件.gitconfig<br>查看：<code>cat .gitconfig</code></p><h2 id="使用GitHub"><a href="#使用GitHub" class="headerlink" title="使用GitHub"></a>使用GitHub</h2><p>GitHub 可以任意Fork开源仓库</p><p>自由拥有Fork后的自己帐号下的仓库的读写权限</p><p>自由从自己帐号下clone仓库才能推送修改</p><h3 id="克隆-1"><a href="#克隆-1" class="headerlink" title="克隆"></a>克隆</h3><p>如<code>git clone git@github.com: michaelliao/bookstrap.git</code></p><p>可以推送pull request 给官方仓库贡献代码,官方决定是否接受</p><h3 id="删除已有的GitHub远程库"><a href="#删除已有的GitHub远程库" class="headerlink" title="删除已有的GitHub远程库"></a>删除已有的GitHub远程库</h3><p> <code>git remote rm origin</code></p><h3 id="关联远程库"><a href="#关联远程库" class="headerlink" title="关联远程库"></a>关联远程库</h3><p><code>git remote add origin git@gitee.com:path/&lt;name&gt;.git</code></p><h2 id="码云"><a href="#码云" class="headerlink" title="码云"></a>码云</h2><p>国内Git 托管服务 gitee.com</p><p>同时关联多个远程库</p><p>git的远程库默认名称是origin ,多个远程库需要不同的名称标识</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>已关联了GitHub远程库的情况下：</p><p>1.先删除已关联的名为origin的远程库</p><p><code>git remote rm origin</code></p><p>2.关联GitHub远程库</p><p><code>git remote add github git@github.com:路径/&lt;name&gt;.git</code></p><p>3.关联码云远程库</p><p><code>git remote add gitee git@gitee.com:路径/&lt;name&gt;.git</code></p><p>此时查看远程库信息，可以看到两个远程库</p><p><code>git remote -v</code></p><p>推送到GitHub</p><p><code>git push github master</code></p><p>推送到码云</p><p><code>git push gitee master</code></p><h2 id="搭建Git服务器"><a href="#搭建Git服务器" class="headerlink" title="搭建Git服务器"></a>搭建Git服务器</h2><p>使用Linux机器。推荐Ubuntu 或Debian</p><p>假设有sudo权限的用户帐号</p><p>1.安装<code>git sudo apt-get install git</code></p><p>2.创建git用户，运行git服务 <code>sudo adduser git</code></p><p>3.创建证书登录<br>收集所有需要登录的用户的公钥，.id_ras.pub文件，导入到/home/git/.ssh/authorized_keys文件，一行一个</p><p>4.初始化Git仓库，选定一个目录作为Git仓库，假设为/srv/sample.git<br>在/srv目录下输入 sudo git init –bare sample.git<br>会创建一个裸仓库，没有工作区，通常以.git结尾，将owner改为git<br>    sudo chown -R git:git sample.git</p><p>5.禁用shell登录，出于安全考虑，git用户不允许登录shell,通过编辑/ect/passwd文件完成<br>​<br>    git:x:1001:1001:,,,:/home/git:/bin/bash<br>改为<br>    git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</p><p>git用户可以正常通过ssh使用git，因为我们为git用户指定的git-shell每次一登录就自动退出</p><p>克隆远程仓库<br>    git clone git@server:/srv/sample.git</p><pre><code>* 搭建Git服务器非常简单，通常10分钟即可完成；* 要方便管理公钥，用Gitosis；* 要像SVN那样变态地控制权限，用Gitolite。</code></pre><h3 id="扩展："><a href="#扩展：" class="headerlink" title="扩展："></a>扩展：</h3><p>Git 与Android studio 的关联<br>日常工作中可以通过studio的命令行来操作，减少窗口切换，省时省力</p><p>安装完git后，将git路径添加进studio：<br>studio —setting—Version Control—Git—&gt;<br><img src="https://i.imgur.com/XHSkAGy.png" alt=""><br>Test之后显示Successfully表明成功<br>Terminal窗口内测试一下：输入git</p><p><img src="https://i.imgur.com/e9fLAD1.png" alt=""><br>搞定</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言：&lt;br&gt;跟随大神脚步，&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;廖雪峰 Git 教程&lt;/a&gt;&lt;br&gt;学好Git,早日掌握代码托管利器&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="原创" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Git" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/Git/"/>
    
    
      <category term="Git" scheme="https://tianbozhang.coding.me/tags/Git/"/>
    
      <category term="基础" scheme="https://tianbozhang.coding.me/tags/%E5%9F%BA%E7%A1%80/"/>
    
      <category term="总结" scheme="https://tianbozhang.coding.me/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令及一些问题 整理</title>
    <link href="https://tianbozhang.coding.me/git-skill.html"/>
    <id>https://tianbozhang.coding.me/git-skill.html</id>
    <published>2018-01-11T03:45:00.000Z</published>
    <updated>2018-01-31T08:16:11.458Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">廖雪峰Git教程</a><br>基于学习Git过程进行总结，多思考多总结才能上天</p></blockquote><a id="more"></a><h1 id="git-常用命令"><a href="#git-常用命令" class="headerlink" title="git 常用命令"></a>git 常用命令</h1><h2 id="本地仓库普通操作"><a href="#本地仓库普通操作" class="headerlink" title="本地仓库普通操作"></a>本地仓库普通操作</h2><h3 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h3><p><code>git init</code></p><h3 id="添加文件到缓存区"><a href="#添加文件到缓存区" class="headerlink" title="添加文件到缓存区"></a>添加文件到缓存区</h3><p><code>git add file</code></p><h3 id="添加到仓库"><a href="#添加到仓库" class="headerlink" title="添加到仓库"></a>添加到仓库</h3><p><code>git commit -m &quot;commint describtion&quot;</code></p><h3 id="撤销修改或清除缓存区"><a href="#撤销修改或清除缓存区" class="headerlink" title="撤销修改或清除缓存区"></a>撤销修改或清除缓存区</h3><p><code>git reset /git reset HEAD file</code></p><h3 id="丢弃或撤销修改"><a href="#丢弃或撤销修改" class="headerlink" title="丢弃或撤销修改"></a>丢弃或撤销修改</h3><p><code>git checkout -- file</code></p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p><code>git rm file</code><br><em>相当于git rm后git add</em></p><h3 id="撤销删除操作"><a href="#撤销删除操作" class="headerlink" title="撤销删除操作"></a>撤销删除操作</h3><p><code>git reset</code><br><code>git checkout --file</code></p><h3 id="查看指定文件"><a href="#查看指定文件" class="headerlink" title="查看指定文件"></a>查看指定文件</h3><p><code>git cat file</code></p><h3 id="比对工作区与版本库"><a href="#比对工作区与版本库" class="headerlink" title="比对工作区与版本库"></a>比对工作区与版本库</h3><p><code>git diff</code></p><h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><p> <code>git log</code></p><h3 id="操作历史"><a href="#操作历史" class="headerlink" title="操作历史"></a>操作历史</h3><p><code>git reflog</code></p><h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><p><code>git reset --hard commit-id</code></p><p>或 <code>git reset --hard HEAD-id</code>相当于指定当前HEAD到指定版本</p><h3 id="创建并指向分支"><a href="#创建并指向分支" class="headerlink" title="创建并指向分支"></a>创建并指向分支</h3><p><code>git checkout -b &lt;branch&gt;</code></p><h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><p><code>git checkout &lt;branch&gt;</code></p><h3 id="查看分支信息"><a href="#查看分支信息" class="headerlink" title="查看分支信息"></a>查看分支信息</h3><p><code>git branch</code><br>详细信息 <code>git branch -v</code></p><h3 id="合并指定分支到当前分支"><a href="#合并指定分支到当前分支" class="headerlink" title="合并指定分支到当前分支"></a>合并指定分支到当前分支</h3><p><code>git merge &lt;branch&gt;</code></p><h3 id="普通模式合并，保留分支信息"><a href="#普通模式合并，保留分支信息" class="headerlink" title="普通模式合并，保留分支信息"></a>普通模式合并，保留分支信息</h3><p><code>git merge --no-ff -m &quot;&quot; &lt;branch&gt;</code>   此信息会在远程显示</p><h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><p><code>git branch -d &lt;branch&gt;</code></p><h3 id="临时保存工作区现场"><a href="#临时保存工作区现场" class="headerlink" title="临时保存工作区现场"></a>临时保存工作区现场</h3><p><code>git stash</code></p><h3 id="列出工作区现场"><a href="#列出工作区现场" class="headerlink" title="列出工作区现场"></a>列出工作区现场</h3><p><code>git list</code></p><h3 id="删除现场并恢复工作区"><a href="#删除现场并恢复工作区" class="headerlink" title="删除现场并恢复工作区"></a>删除现场并恢复工作区</h3><p><code>git stash pop</code></p><h3 id="添加当前工作区全部文件到缓存区"><a href="#添加当前工作区全部文件到缓存区" class="headerlink" title="添加当前工作区全部文件到缓存区"></a>添加当前工作区全部文件到缓存区</h3><p><code>git add .</code></p><h3 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h3><p><code>ssh -T git@github.com</code></p><h2 id="远程库与本地库相关"><a href="#远程库与本地库相关" class="headerlink" title="远程库与本地库相关"></a>远程库与本地库相关</h2><h3 id="添加远程版本库"><a href="#添加远程版本库" class="headerlink" title="添加远程版本库"></a>添加远程版本库</h3><p><code>git remote add origin git@github.com:路径/版本库.git</code></p><h3 id="克隆远程分支库"><a href="#克隆远程分支库" class="headerlink" title="克隆远程分支库"></a>克隆远程分支库</h3><p><code>git clone git@server:path/repo.git</code></p><h3 id="本地建立远程库对应分支"><a href="#本地建立远程库对应分支" class="headerlink" title="本地建立远程库对应分支"></a>本地建立远程库对应分支</h3><p><code>git checkout -b branch origin/branch</code></p><h3 id="从远程库拉取最新提交"><a href="#从远程库拉取最新提交" class="headerlink" title="从远程库拉取最新提交"></a>从远程库拉取最新提交</h3><p><code>git pull</code></p><h3 id="关联并推送本地版本库到远程库"><a href="#关联并推送本地版本库到远程库" class="headerlink" title="关联并推送本地版本库到远程库"></a>关联并推送本地版本库到远程库</h3><p><code>git push -u origin master</code></p><h3 id="本地分支推送到远程库"><a href="#本地分支推送到远程库" class="headerlink" title="本地分支推送到远程库"></a>本地分支推送到远程库</h3><p><code>git push</code></p><h3 id="查看远程仓库状态"><a href="#查看远程仓库状态" class="headerlink" title="查看远程仓库状态"></a>查看远程仓库状态</h3><p><code>git remote show origin</code><br><code>git remote -v</code></p><h3 id="本地分支与远程分支比对"><a href="#本地分支与远程分支比对" class="headerlink" title="本地分支与远程分支比对"></a>本地分支与远程分支比对</h3><p><code>git diff &lt;branch&gt; origin/&lt;branch&gt;</code></p><h3 id="强制远程库覆盖本地"><a href="#强制远程库覆盖本地" class="headerlink" title="强制远程库覆盖本地"></a>强制远程库覆盖本地</h3><p><code>git fetch --all</code><br><code>git reset --hard origin/master</code><br><code>git pull</code></p><h3 id="更新远程信息"><a href="#更新远程信息" class="headerlink" title="更新远程信息"></a>更新远程信息</h3><p><code>git remote update</code></p><h3 id="追踪远程分支"><a href="#追踪远程分支" class="headerlink" title="追踪远程分支"></a>追踪远程分支</h3><p><code>git fetch origin branch-name</code></p><h3 id="建立本地与远程分支的连接"><a href="#建立本地与远程分支的连接" class="headerlink" title="建立本地与远程分支的连接"></a>建立本地与远程分支的连接</h3><p><code>git branch --set-upstream-to &lt;branch&gt; origin/&lt;branch&gt;</code></p><h3 id="克隆指定分支"><a href="#克隆指定分支" class="headerlink" title="克隆指定分支"></a>克隆指定分支</h3><p><code>git clone -b &lt;branch&gt; git@server-name:path/&lt;repo-name&gt;.git</code></p><h3 id="合并冲突"><a href="#合并冲突" class="headerlink" title="合并冲突"></a>合并冲突</h3><p>手动解决冲突之后 冲突文件–&gt;git-&gt;Resolve Conflicts</p><h1 id="实战问题及解决方式"><a href="#实战问题及解决方式" class="headerlink" title="实战问题及解决方式"></a>实战问题及解决方式</h1><h2 id="本地相关"><a href="#本地相关" class="headerlink" title="本地相关"></a>本地相关</h2><h3 id="commit-后无提交说明"><a href="#commit-后无提交说明" class="headerlink" title="commit 后无提交说明"></a>commit 后无提交说明</h3><p>遇到的问题：<code>Vim: Caught deadly signal SEGV</code>,无法继续操作git<br>?只能重启git窗口？</p><p>退出log界面：q键退出</p><h3 id="删除部分log"><a href="#删除部分log" class="headerlink" title="删除部分log?"></a>删除部分log?</h3><p>git reset –hard commit-id： HEAD指向commit-id版本，log只显示当前HEAD版本 ,回退全部后仍可显示全部log</p><h3 id="删除全部log-待研究"><a href="#删除全部log-待研究" class="headerlink" title="删除全部log?待研究"></a>删除全部log?待研究</h3><h3 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h3><p><code>git --help</code></p><p>指定命令帮助 <code>git log -help</code></p><p><code>git reset --hard HEAD-id</code>：回退到指定HEAD版本，id可通过git reflog查看</p><h3 id="版本回退："><a href="#版本回退：" class="headerlink" title="版本回退："></a>版本回退：</h3><p><code>git reset HEAD^</code></p><ol><li><p>无–hard时：<br><code>Unstaged changes after reset: M &lt;file&gt;;</code></p></li><li><p>有–hard时：<br>完整命令： <code>git reset --hard HEAD^</code><br><code>HEAD is now at &lt;commit-id&gt;</code></p></li></ol><p>结果HEAD都指向指定版本</p><ol><li><p>未commit的：<br>checkout – <file>提示文件匹配不到，需reset 或rest HEAD <file> 清除缓存区之后才能撤销，-f强制删除 无法撤销</file></file></p></li><li><p>已commit的：<br>reset后checkout也无法撤销，想撤销只能reset –hard commit-id或reset –hard HEAD回退到提交删除之前，无法回退指定文件</p></li></ol><p>添加远程仓库时提示：<code>fatal: remote origin already exists.</code></p><p>进入vi编辑器<br>命令：<code>vi</code></p><p>.git/config删除remote “origin”</p><p>完成后退出vi编辑器:</p><p>ESC后 shift+zz保存 退出</p><h2 id="远程库与本地库操作相关"><a href="#远程库与本地库操作相关" class="headerlink" title="远程库与本地库操作相关"></a>远程库与本地库操作相关</h2><p><strong>版本库内文件，同一路径下的多个分支共享，分支提交，合并到主线</strong></p><p><strong>远程库默认名称根据我们初次连接远程库时创建的为准</strong></p><h3 id="git-pull-提示"><a href="#git-pull-提示" class="headerlink" title="git pull 提示"></a>git pull 提示</h3><p><code>there is no tracking information for the current branch</code>说明本地分支和远程分支的连接关系没有创建</p><h3 id="git-pull提示"><a href="#git-pull提示" class="headerlink" title="git pull提示"></a>git pull提示</h3><p><code>error: The following untracked working tree files would be overwritten by merge:.....</code></p><p><code>Please move or remove them before you can merge.</code></p><p><code>Aborting</code></p><p>处理： <code>git clean -d -fx &quot;&quot;</code><br>其中<br>x —–删除忽略文件已经对git来说不识别的文件<br>d —–删除未被添加到git的路径中的文件<br>f —–强制运行</p><h2 id="本地与远程操作流程"><a href="#本地与远程操作流程" class="headerlink" title="本地与远程操作流程"></a>本地与远程操作流程</h2><p>进入指定目录后<br>若无仓库时初始化仓库<br>关联远程仓库:<code>git remote add origin git@server-name:path/&lt;repo-name&gt;.git</code><br>查看远程仓库信息：<br>git remote -v</p><h3 id="两种情况："><a href="#两种情况：" class="headerlink" title="两种情况："></a>两种情况：</h3><h4 id="未clone过远程分支时："><a href="#未clone过远程分支时：" class="headerlink" title="未clone过远程分支时："></a>未clone过远程分支时：</h4><p><code>git remote show origin</code></p><p><code>git remote update</code></p><p><code>git pull</code></p><p>以上三个命令提示：</p><p><code>GitLab: The project you were looking for could not be found.</code></p><p><code>fatal: Could not read from remote repository.</code></p><p><code>Please make sure you have the correct access rights and the repository exists.</code></p><h5 id="checkout-b-lt-branch-gt-lt-origin-gt-lt-branch-gt-时："><a href="#checkout-b-lt-branch-gt-lt-origin-gt-lt-branch-gt-时：" class="headerlink" title="checkout -b &lt;branch&gt; &lt;origin&gt;/&lt;branch&gt;时："></a><code>checkout -b &lt;branch&gt; &lt;origin&gt;/&lt;branch&gt;</code>时：</h5><p> 提示：<br><code>fatal: &#39;origin/branch&#39; is not a commit and a branch &#39;branch&#39; cannot be created from it</code></p><h5 id="checkout-lt-branch-gt-lt-origin-gt-lt-branch-gt-时"><a href="#checkout-lt-branch-gt-lt-origin-gt-lt-branch-gt-时" class="headerlink" title="checkout &lt;branch&gt; &lt;origin&gt;/&lt;branch&gt;时"></a><code>checkout &lt;branch&gt; &lt;origin&gt;/&lt;branch&gt;</code>时</h5><p>提示：<br><code>error: pathspec &#39;branch&#39; did not match any file(s) known to git.</code></p><p><code>error: pathspec &#39;origin/branch&#39; did not match any file(s) known to git.</code></p><p>此时只能克隆<br><code>git clone git@server-name:path/&lt;repo-name&gt;.git</code> 获取仓库再操作</p><blockquote><p>待研究验证</p></blockquote><h3 id="推送代码出现错误"><a href="#推送代码出现错误" class="headerlink" title="推送代码出现错误"></a>推送代码出现错误</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u remote master</span><br><span class="line">error: src refspec master does not match any.</span><br><span class="line">error: failed to push some refs to &apos;git@git.coding.net:username/repo.git&apos;</span><br></pre></td></tr></table></figure><p>解决：<br>提交本地代码，重新推送<br>单仓库指向：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u coding master</span><br></pre></td></tr></table></figure></p><h4 id="已克隆过远程分支时："><a href="#已克隆过远程分支时：" class="headerlink" title="已克隆过远程分支时："></a>已克隆过远程分支时：</h4><p><strong>已建立本地仓库与远程仓库对应连接，默认为master分支，需要切换到已clone的仓库代码路径，继续操作</strong></p><p><code>git remote show origin</code> 提示 tracked<br><code>git remote update</code><br><code>git pull</code>    无最新提交提示already up-to-date<br><code>git fetch</code><br>以上命令均可正常操作</p><h4 id="后续操作"><a href="#后续操作" class="headerlink" title="后续操作"></a>后续操作</h4><p>建立并切换到与远程库对应本地分支<br><code>git checkout -b branch origin/branch</code>，<br>变更已clone过的master分支代码为指定分支代码</p><p><code>git checkout master</code> 切换到master分支，代码重下载</p><p>分支切换过程工作区代码会跟随分支变动</p><p><code>git status</code> 查看仓库状态，未修改工作区情况下仓库状态不变 working tree clean</p><p>追踪远程库<br><code>git fetch origin branch</code><br>拉取最新提交<code>git pull origin branch</code>指定分支或git pull默认当前对应分支<br>建立连接<code>git branch --set-upstream-to &lt;branch&gt; origin/&lt;branch&gt;</code></p><p>问题：遇到过 <code>git pull</code> 及<code>git remote update</code> 不拉取提示new 且未追踪，待复现</p><h3 id="注意：实际开发中需要"><a href="#注意：实际开发中需要" class="headerlink" title="注意：实际开发中需要"></a>注意：实际开发中需要</h3><p>切换分支之前需commit工作区到本地分支仓库，提交之后再切换分支，仓库代码将会有所区别</p><p><code>git stash</code>临时保存工作区后，需记住stash id，再切换分支操作，切回远分支后通过git</p><p><code>stash pop</code>或<code>stash apply &lt;stashid&gt;</code>恢复原工作区</p><h3 id="谨记："><a href="#谨记：" class="headerlink" title="谨记："></a>谨记：</h3><p>本地修改分支：用于本地修改</p><p>远程同步分支：用于pull及push；本地修改分支合并到该分支，再push</p><p>切换分支前提交或临时保存本地修改分支修改内容到本地仓库，以便切回该分支继续修改</p><h3 id="日常git-代码操作流程"><a href="#日常git-代码操作流程" class="headerlink" title="日常git 代码操作流程"></a>日常git 代码操作流程</h3><h4 id="本地仓库已与远程仓库关联后："><a href="#本地仓库已与远程仓库关联后：" class="headerlink" title="本地仓库已与远程仓库关联后："></a>本地仓库已与远程仓库关联后：</h4><p>查看远程仓库信息 <code>git remote show origin</code><br>追踪最新提交<code>git fetch origin branch</code><br>拉取最新提交 <code>git pull</code></p><h4 id="本地仓库未与远程关联时："><a href="#本地仓库未与远程关联时：" class="headerlink" title="本地仓库未与远程关联时："></a>本地仓库未与远程关联时：</h4><p>关联本地仓库到远程仓库，<br>clone远程分支，<br>git fetch追踪，<br>git pull拉取<br>git push</p><p>提示：<br><code>fatal: The upstream branch of your current branch does not match</code><br><code>the name of your current branch.  To push to the upstream branch</code><br><code>on the remote, use</code><br>    <code>git push origin HEAD:&lt;branch&gt;</code><br><code>To push to the branch of the same name on the remote, use    git push origin &lt;branch&gt;</code></p><h4 id="完整提交流程"><a href="#完整提交流程" class="headerlink" title="完整提交流程"></a>完整提交流程</h4><p><code>git stash</code>保存本地工作区</p><p><code>git checkout &lt;远程branch&gt;</code>切换到远程分支</p><p><code>git pull</code>拉取远程提交</p><p><code>git checkout &lt;本地branch&gt;</code>切回本地</p><p><code>git merge --no-ff -m &quot;&quot; &lt;远程branch&gt;</code>远程分支合并到本地，解决冲突</p><p><code>git checkout &lt;远程branch&gt;</code></p><p><code>git merge --no-ff -m &quot;&quot; &lt;本地branch&gt;</code>本地分支合并到远程</p><p><code>git push origin HEAD:&lt;branch&gt;</code>或<code>git push</code></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;廖雪峰Git教程&lt;/a&gt;&lt;br&gt;基于学习Git过程进行总结，多思考多总结才能上天&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="原创" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/"/>
    
      <category term="Git" scheme="https://tianbozhang.coding.me/categories/%E5%8E%9F%E5%88%9B/Git/"/>
    
    
      <category term="解决方案" scheme="https://tianbozhang.coding.me/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
      <category term="Git" scheme="https://tianbozhang.coding.me/tags/Git/"/>
    
      <category term="总结" scheme="https://tianbozhang.coding.me/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="技能" scheme="https://tianbozhang.coding.me/tags/%E6%8A%80%E8%83%BD/"/>
    
  </entry>
  
</feed>
